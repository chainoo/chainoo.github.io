{"updated_at": "2021-01-25T09:00:01Z", "total": 81, "data": [{"name": "dcrd v1.6.0", "tag_name": "release-v1.6.0", "html_url": "https://github.com/decred/dcrd/releases/tag/release-v1.6.0", "repo_url": "https://github.com/decred/dcrd", "body": "# dcrd v1.6.0\r\n\r\nThis release of dcrd introduces a large number of updates.  Some of the key highlights are:\r\n\r\n* A new consensus vote agenda which allows the stakeholders to decide whether or not to activate support for a decentralized treasury\r\n* Aggregate fee transaction selection in block templates (Child Pays For Parent)\r\n* Improved peer discovery via HTTPS seeding with filtering capabilities\r\n* Major performance enhancements for signature validation and other cryptographic operations\r\n* Approximately 15% less overall resident memory usage\r\n* Proactive signature cache eviction\r\n* Improved support for single-party Schnorr signatures\r\n* Ticket exhaustion prevention\r\n* Various updates to the RPC server such as:\r\n  * A new method to retrieve the current treasury balance\r\n  * A new method to query treasury spend transaction vote details\r\n* Infrastructure improvements\r\n* Quality assurance changes\r\n\r\nFor those unfamiliar with the [voting process](https://docs.decred.org/governance/consensus-rule-voting/overview/) in Decred, all code needed in order to support a decentralized treasury is already included in this release, however it will remain dormant until the stakeholders vote to activate it.\r\n\r\nFor reference, the decentralized treasury work was originally proposed and approved for initial implementation via the following Politeia proposal:\r\n- [Decentralized Treasury Consensus Change](https://proposals.decred.org/proposals/c96290a2478d0a1916284438ea2c59a1215fe768a87648d04d45f6b7ecb82c3f)\r\n\r\nThe following Decred Change Proposal (DCP) describes the proposed changes in detail and provides a full technical specification:\r\n- [DCP0006](https://github.com/decred/dcps/blob/master/dcp-0006/dcp-0006.mediawiki)\r\n\r\n**It is important for everyone to upgrade their software to this latest release even if you don't intend to vote in favor of the agenda.**\r\n\r\n## Downgrade Warning\r\n\r\nThe database format in v1.6.0 is not compatible with previous versions of the software.  This only affects downgrades as users upgrading from previous versions will see a one time database migration.\r\n\r\nOnce this migration has been completed, it will no longer be possible to downgrade to a previous version of the software without having to delete the database and redownload the chain.\r\n\r\nThe database migration typically takes about 5 to 10 minutes on HDDs and 2 to 4 minutes on SSDs.\r\n\r\n## Notable Changes\r\n\r\n### Decentralized Treasury Vote\r\n\r\nA new vote with the id `treasury` is now available as of this release.  After upgrading, stakeholders may set their preferences through their wallet or Voting Service Provider's (VSP) website.\r\n\r\nThe primary goal of this change is to fully decentralize treasury spending so that it is controlled by the stakeholders via ticket voting.\r\n\r\nSee the initial [Politeia proposal](https://proposals.decred.org/proposals/c96290a2478d0a1916284438ea2c59a1215fe768a87648d04d45f6b7ecb82c3f) for more details.\r\n\r\n### Aggregate Fee Block Template Transaction Selection (Child Pays For Parent)\r\n\r\nThe transactions that are selected for inclusion in block templates that Proof-of-Work miners solve now prioritize the overall fees of the entire\r\ntransaction ancestor graph.\r\n\r\nThis is beneficial for both miners and end users as it:\r\n\r\n- Helps maximize miner profit by ensuring that unconfirmed transaction chains with higher aggregate fees are given priority over others with lower aggregate fees\r\n- Provides a mechanism for users to increase the priority of an unconfirmed transaction by spending its outputs with another transaction that pays higher fees\r\n\r\nThis is commonly referred to as Child Pays For Parent (CPFP) as the spending (\"child\") transaction is able to increase the priority of the spent (\"parent\") transaction.\r\n\r\n### HTTPS Seeding\r\n\r\nThe initial bootstrap process that contacts seeders to discover other nodes to connect to now uses a REST-based API over HTTPS.\r\n\r\nThis change will be imperceptible for most users, with the exception that it accelerates the process of finding suitable candidate nodes that support desired services, particularly in the case of recently-introduced services that have not yet achieved widespread adoption on the network.\r\n\r\nThe following are some key benefits of HTTPS seeders over the previous DNS-based seeders:\r\n\r\n- Support for non-standard ports\r\n- Advertisement of supported service\r\n- Better scalability both in terms of network load and new features\r\n- Native support for TLS-secured communication channels\r\n- Native support for proxies which allows the use of anonymous overlay networks such as Tor and I2P\r\n- No need for a large DNSSEC dependency surface\r\n- Uses better audited infrastructure\r\n- More secure\r\n- Increases flexibility\r\n\r\n### Signature Validation And Other Crypto Operation Optimizations\r\n\r\nThe underlying crypto code has been reworked to significantly improve its execution speed and reduce the number of memory allocations.  While this has more benefits than enumerated here, probably the most important ones for most stakeholders are:\r\n\r\n- Improved vote times since blocks and transactions propagate more quickly throughout the network\r\n- The initial sync process is around 15% faster\r\n\r\n### Proactive Signature Cache Eviction\r\n\r\nSignature cache entries that are nearly guaranteed to no longer be useful are now immediately and proactively evicted resulting in overall faster validation during steady state operation due to fewer cache misses.\r\n\r\nThe primary purpose of the cache is to avoid double checking signatures that are already known to be valid.\r\n\r\n### Orphan Transaction Relay Policy Refinement\r\n\r\nTransactions that spend outputs which are not known to nodes relaying them, known as orphan transactions, now have the same size restrictions applied to them as standard non-orphan transactions.\r\n\r\nThis ensures that transactions chains are not artificially hindered from relaying regardless of the order they are received.\r\n\r\nIn order to keep memory usage of the now potentially larger orphan transactions under control, more intelligent orphan eviction has been implemented and the maximum number of allowed orphans before random eviction occurs has been lowered.\r\n\r\nThese changes, in conjunction with other related changes, mean that nodes are better about orphan transaction management and thus missing ancestors will typically either be broadcast or mined fairly quickly resulting in fewer overall orphans and smaller actual run-time orphan pools.\r\n\r\n### Ticket Exhaustion Prevention\r\n\r\nMining templates that would lead to the chain becoming unrecoverable due to inevitable ticket exhaustion will no longer be generated.\r\n\r\nThis is primarily aimed at the testing networks, but it could also theoretically affect the main network in some far future if the demand for tickets were to ever dry up for some unforeseen reason.\r\n\r\n### New Initial State Protocol Messages (`getinitstate`/`initstate`)\r\n\r\nThis release introduces a pair of peer-to-peer protocol messages named `getinitstate` and `initstate` which support querying one or more pieces of information that are useful to acquire when a node first connects in a consolidated fashion.\r\n\r\nSome examples of the aforementioned information are the mining state as of the current tip block and, with the introduction of the decentralized treasury, any outstanding treasury spend transactions that are being voted on.\r\n\r\n### Mining State Protocol Messages Deprecated (`getminings`/`minings`)\r\n\r\nDue to the addition of the previously-described initial state peer-to-peer protocol messages, the `getminings` and `minings` protocol messages are now deprecated.  Use the new `getinitstate` and `initstate` messages with the `headblocks` and `headblockvotes` state types instead.\r\n\r\n### RPC Server Changes\r\n\r\nThe RPC server version as of this release is 6.2.0.\r\n\r\n#### New Treasury Balance Query RPC (`gettreasurybalance`)\r\n\r\nA new RPC named `gettreasurybalance` is now available to query the current balance of the decentralized treasury.  Please note that this requires the decentralized treasury vote to pass and become active, so it will return an appropriate error indicating the decentralized treasury is inactive until that time.\r\n\r\nSee the [gettreasurybalance JSON-RPC API Documentation](https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki#gettreasurybalance) for API details.\r\n\r\n#### New Treasury Spend Vote Query RPC (`gettreasuryspendvotes`)\r\n\r\nA new RPC named `gettreasuryspendvotes` is now available to query vote information about one or more treasury spend transactions.  Please note that this requires the decentralized treasury vote to pass and become active to produce a meaningful result since treasury spend transactions are invalid until that time.\r\n\r\nSee the [gettreasuryspendvotes JSON-RPC API Documentation](https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki#gettreasuryspendvotes) for API details.\r\n\r\n#### New Force Mining Template Regeneration RPC (`regentemplate`)\r\n\r\nA new RPC named `regentemplate` is now available which can be used to force the current background block template to be regenerated.\r\n\r\nSee the [regentemplate JSON-RPC API Documentation](https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki#regentemplate) for API details.\r\n\r\n#### New Unspent Transaction Output Set Query RPC (`gettxoutsetinfo`)\r\n\r\nA new RPC named `gettxoutsetinfo` is now available which can be used to retrieve statistics about the current global set of unspent transaction outputs (UTXOs).\r\n\r\nSee the [gettxoutsetinfo JSON-RPC API Documentation](https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki#gettxoutsetinfo) for API details.\r\n\r\n#### Updates to Peer Information Query RPC (`getpeerinfo`)\r\n\r\nThe results of the `getpeerinfo` RPC are now sorted by the `id` field.\r\n\r\nSee the [getpeerinfo JSON-RPC API Documentation](https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki#getpeerinfo) for API details.\r\n\r\n#### Enforced Results Limit on Transaction Search RPC (`searchrawtransactions`)\r\n\r\nThe maximum number of transactions returned by a single request to the `searchrawtransactions` RPC is now limited to 10,000 transactions.  This far exceeds the number of results for all typical cases; however, for the rare cases where it does not, the caller can make use of the `skip` parameter in subsequent requests to access additional data if they require access to more results.\r\n\r\nSee the [searchrawtransactions JSON-RPC API Documentation](https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki#searchrawtransactions) for API details.\r\n\r\n#### New Index Status Fields on Info Query RPC (`getinfo`)\r\n\r\nThe results of the `getinfo` RPC now include `txindex` and `addrindex` fields that specify whether or not the respective indexes are active.\r\n\r\nSee the [getinfo JSON-RPC API Documentation](https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki#getinfo) for API details.\r\n\r\n### Version 1 Block Filters Deprecated\r\n\r\nSupport for version 1 block filters is deprecated and is scheduled to be removed in the next release.   Use\r\n[version 2 block filters](https://github.com/decred/dcps/blob/master/dcp-0005/dcp-0005.mediawiki#version-2-block-filters) with their associated [block header commitment](https://github.com/decred/dcps/blob/master/dcp-0005/dcp-0005.mediawiki#block-header-commitments) and [inclusion proof](https://github.com/decred/dcps/blob/master/dcp-0005/dcp-0005.mediawiki#verifying-commitment-root-inclusion-proofs) instead.\r\n\r\n## Changelog\r\n\r\nThis release consists of 616 commits from 17 contributors which total to 526 files changed, 63090 additional lines of code, and 26279 deleted lines of code.\r\n\r\nAll commits since the last release may be viewed on GitHub [here](https://github.com/decred/dcrd/compare/release-v1.5.2...release-v1.6.0).\r\n\r\n### Protocol and network:\r\n\r\n- chaincfg: Add checkpoints for upcoming release ([decred/dcrd#2370](https://github.com/decred/dcrd/pull/2370))\r\n- multi: Introduce initial sync min known chain work ([decred/dcrd#2000](https://github.com/decred/dcrd/pull/2000))\r\n- chaincfg: Update min known chain work for release ([decred/dcrd#2371](https://github.com/decred/dcrd/pull/2371))\r\n- server: improve address discovery ([decred/dcrd#1838](https://github.com/decred/dcrd/pull/1838))\r\n- connmgr: unexport newConnReq ([decred/dcrd#1729](https://github.com/decred/dcrd/pull/1729))\r\n- connmgr: Add context to Dial and DialAddr ([decred/dcrd#1729](https://github.com/decred/dcrd/pull/1729))\r\n- dcrd: adapt to new connmgr API ([decred/dcrd#1729](https://github.com/decred/dcrd/pull/1729))\r\n- server: Simplify logic to bind listeners ([decred/dcrd#1972](https://github.com/decred/dcrd/pull/1972))\r\n- server: Fix peer state update ([decred/dcrd#1981](https://github.com/decred/dcrd/pull/1981))\r\n- chaincfg: introduce Seeder ([decred/dcrd#2017](https://github.com/decred/dcrd/pull/2017))\r\n- connmgr: add SeedAddrs ([decred/dcrd#2017](https://github.com/decred/dcrd/pull/2017))\r\n- server: seed with https versus dns ([decred/dcrd#2017](https://github.com/decred/dcrd/pull/2017))\r\n- chaincfg: deprecate type DNSSeed and Params.DNSSeeds ([decred/dcrd#2017](https://github.com/decred/dcrd/pull/2017))\r\n- connmgr: Allow pending outbound conn removal ([decred/dcrd#2033](https://github.com/decred/dcrd/pull/2033))\r\n- connmgr: Cleanup pending outbound conn removal ([decred/dcrd#2033](https://github.com/decred/dcrd/pull/2033))\r\n- connmgr: add Timeout config option ([decred/dcrd#2068](https://github.com/decred/dcrd/pull/2068))\r\n- connmgr: Remove deprecated DisableLog func ([decred/dcrd#2187](https://github.com/decred/dcrd/pull/2187))\r\n- connmgr: Remove deprecated SeedFromDNS func ([decred/dcrd#2187](https://github.com/decred/dcrd/pull/2187))\r\n- connmgr: Remove deprecated TorLookupIP func ([decred/dcrd#2187](https://github.com/decred/dcrd/pull/2187))\r\n- connmgr: Rename TorLookupIPContext to TorLookupIP ([decred/dcrd#2191](https://github.com/decred/dcrd/pull/2191))\r\n- connmgr: Rework HTTPS seeding ([decred/dcrd#2188](https://github.com/decred/dcrd/pull/2188))\r\n- server: ban peers on wire protocol errors ([decred/dcrd#2110](https://github.com/decred/dcrd/pull/2110))\r\n- dcrd: use a context w/ timeout when fetching seeds ([decred/dcrd#2337](https://github.com/decred/dcrd/pull/2337))\r\n- multi: Add decentralized treasury support ([decred/dcrd#2170](https://github.com/decred/dcrd/pull/2170))\r\n- wire: Introduce InitState messages ([decred/dcrd#2349](https://github.com/decred/dcrd/pull/2349))\r\n- peer: Handle InitState messages ([decred/dcrd#2349](https://github.com/decred/dcrd/pull/2349))\r\n- server: Send and respond to InitState msgs ([decred/dcrd#2349](https://github.com/decred/dcrd/pull/2349))\r\n- connmgr: limit addresses returned by seeders ([decred/dcrd#2337](https://github.com/decred/dcrd/pull/2337))\r\n- connmgr: Enforce max http seeder response size ([decred/dcrd#2338](https://github.com/decred/dcrd/pull/2338))\r\n- chaincfg: Make simnet votes standard txs ([decred/dcrd#2348](https://github.com/decred/dcrd/pull/2348))\r\n- server: Check whitelist before ban on read errs ([decred/dcrd#2362](https://github.com/decred/dcrd/pull/2362))\r\n- server: Consolidate ban disable/whitelist logic ([decred/dcrd#2363](https://github.com/decred/dcrd/pull/2363))\r\n- blockmanager: handle notfound messages from peers ([decred/dcrd#2253](https://github.com/decred/dcrd/pull/2253))\r\n- blockmanager: limit the requested maps ([decred/dcrd#2253](https://github.com/decred/dcrd/pull/2253))\r\n- server: increase ban score for notfound messages ([decred/dcrd#2253](https://github.com/decred/dcrd/pull/2253))\r\n- server: return whether addBanScore disconnected the peer ([decred/dcrd#2253](https://github.com/decred/dcrd/pull/2253))\r\n- blockchain: Whitelist DCP0005 violations ([decred/dcrd#2533](https://github.com/decred/dcrd/pull/2533))\r\n\r\n### Transaction relay (memory pool):\r\n\r\n- mempool: Implement orphan expiration ([decred/dcrd#1974](https://github.com/decred/dcrd/pull/1974))\r\n- mempool: Associated tag with orphan txns ([decred/dcrd#1982](https://github.com/decred/dcrd/pull/1982))\r\n- mempool: Expose RemoveOrphansByTag function ([decred/dcrd#1982](https://github.com/decred/dcrd/pull/1982))\r\n- server/mempool: Evict orphans on peer disconnect ([decred/dcrd#1982](https://github.com/decred/dcrd/pull/1982))\r\n- mempool: Modify default orphan tx policy ([decred/dcrd#1984](https://github.com/decred/dcrd/pull/1984))\r\n- mempool: Tighten allowed votes range for mainnet ([decred/dcrd#2047](https://github.com/decred/dcrd/pull/2047))\r\n- multi: Track tickets with non-approved inputs ([decred/dcrd#1852](https://github.com/decred/dcrd/pull/1852))\r\n- mempool: Remove deprecated ErrToRejectErr func ([decred/dcrd#2273](https://github.com/decred/dcrd/pull/2273))\r\n- mempool: Remove deprecated tx rule err reject code ([decred/dcrd#2273](https://github.com/decred/dcrd/pull/2273))\r\n- mempool: Track tspends separately ([decred/dcrd#2350](https://github.com/decred/dcrd/pull/2350))\r\n- mempool: Special case tspends for insertion ([decred/dcrd#2350](https://github.com/decred/dcrd/pull/2350))\r\n- mempool: Fix wrong tx type in error message ([decred/dcrd#2350](https://github.com/decred/dcrd/pull/2350))\r\n- dcrd: trickle mempool response to peer ([decred/dcrd#2359](https://github.com/decred/dcrd/pull/2359))\r\n- mempool: Allow treasury txn vers as standard ([decred/dcrd#2412](https://github.com/decred/dcrd/pull/2412))\r\n- mempool: Limit ancestor tracking in mempool ([decred/dcrd#2468](https://github.com/decred/dcrd/pull/2468))\r\n\r\n### Mining:\r\n\r\n- mining: Introduce PriorityInputser interface ([decred/dcrd#1966](https://github.com/decred/dcrd/pull/1966))\r\n- mining: Correct priority calcs for Decred sizes ([decred/dcrd#1967](https://github.com/decred/dcrd/pull/1967))\r\n- cpuminer: convert from a quit channel to a context ([decred/dcrd#1978](https://github.com/decred/dcrd/pull/1978))\r\n- mining: Prevent potential shutdown hang ([decred/dcrd#2196](https://github.com/decred/dcrd/pull/2196))\r\n- mining: Improve comment for UpdateBlockTime ([decred/dcrd#2276](https://github.com/decred/dcrd/pull/2276))\r\n- cpuminer: Refactor code to its own package ([decred/dcrd#2276](https://github.com/decred/dcrd/pull/2276))\r\n- cpuminer: Rework to use bg template generator ([decred/dcrd#2277](https://github.com/decred/dcrd/pull/2277))\r\n- cpuminer: Improve already discrete mining error ([decred/dcrd#2341](https://github.com/decred/dcrd/pull/2341))\r\n- mining: Remove unneeded disapproval check ([decred/dcrd#2397](https://github.com/decred/dcrd/pull/2397))\r\n- mining: Add ticket exhaustion check ([decred/dcrd#2398](https://github.com/decred/dcrd/pull/2398))\r\n- mempool/mining: Implement aggregate fee sorting ([decred/dcrd#1829](https://github.com/decred/dcrd/pull/1829))\r\n- multi: Decouple blockManager from mining ([decred/dcrd#1965](https://github.com/decred/dcrd/pull/1965))\r\n- multi: Hide CPUMiner WaitGroup ([decred/dcrd#1965](https://github.com/decred/dcrd/pull/1965))\r\n- multi: Move mining code into mining package ([decred/dcrd#1965](https://github.com/decred/dcrd/pull/1965))\r\n- mining: Remove unused methods ([decred/dcrd#2419](https://github.com/decred/dcrd/pull/2419))\r\n- mining: Update to latest block vers for trsy vote ([decred/dcrd#2402](https://github.com/decred/dcrd/pull/2402))\r\n- multi: add rpcserver.CPUMiner ([decred/dcrd#2286](https://github.com/decred/dcrd/pull/2286))\r\n- mining: Prevent panic in child prio item handling ([decred/dcrd#2435](https://github.com/decred/dcrd/pull/2435))\r\n\r\n### RPC:\r\n\r\n- rpcserver: decouple from server ([decred/dcrd#1730](https://github.com/decred/dcrd/pull/1730))\r\n- rpcserver: refactor listener logic to server ([decred/dcrd#1734](https://github.com/decred/dcrd/pull/1734))\r\n- rpcserver: Start separate internal package impl ([decred/dcrd#1954](https://github.com/decred/dcrd/pull/1954))\r\n- rpcserver: Move rpc connmgr iface to internal pkg ([decred/dcrd#1954](https://github.com/decred/dcrd/pull/1954))\r\n- rpcserver: Move rpc syncmgr iface to internal pkg ([decred/dcrd#1954](https://github.com/decred/dcrd/pull/1954))\r\n- rpcserver: Add logging to internal package ([decred/dcrd#1954](https://github.com/decred/dcrd/pull/1954))\r\n- rpcserver: Add basic initial package documentation ([decred/dcrd#1954](https://github.com/decred/dcrd/pull/1954))\r\n- rpcserver: Cleanup getvoteinfo RPC ([decred/dcrd#1964](https://github.com/decred/dcrd/pull/1964))\r\n- rpcclient: add automatic pinging ([decred/dcrd#1898](https://github.com/decred/dcrd/pull/1898))\r\n- rpcserver: Bump to 6.1.1 ([decred/dcrd#1970](https://github.com/decred/dcrd/pull/1970))\r\n- rpcserver: Warn on alt DNS names when certs exist ([decred/dcrd#1971](https://github.com/decred/dcrd/pull/1971))\r\n- rpcserver: replace close channel with context ([decred/dcrd#1976](https://github.com/decred/dcrd/pull/1976))\r\n- websocket: attach context to inHandler ([decred/dcrd#1976](https://github.com/decred/dcrd/pull/1976))\r\n- multi: add gettxoutsetinfo JSON-RPC ([decred/dcrd#1909](https://github.com/decred/dcrd/pull/1909))\r\n- rpcserver: Move error check for generate RPC ([decred/dcrd#1977](https://github.com/decred/dcrd/pull/1977))\r\n- rpcserver: add ping and pong handers ([decred/dcrd#1995](https://github.com/decred/dcrd/pull/1995))\r\n- multi: Introduce regentemplate command ([decred/dcrd#1979](https://github.com/decred/dcrd/pull/1979))\r\n- rpcwebsocket: Remove client from missed maps ([decred/dcrd#2027](https://github.com/decred/dcrd/pull/2027))\r\n- rpcwebsocket: Use nonblocking messages and ntfns ([decred/dcrd#2026](https://github.com/decred/dcrd/pull/2026))\r\n- multi: fix rpc listener error ([decred/dcrd#2065](https://github.com/decred/dcrd/pull/2065))\r\n- rpcserver: Correctly assign TxIn amounts ([decred/dcrd#2071](https://github.com/decred/dcrd/pull/2071))\r\n- rpcclient: use NewRequestWithContext ([decred/dcrd#2101](https://github.com/decred/dcrd/pull/2101))\r\n- rpcclient: Resurrect validateaddress/verifymessage ([decred/dcrd#2205](https://github.com/decred/dcrd/pull/2205))\r\n- rpcclient: Stop client on ctx done ([decred/dcrd#2198](https://github.com/decred/dcrd/pull/2198))\r\n- rpcclient: Add a lifetime to requests ([decred/dcrd#2198](https://github.com/decred/dcrd/pull/2198))\r\n- rpc: Add AddrIndex and TxIndex bools to getinfo ([decred/dcrd#2207](https://github.com/decred/dcrd/pull/2207))\r\n- rpcserver: Avoid panic during hash decode ([decred/dcrd#2213](https://github.com/decred/dcrd/pull/2213))\r\n- rpcserver: Internal err on gettxout utxo fetch err ([decred/dcrd#2214](https://github.com/decred/dcrd/pull/2214))\r\n- rpcserver: Correct JSON-RPC request unmarshal ([decred/dcrd#2218](https://github.com/decred/dcrd/pull/2218))\r\n- rpcserver: Limit getstakeversioninfo count ([decred/dcrd#2221](https://github.com/decred/dcrd/pull/2221))\r\n- rpcclient: Reregister work ntfns on reconnect ([decred/dcrd#2228](https://github.com/decred/dcrd/pull/2228))\r\n- rpcserver: Remove global config dependency ([decred/dcrd#2228](https://github.com/decred/dcrd/pull/2228))\r\n- rpcserver: Remove server.go dependencies ([decred/dcrd#2228](https://github.com/decred/dcrd/pull/2228))\r\n- rpcserver: Remove log config dependencies ([decred/dcrd#2228](https://github.com/decred/dcrd/pull/2228))\r\n- rpcserver: Remove PeerNotifier dependency ([decred/dcrd#2228](https://github.com/decred/dcrd/pull/2228))\r\n- rpcserver: Handle genesis in getblockchaininfo ([decred/dcrd#2237](https://github.com/decred/dcrd/pull/2237))\r\n- rpcserver: Export RPC server, config, and new ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- rpcserver: Export rpcwebsocket Notify functions ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- rpcserver: Move genCertPair to server.go ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- rpcserver: Rename RpcserverConfig to Config ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- rpcserver: Rename NewRPCServer to New ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- rpcserver: Rename RPCServer to Server ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- rpcserver: Remove math/rand init and import ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- multi: add SanityChecker interface ([decred/dcrd#2289](https://github.com/decred/dcrd/pull/2289))\r\n- rpcserver: Use func for semver string ([decred/dcrd#2290](https://github.com/decred/dcrd/pull/2290))\r\n- rpcserver: Use internal quit chan for ws sync ([decred/dcrd#2297](https://github.com/decred/dcrd/pull/2297))\r\n- rpcserver: Sort getpeerinfo results by ID ([decred/dcrd#2311](https://github.com/decred/dcrd/pull/2311))\r\n- rpcserver: Add Filterer and FiltererV2 interfaces ([decred/dcrd#2312](https://github.com/decred/dcrd/pull/2312))\r\n- rpcserver: Add exists upper bounds TODOs ([decred/dcrd#2291](https://github.com/decred/dcrd/pull/2291))\r\n- multi: Fix incorrect RPC comments ([decred/dcrd#2332](https://github.com/decred/dcrd/pull/2332))\r\n- server: Remove unnecessary rpcadaptors ([decred/dcrd#2347](https://github.com/decred/dcrd/pull/2347))\r\n- jsonrpc/types: Register rebroadcast as websocket ([decred/dcrd#2355](https://github.com/decred/dcrd/pull/2355))\r\n- jsonrpc: Add gettreasuryspendvotes types ([decred/dcrd#2351](https://github.com/decred/dcrd/pull/2351))\r\n- rpcclient: Add GetTreasurySpendVotes command ([decred/dcrd#2351](https://github.com/decred/dcrd/pull/2351))\r\n- rpcserver: Add support for gettreasuryspendvotes ([decred/dcrd#2351](https://github.com/decred/dcrd/pull/2351))\r\n- rpcserver: Forward HTTP server err msgs to logger ([decred/dcrd#2378](https://github.com/decred/dcrd/pull/2378))\r\n- rpcserver: Add searchrawtransactions count limit ([decred/dcrd#2386](https://github.com/decred/dcrd/pull/2386))\r\n- rpcserver: Fix race in TestHandleTSpendVotes ([decred/dcrd#2393](https://github.com/decred/dcrd/pull/2393))\r\n- rpcserver: Correct known wallet method handling ([decred/dcrd#2416](https://github.com/decred/dcrd/pull/2416))\r\n- rpcserver: Update known wallet RPC methods ([decred/dcrd#2416](https://github.com/decred/dcrd/pull/2416))\r\n- multi: Add TAdd support to getrawmempool ([decred/dcrd#2448](https://github.com/decred/dcrd/pull/2448))\r\n- config: Use the P-256 curve by default for RPC ([decred/dcrd#2459](https://github.com/decred/dcrd/pull/2459))\r\n- rpcserver: Correct getpeerinfo for peers w/o conn ([decred/dcrd#2465](https://github.com/decred/dcrd/pull/2465))\r\n- rpcserver: Correct treasury vote status handling ([decred/dcrd#2469](https://github.com/decred/dcrd/pull/2469))\r\n- multi: Add tx inputs treasurybase RPC support ([decred/dcrd#2470](https://github.com/decred/dcrd/pull/2470))\r\n- multi: Add tx inputs treasuryspend RPC support ([decred/dcrd#2472](https://github.com/decred/dcrd/pull/2472))\r\n- rpcserver: Fix count tspend votes in mined block ([decred/dcrd#2565](https://github.com/decred/dcrd/pull/2565))\r\n\r\n### dcrd command-line flags and configuration:\r\n\r\n- server: Add tlscurve config parameter ([decred/dcrd#1983](https://github.com/decred/dcrd/pull/1983))\r\n- config: Add flag to allow unsynced testnet mining ([decred/dcrd#2023](https://github.com/decred/dcrd/pull/2023))\r\n- config: add --dialtimeout defaulting to 30 seconds ([decred/dcrd#2068](https://github.com/decred/dcrd/pull/2068))\r\n- multi: add --peeridletimeout defaulting to 120s ([decred/dcrd#2067](https://github.com/decred/dcrd/pull/2067))\r\n\r\n### gencerts utility changes:\r\n\r\n- gencerts: Rewrite for additional use cases ([decred/dcrd#2425](https://github.com/decred/dcrd/pull/2425))\r\n- gencerts: Add missing newline for unknown algorithm error ([decred/dcrd#2427](https://github.com/decred/dcrd/pull/2427))\r\n- gencerts: Use the P-256 curve by default ([decred/dcrd#2461](https://github.com/decred/dcrd/pull/2461))\r\n\r\n### dcrctl utility changes:\r\n\r\n- multi: Split dcrctl to own repo and update docs ([decred/dcrd#2175](https://github.com/decred/dcrd/pull/2175))\r\n\r\n### Documentation:\r\n\r\n- rpcserver: Refactor and update documentation ([decred/dcrd#2066](https://github.com/decred/dcrd/pull/2066))\r\n- multi: replace godoc.org with pkg.go.dev ([decred/dcrd#2091](https://github.com/decred/dcrd/pull/2091))\r\n- LICENSE: update year ([decred/dcrd#2092](https://github.com/decred/dcrd/pull/2092))\r\n- hdkeychain: Fix references to methods in package docs ([decred/dcrd#2115](https://github.com/decred/dcrd/pull/2115))\r\n- secp256k1: Update field val docs to public facing ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- schnorr: Add README.md ([decred/dcrd#2149](https://github.com/decred/dcrd/pull/2149))\r\n- schnorr: Add doc.go ([decred/dcrd#2149](https://github.com/decred/dcrd/pull/2149))\r\n- ecdsa: Correct README.md documentation links ([decred/dcrd#2165](https://github.com/decred/dcrd/pull/2165))\r\n- secp256k1: Update README.md and doc.go ([decred/dcrd#2166](https://github.com/decred/dcrd/pull/2166))\r\n- docs: Update README.md to reflect reality ([decred/dcrd#2168](https://github.com/decred/dcrd/pull/2168))\r\n- schnorr: Correct a couple of typos in README.md ([decred/dcrd#2169](https://github.com/decred/dcrd/pull/2169))\r\n- docs: Clarify README.md installation guides ([decred/dcrd#2171](https://github.com/decred/dcrd/pull/2171))\r\n- docs: Remove outdated btcd refs from README.md ([decred/dcrd#2172](https://github.com/decred/dcrd/pull/2172))\r\n- docs: Remove stray trailing spaces in README.md ([decred/dcrd#2172](https://github.com/decred/dcrd/pull/2172))\r\n- docs: Update Code Contribution Guidelines ([decred/dcrd#2200](https://github.com/decred/dcrd/pull/2200))\r\n- docs: Update links to avoid redirects ([decred/dcrd#2201](https://github.com/decred/dcrd/pull/2201))\r\n- docs: Update JSON-RPC spec link to latest ([decred/dcrd#2216](https://github.com/decred/dcrd/pull/2216))\r\n- docs: Fix chaingen broken markdown link ([decred/dcrd#2226](https://github.com/decred/dcrd/pull/2226))\r\n- indexers: Fix existsaddridx description ([decred/dcrd#2234](https://github.com/decred/dcrd/pull/2234))\r\n- docs: Update for removal of mempool module ([decred/dcrd#2274](https://github.com/decred/dcrd/pull/2274))\r\n- docs: Update for removal of mining module ([decred/dcrd#2275](https://github.com/decred/dcrd/pull/2275))\r\n- docs: Update for removal of fees module ([decred/dcrd#2287](https://github.com/decred/dcrd/pull/2287))\r\n- docs: Add documentation for getcfilterheader ([decred/dcrd#2312](https://github.com/decred/dcrd/pull/2312))\r\n- rpcserver: Document v1 cfilters as deprecated ([decred/dcrd#2314](https://github.com/decred/dcrd/pull/2314))\r\n- docs: Add several historical release notes ([decred/dcrd#2317](https://github.com/decred/dcrd/pull/2317))\r\n- contrib: Add README.md ([decred/dcrd#2312](https://github.com/decred/dcrd/pull/2312))\r\n- multi: Add simnet documentation and setup script ([decred/dcrd#2315](https://github.com/decred/dcrd/pull/2315))\r\n- docs: Document additional ws notifications ([decred/dcrd#2316](https://github.com/decred/dcrd/pull/2316))\r\n- contrib: Move service config examples to contrib ([decred/dcrd#2317](https://github.com/decred/dcrd/pull/2317))\r\n- peer: Update README.md/doc.go to reflect reality ([decred/dcrd#2325](https://github.com/decred/dcrd/pull/2325))\r\n- docs: Update README.md to require Go 1.14/1.15 ([decred/dcrd#2335](https://github.com/decred/dcrd/pull/2335))\r\n- docs: Update searchrawtransactions JSON-RPC docs ([decred/dcrd#2330](https://github.com/decred/dcrd/pull/2330))\r\n- sampleconfig: Make constant a function instead ([decred/dcrd#2340](https://github.com/decred/dcrd/pull/2340))\r\n- docs: Add release notes for v1.5.2 ([decred/dcrd#2346](https://github.com/decred/dcrd/pull/2346))\r\n- docs: Update rebroadcast JSON-RPC docs ([decred/dcrd#2355](https://github.com/decred/dcrd/pull/2355))\r\n- docs: Update README CLI suite link to ref latest ([decred/dcrd#2361](https://github.com/decred/dcrd/pull/2361))\r\n- docs: Add missing gettreasurybalance documentation ([decred/dcrd#2351](https://github.com/decred/dcrd/pull/2351))\r\n- contrib: More restrictive dcrd service privileges ([decred/dcrd#2357](https://github.com/decred/dcrd/pull/2357))\r\n- docs: Update for connmgr v3 module ([decred/dcrd#2376](https://github.com/decred/dcrd/pull/2376))\r\n- docs: Update for dcrec/secp256k1/v3 module ([decred/dcrd#2377](https://github.com/decred/dcrd/pull/2377))\r\n- docs: Update for chaincfg v3 module ([decred/dcrd#2381](https://github.com/decred/dcrd/pull/2381))\r\n- docs: Update for dcrutil v3 module ([decred/dcrd#2383](https://github.com/decred/dcrd/pull/2383))\r\n- docs: Update for txscript v3 module ([decred/dcrd#2384](https://github.com/decred/dcrd/pull/2384))\r\n- docs: Update for hdkeychain v3 module ([decred/dcrd#2392](https://github.com/decred/dcrd/pull/2392))\r\n- docs: Update for blockchain/standalone v2 module ([decred/dcrd#2395](https://github.com/decred/dcrd/pull/2395))\r\n- docs: Update simnet env docs for ticket exhaustion ([decred/dcrd#2403](https://github.com/decred/dcrd/pull/2403))\r\n- docs: Update JSON-RPC API examples ([decred/dcrd#2404](https://github.com/decred/dcrd/pull/2404))\r\n- docs: Update for blockchain/stake v3 module ([decred/dcrd#2418](https://github.com/decred/dcrd/pull/2418))\r\n- docs: Update for peer/v2 module ([decred/dcrd#2422](https://github.com/decred/dcrd/pull/2422))\r\n- docs: Update for rpcclient/v6 module ([decred/dcrd#2423](https://github.com/decred/dcrd/pull/2423))\r\n- docs: Update for blockchain v3 module ([decred/dcrd#2424](https://github.com/decred/dcrd/pull/2424))\r\n- docs: Update several JSON-RPC APIs ([decred/dcrd#2470](https://github.com/decred/dcrd/pull/2470))\r\n- docs: Update several JSON-RPC APIs ([decred/dcrd#2472](https://github.com/decred/dcrd/pull/2472))\r\n\r\n### Developer-related package and module changes:\r\n\r\n- blockmanager: remove serverPeer from blockmanager completely ([decred/dcrd#1735](https://github.com/decred/dcrd/pull/1735))\r\n- txscript: Add signature type to KeyClosure API ([decred/dcrd#1961](https://github.com/decred/dcrd/pull/1961))\r\n- server: Convert lifecycle to context ([decred/dcrd#1952](https://github.com/decred/dcrd/pull/1952))\r\n- dcrutil: drop chainec ([decred/dcrd#1957](https://github.com/decred/dcrd/pull/1957))\r\n- txscript: drop chainec ([decred/dcrd#1957](https://github.com/decred/dcrd/pull/1957))\r\n- blockchain: drop chainec ([decred/dcrd#1957](https://github.com/decred/dcrd/pull/1957))\r\n- mempool: drop chainec ([decred/dcrd#1957](https://github.com/decred/dcrd/pull/1957))\r\n- blockchain: removed unused params ([decred/dcrd#1973](https://github.com/decred/dcrd/pull/1973))\r\n- blockchain: Decouple indexers from blockchain ([decred/dcrd#1968](https://github.com/decred/dcrd/pull/1968))\r\n- indexers: Use spend journal for index catchup ([decred/dcrd#1969](https://github.com/decred/dcrd/pull/1969))\r\n- blockchain: replace scriptval quit channel with context ([decred/dcrd#1991](https://github.com/decred/dcrd/pull/1991))\r\n- indexers: Remove unused code ([decred/dcrd#1987](https://github.com/decred/dcrd/pull/1987))\r\n- chaincfg: Gate mustPayout with subsidy generation ([decred/dcrd#1988](https://github.com/decred/dcrd/pull/1988))\r\n- database: Remove unused code ([decred/dcrd#1989](https://github.com/decred/dcrd/pull/1989))\r\n- edwards: Remove unused code ([decred/dcrd#1990](https://github.com/decred/dcrd/pull/1990))\r\n- dcrd: attach shutdown context to listeners ([decred/dcrd#1992](https://github.com/decred/dcrd/pull/1992))\r\n- blockchain: Remove unconfigurable chain var ([decred/dcrd#1996](https://github.com/decred/dcrd/pull/1996))\r\n- multi: remove global activeNetParams ([decred/dcrd#1999](https://github.com/decred/dcrd/pull/1999))\r\n- lru: add kv cache ([decred/dcrd#2002](https://github.com/decred/dcrd/pull/2002))\r\n- sampleconfig: add export dcrctl sample config ([decred/dcrd#2003](https://github.com/decred/dcrd/pull/2003))\r\n- blockmanager: Simplify dynamic peer height updates ([decred/dcrd#1998](https://github.com/decred/dcrd/pull/1998))\r\n- indexers: convert to contexts ([decred/dcrd#1985](https://github.com/decred/dcrd/pull/1985))\r\n- blockchain: Rename KnownValid to HasValidated ([decred/dcrd#1997](https://github.com/decred/dcrd/pull/1997))\r\n- blockchain: Remove unused error from HaveBlock ([decred/dcrd#2007](https://github.com/decred/dcrd/pull/2007))\r\n- blockchain: Use skip list for ancestor traversal ([decred/dcrd#2010](https://github.com/decred/dcrd/pull/2010))\r\n- multi: Decouple orphan handling from blockchain ([decred/dcrd#2008](https://github.com/decred/dcrd/pull/2008))\r\n- blockchain: Remove easiest diff checkpoint checks ([decred/dcrd#2012](https://github.com/decred/dcrd/pull/2012))\r\n- blockchain: Make checkpoints configurable ([decred/dcrd#2013](https://github.com/decred/dcrd/pull/2013))\r\n- config: Use TorLookupIPContext ([decred/dcrd#2021](https://github.com/decred/dcrd/pull/2021))\r\n- bech32: Ensure HRP is lowercase when encoding ([decred/dcrd#2024](https://github.com/decred/dcrd/pull/2024))\r\n- bech32: Add base256 conversion convenience funcs ([decred/dcrd#2025](https://github.com/decred/dcrd/pull/2025))\r\n- blockchain: Explicit hash in next work diff calcs ([decred/dcrd#2022](https://github.com/decred/dcrd/pull/2022))\r\n- blockchain: Remove unused CalcNextRequiredDiffNode ([decred/dcrd#2022](https://github.com/decred/dcrd/pull/2022))\r\n- blockmanager: Remove unused diff calc code ([decred/dcrd#2022](https://github.com/decred/dcrd/pull/2022))\r\n- blockchain: Support hdr checkpoints and simplify ([decred/dcrd#2014](https://github.com/decred/dcrd/pull/2014))\r\n- txscript: Optimize conditional execution mem usage ([decred/dcrd#2011](https://github.com/decred/dcrd/pull/2011))\r\n- fix regenHandler shutdown ([decred/dcrd#2041](https://github.com/decred/dcrd/pull/2041))\r\n- secp256k1: Remove unused chainec code ([decred/dcrd#2042](https://github.com/decred/dcrd/pull/2042))\r\n- secp256k1: Consistent function formatting ([decred/dcrd#2044](https://github.com/decred/dcrd/pull/2044))\r\n- secp256k1: Optimize NonceRFC6979 ([decred/dcrd#2044](https://github.com/decred/dcrd/pull/2044))\r\n- secp256k1: Never fail signing ([decred/dcrd#2044](https://github.com/decred/dcrd/pull/2044))\r\n- schnorr: Remove unused threshold code ([decred/dcrd#2045](https://github.com/decred/dcrd/pull/2045))\r\n- rpcclient: add context ([decred/dcrd#1980](https://github.com/decred/dcrd/pull/1980))\r\n- multi: replace GetScriptClass consensus calls ([decred/dcrd#2031](https://github.com/decred/dcrd/pull/2031))\r\n- secp256k1: Split funcs for crypto/elliptic iface ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make params standalone ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Rename generation related code ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Move big int to field adaptor code ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make point doubling funcs standalone ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make point addition funcs standalone ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Move group operations to new curve.go ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Remove unnecessary QPlus1Div4 export ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make endormophism bits standalone ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Decouple internals from ecdsa.PublicKey ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Decouple signing from ecdsa.PrivateKey ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make k splitting func standalone ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make k mod reduce func standalone ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Move naf func to curve file ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Refactor isOnCurve logic from adaptor ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Refactor scalar mult logic from adaptor ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make private key independent type ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Make public key independent type ([decred/dcrd#2056](https://github.com/decred/dcrd/pull/2056))\r\n- secp256k1: Introduce jacobian point struct ([decred/dcrd#2057](https://github.com/decred/dcrd/pull/2057))\r\n- secp256k1: Implement direct signature verification ([decred/dcrd#2058](https://github.com/decred/dcrd/pull/2058))\r\n- secp256k1: Add specialized field check for one ([decred/dcrd#2059](https://github.com/decred/dcrd/pull/2059))\r\n- multi: Convert rpcserver lifecycle to context ([decred/dcrd#2043](https://github.com/decred/dcrd/pull/2043))\r\n- txscript: Don't use GetScriptClass in consensus ([decred/dcrd#2070](https://github.com/decred/dcrd/pull/2070))\r\n- txscript: Remove unused isStakeOutput function ([decred/dcrd#2070](https://github.com/decred/dcrd/pull/2070))\r\n- multi:  define wire error types ([decred/dcrd#2055](https://github.com/decred/dcrd/pull/2055))\r\n- hdkeychain: Provide SerializedPubKey method ([decred/dcrd#2073](https://github.com/decred/dcrd/pull/2073))\r\n- dcrutil: Provide privkey access for WIFs ([decred/dcrd#2078](https://github.com/decred/dcrd/pull/2078))\r\n- hdkeychain: Remove ECPubKey ([decred/dcrd#2080](https://github.com/decred/dcrd/pull/2080))\r\n- dcrutil: Use intended method names ([decred/dcrd#2079](https://github.com/decred/dcrd/pull/2079))\r\n- hdkeychain: ECPrivKey -> SerializedPrivKey ([decred/dcrd#2081](https://github.com/decred/dcrd/pull/2081))\r\n- hdkeychain: Use direct hashes and remove dcrutil dep ([decred/dcrd#2086](https://github.com/decred/dcrd/pull/2086))\r\n- stake: Remove exported FindTicketIdxs ([decred/dcrd#2089](https://github.com/decred/dcrd/pull/2089))\r\n- secp256k1: Add fixed-precision group order type ([decred/dcrd#2060](https://github.com/decred/dcrd/pull/2060))\r\n- secp256k1: Make private key opaque ([decred/dcrd#2061](https://github.com/decred/dcrd/pull/2061))\r\n- secp256k1: Follow RFC6979 for too large nonce data ([decred/dcrd#2062](https://github.com/decred/dcrd/pull/2062))\r\n- secp256k1: Return new scalar from NonceRFC6979 ([decred/dcrd#2063](https://github.com/decred/dcrd/pull/2063))\r\n- secp256k1: Use new mod n scalar in ec mults ([decred/dcrd#2064](https://github.com/decred/dcrd/pull/2064))\r\n- secp256k1: Add non-const inverse for mod n scalar ([decred/dcrd#2072](https://github.com/decred/dcrd/pull/2072))\r\n- secp256k1: Optimize sig verify with mod n scalar ([decred/dcrd#2083](https://github.com/decred/dcrd/pull/2083))\r\n- secp256k1: Make signature opaque ([decred/dcrd#2084](https://github.com/decred/dcrd/pull/2084))\r\n- secp256k1: Use mod n scalar when signing ([decred/dcrd#2085](https://github.com/decred/dcrd/pull/2085))\r\n- secp256k1: Use mod n scalar in sig serialization ([decred/dcrd#2087](https://github.com/decred/dcrd/pull/2087))\r\n- secp256k1: Add optimized sqrt field calc ([decred/dcrd#2088](https://github.com/decred/dcrd/pull/2088))\r\n- secp256k1: Add field func to determine when >= P-N ([decred/dcrd#2093](https://github.com/decred/dcrd/pull/2093))\r\n- secp256k1: Use field val for y coord decompression ([decred/dcrd#2094](https://github.com/decred/dcrd/pull/2094))\r\n- secp256k1: Return num instead of bool for overflow ([decred/dcrd#2095](https://github.com/decred/dcrd/pull/2095))\r\n- secp256k1: Overhaul compact signatures ([decred/dcrd#2095](https://github.com/decred/dcrd/pull/2095))\r\n- schnorr: Zero internal bytes of big ints ([decred/dcrd#2103](https://github.com/decred/dcrd/pull/2103))\r\n- edwards: Zero internal bytes of big ints ([decred/dcrd#2104](https://github.com/decred/dcrd/pull/2104))\r\n- secp256k1: Remove BER signature parsing ([decred/dcrd#2105](https://github.com/decred/dcrd/pull/2105))\r\n- secp256k1: Rework DER signature parsing code ([decred/dcrd#2106](https://github.com/decred/dcrd/pull/2106))\r\n- connmgr: Fix dynamic ban score stringer deadlock ([decred/dcrd#2114](https://github.com/decred/dcrd/pull/2114))\r\n- secp256k1: Use mod n scalar in signature type ([decred/dcrd#2107](https://github.com/decred/dcrd/pull/2107))\r\n- secp256k1: Make public keys opaque ([decred/dcrd#2108](https://github.com/decred/dcrd/pull/2108))\r\n- main: Use errors api and require go 1.13+ ([decred/dcrd#2096](https://github.com/decred/dcrd/pull/2096))\r\n- stake: Use errors api and require go 1.13 ([decred/dcrd#2097](https://github.com/decred/dcrd/pull/2097))\r\n- blockchain: Use errors api and require go 1.13+ ([decred/dcrd#2098](https://github.com/decred/dcrd/pull/2098))\r\n- hdkeychain: Remove Neuter error return ([decred/dcrd#2116](https://github.com/decred/dcrd/pull/2116))\r\n- secp256k1: Add Zero method to private key ([decred/dcrd#2117](https://github.com/decred/dcrd/pull/2117))\r\n- schnorr: Remove unused pubkey recovery bits ([decred/dcrd#2120](https://github.com/decred/dcrd/pull/2120))\r\n- schnorr: Remove deprecated chainec methods ([decred/dcrd#2122](https://github.com/decred/dcrd/pull/2122))\r\n- schnorr: Remove GetCode method from Error type ([decred/dcrd#2123](https://github.com/decred/dcrd/pull/2123))\r\n- schnorr: Remove generalized Verify ([decred/dcrd#2124](https://github.com/decred/dcrd/pull/2124))\r\n- schnorr: Make signature opaque ([decred/dcrd#2125](https://github.com/decred/dcrd/pull/2125))\r\n- schnorr: Move sig code to signature files ([decred/dcrd#2127](https://github.com/decred/dcrd/pull/2127))\r\n- schnorr: Remove unused internal signing params ([decred/dcrd#2121](https://github.com/decred/dcrd/pull/2121))\r\n- schnorr: Accept sig type in internal verify func ([decred/dcrd#2129](https://github.com/decred/dcrd/pull/2129))\r\n- schnorr: Remove internal hash func callback ([decred/dcrd#2130](https://github.com/decred/dcrd/pull/2130))\r\n- secp256k1: Reduce privkey copies ([decred/dcrd#2131](https://github.com/decred/dcrd/pull/2131))\r\n- schnorr: Remove unused GenerateKey ([decred/dcrd#2132](https://github.com/decred/dcrd/pull/2132))\r\n- mempool: Correct MaybeAcceptDependents mutex ([decred/dcrd#2135](https://github.com/decred/dcrd/pull/2135))\r\n- secp256k1: Avoid inversion in sig verify ([decred/dcrd#2118](https://github.com/decred/dcrd/pull/2118))\r\n- secp256k1: Reduce EC operation normalizes ([decred/dcrd#2119](https://github.com/decred/dcrd/pull/2119))\r\n- secp256k1: Remove unused q curve param ([decred/dcrd#2136](https://github.com/decred/dcrd/pull/2136))\r\n- secp256k1: Improve exported curve params ([decred/dcrd#2137](https://github.com/decred/dcrd/pull/2137))\r\n- secp256k1: Make field value set int take uint16 ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- secp256k1: Make field value add int take uint16 ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- secp256k1: Make field value mul int take uint8 ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- secp256k1: Make field set byte slice const time ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- secp256k1: Export field value type ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- secp256k1: Expose IsOddBit on field val type ([decred/dcrd#2138](https://github.com/decred/dcrd/pull/2138))\r\n- secp256k1: Expose IsOneBit on field val type ([decred/dcrd#2138](https://github.com/decred/dcrd/pull/2138))\r\n- secp256k1: Expose IsZeroBit on field val type ([decred/dcrd#2138](https://github.com/decred/dcrd/pull/2138))\r\n- schnorr: Remove internal verify func bool ret ([decred/dcrd#2142](https://github.com/decred/dcrd/pull/2142))\r\n- secp256k1: Export JacobianPoint type ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Export AddNonConst ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Export DoubleNonConst ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Export SclarMultNonConst ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Export ScalarBaseMultNonConst ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Export DecompressY ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Add AsJacobian method to pubkey ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Export scalar from PrivateKey ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1: Split nonce code into separate files ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- secp256k1/ecdsa: Decouple ECDSA from secp256k1 ([decred/dcrd#2139](https://github.com/decred/dcrd/pull/2139))\r\n- schnorr: Use extra data for RFC6979 nonces ([decred/dcrd#2143](https://github.com/decred/dcrd/pull/2143))\r\n- schnorr: Add error support for errors.Is/As ([decred/dcrd#2145](https://github.com/decred/dcrd/pull/2145))\r\n- hdkeychain: Use secp256k1 privkey to pubkey method ([decred/dcrd#2156](https://github.com/decred/dcrd/pull/2156))\r\n- secp256k1: Add overflow check to field val set ([decred/dcrd#2147](https://github.com/decred/dcrd/pull/2147))\r\n- schnorr: Rework signature parsing ([decred/dcrd#2148](https://github.com/decred/dcrd/pull/2148))\r\n- schnorr: Remove unused copyBytes func ([decred/dcrd#2148](https://github.com/decred/dcrd/pull/2148))\r\n- schnorr: Use specialized types when signing ([decred/dcrd#2150](https://github.com/decred/dcrd/pull/2150))\r\n- schnorr: Optimize sig verify with specialized types ([decred/dcrd#2151](https://github.com/decred/dcrd/pull/2151))\r\n- schnorr: Use specialized types in signature type ([decred/dcrd#2152](https://github.com/decred/dcrd/pull/2152))\r\n- schnorr: Remove unused error codes ([decred/dcrd#2153](https://github.com/decred/dcrd/pull/2153))\r\n- schnorr: Rename error codes to better match reality ([decred/dcrd#2153](https://github.com/decred/dcrd/pull/2153))\r\n- secp256k1: Add PutBytesUnchecked to FieldVal ([decred/dcrd#2154](https://github.com/decred/dcrd/pull/2154))\r\n- secp256k1: Add PutBytesUnchecked to ModNScalar ([decred/dcrd#2154](https://github.com/decred/dcrd/pull/2154))\r\n- hdkeychain: Use specialized secp256k1 types ([decred/dcrd#2157](https://github.com/decred/dcrd/pull/2157))\r\n- schnorr: Use PutBytesUnchecked for serialize ([decred/dcrd#2158](https://github.com/decred/dcrd/pull/2158))\r\n- ecdsa: Use PutBytesUnchecked for serialize ([decred/dcrd#2159](https://github.com/decred/dcrd/pull/2159))\r\n- secp256k1: Add pubkey parsing error infrastructure ([decred/dcrd#2160](https://github.com/decred/dcrd/pull/2160))\r\n- secp256k1: Add IsOnCurve method to PublicKey ([decred/dcrd#2162](https://github.com/decred/dcrd/pull/2162))\r\n- secp256k1: Use specialized types in public key ([decred/dcrd#2163](https://github.com/decred/dcrd/pull/2163))\r\n- schnorr: Add sign message example ([decred/dcrd#2164](https://github.com/decred/dcrd/pull/2164))\r\n- schnorr: Add verify signature example ([decred/dcrd#2164](https://github.com/decred/dcrd/pull/2164))\r\n- secp256k1: Optimize pubkey parse ([decred/dcrd#2167](https://github.com/decred/dcrd/pull/2167))\r\n- connmgr: Fix potential panic via RPC ([decred/dcrd#2177](https://github.com/decred/dcrd/pull/2177))\r\n- peer: Set a default idle timeout if not specified ([decred/dcrd#2180](https://github.com/decred/dcrd/pull/2180))\r\n- wire: Improve error handling ([decred/dcrd#2179](https://github.com/decred/dcrd/pull/2179))\r\n- rpcclient: Remove dcrwallet methods ([decred/dcrd#2178](https://github.com/decred/dcrd/pull/2178))\r\n- server: Remove unused interrupt chan param ([decred/dcrd#2186](https://github.com/decred/dcrd/pull/2186))\r\n- multi: CancelPending error for no pending conns ([decred/dcrd#2199](https://github.com/decred/dcrd/pull/2199))\r\n- connmgr: Convert lifecycle to context ([decred/dcrd#2195](https://github.com/decred/dcrd/pull/2195))\r\n- dcrutil: Add VerifyMessage API ([decred/dcrd#2203](https://github.com/decred/dcrd/pull/2203))\r\n- blocklogger: Always log when sync height reached ([decred/dcrd#2204](https://github.com/decred/dcrd/pull/2204))\r\n- connmgr: define connmgr error types ([decred/dcrd#2206](https://github.com/decred/dcrd/pull/2206))\r\n- connmgr: Finish recent connmgr err type additions ([decred/dcrd#2208](https://github.com/decred/dcrd/pull/2208))\r\n- stakeext: Fix comments on concurrency ([decred/dcrd#2210](https://github.com/decred/dcrd/pull/2210))\r\n- txscript: Add support for errors.Is/As ([decred/dcrd#2209](https://github.com/decred/dcrd/pull/2209))\r\n- secp256k1: Remove Encrypt/Decrypt functions ([decred/dcrd#2222](https://github.com/decred/dcrd/pull/2222))\r\n- rpcserver: Create Chain and UtxoEntry interfaces ([decred/dcrd#2211](https://github.com/decred/dcrd/pull/2211))\r\n- blockchain: Correct mempool view construction ([decred/dcrd#2232](https://github.com/decred/dcrd/pull/2232))\r\n- rpcserver: Correct adaptor for utxo entry fetch ([decred/dcrd#2233](https://github.com/decred/dcrd/pull/2233))\r\n- server: Log remote peer IP in several messages ([decred/dcrd#2233](https://github.com/decred/dcrd/pull/2233))\r\n- peer: Add IsKnownInventory ([decred/dcrd#2239](https://github.com/decred/dcrd/pull/2239))\r\n- txscript: Export several useful funcs for treasury ([decred/dcrd#2243](https://github.com/decred/dcrd/pull/2243))\r\n- peer: check all peer deadlines in the stall ticker ([decred/dcrd#2251](https://github.com/decred/dcrd/pull/2251))\r\n- txscript: Export script num type and constructor ([decred/dcrd#2240](https://github.com/decred/dcrd/pull/2240))\r\n- txscript: Export MathOpCodeMaxScriptNumLen ([decred/dcrd#2240](https://github.com/decred/dcrd/pull/2240))\r\n- txscript: Export CltvMaxScriptNumLen ([decred/dcrd#2240](https://github.com/decred/dcrd/pull/2240))\r\n- txscript: Export CsvMaxScriptNumLen ([decred/dcrd#2240](https://github.com/decred/dcrd/pull/2240))\r\n- txscript: Export IsSmallInt ([decred/dcrd#2240](https://github.com/decred/dcrd/pull/2240))\r\n- txscript: Export AsSmallInt ([decred/dcrd#2240](https://github.com/decred/dcrd/pull/2240))\r\n- txscript: Export ExtractScriptHash ([decred/dcrd#2240](https://github.com/decred/dcrd/pull/2240))\r\n- txscript: Remove deprecated code ([decred/dcrd#2241](https://github.com/decred/dcrd/pull/2241))\r\n- txscript: Optimize sig enc check with mod n scalar ([decred/dcrd#2246](https://github.com/decred/dcrd/pull/2246))\r\n- connmgr: Remain responsive with simul failed conns ([decred/dcrd#2254](https://github.com/decred/dcrd/pull/2254))\r\n- secp256k1: Harden const time field normalization ([decred/dcrd#2258](https://github.com/decred/dcrd/pull/2258))\r\n- rpcclient: Protect websocket connection with mutex ([decred/dcrd#2260](https://github.com/decred/dcrd/pull/2260))\r\n- wire: formatting fixes - no functional change ([decred/dcrd#2266](https://github.com/decred/dcrd/pull/2266))\r\n- wire: return detectable err from makeEmptyMessage ([decred/dcrd#2266](https://github.com/decred/dcrd/pull/2266))\r\n- blockchain: Rename last prune time field ([decred/dcrd#2294](https://github.com/decred/dcrd/pull/2294))\r\n- blockchain: Set pruning interval to tgt block time ([decred/dcrd#2294](https://github.com/decred/dcrd/pull/2294))\r\n- blockchain: Optimize stake node pruning ([decred/dcrd#2294](https://github.com/decred/dcrd/pull/2294))\r\n- txscript: Check equality via secp256k1 methods ([decred/dcrd#2299](https://github.com/decred/dcrd/pull/2299))\r\n- blockchain: Remove internal dbnamespace package ([decred/dcrd#2305](https://github.com/decred/dcrd/pull/2305))\r\n- txscript: Optimize alt stack drop ([decred/dcrd#2298](https://github.com/decred/dcrd/pull/2298))\r\n- txscript: Optimize trace logging ([decred/dcrd#2301](https://github.com/decred/dcrd/pull/2301))\r\n- peer: Optimize logging ([decred/dcrd#2303](https://github.com/decred/dcrd/pull/2303))\r\n- blockchain: Optimize chain tip tracking ([decred/dcrd#2302](https://github.com/decred/dcrd/pull/2302))\r\n- blockchain: Move stxo source to chain ([decred/dcrd#2304](https://github.com/decred/dcrd/pull/2304))\r\n- blockchain: Use static log funcs for static logs ([decred/dcrd#2321](https://github.com/decred/dcrd/pull/2321))\r\n- blockchain: Remove superfluous blockidx fields ([decred/dcrd#2321](https://github.com/decred/dcrd/pull/2321))\r\n- blockchain: Migration for v3 block index ([decred/dcrd#2321](https://github.com/decred/dcrd/pull/2321))\r\n- config: Categorize options in the code ([decred/dcrd#2320](https://github.com/decred/dcrd/pull/2320))\r\n- main: Unexport main package exports ([decred/dcrd#2339](https://github.com/decred/dcrd/pull/2339))\r\n- txscript: Correct JSON test data comment ([decred/dcrd#2354](https://github.com/decred/dcrd/pull/2354))\r\n- blockchain: Decentralized Treasury db migration ([decred/dcrd#2336](https://github.com/decred/dcrd/pull/2336))\r\n- blockchain: Add exported TSpendCountVotes func ([decred/dcrd#2351](https://github.com/decred/dcrd/pull/2351))\r\n- txscript: Add shortTxHash ([decred/dcrd#2358](https://github.com/decred/dcrd/pull/2358))\r\n- txscript: Store short tx hash in sigcache ([decred/dcrd#2358](https://github.com/decred/dcrd/pull/2358))\r\n- txscript: Proactively evict SigCache entries ([decred/dcrd#2358](https://github.com/decred/dcrd/pull/2358))\r\n- config: Consolidate error reporting ([decred/dcrd#2379](https://github.com/decred/dcrd/pull/2379))\r\n- dcrutil: Update example to avoid chaincfg dep ([decred/dcrd#2382](https://github.com/decred/dcrd/pull/2382))\r\n- blockchain: Remove need to RLock some treasury funcs ([decred/dcrd#2380](https://github.com/decred/dcrd/pull/2380))\r\n- multi: Fix treasury-related comments ([decred/dcrd#2380](https://github.com/decred/dcrd/pull/2380))\r\n- multi: update blockchain/standalone error types ([decred/dcrd#2380](https://github.com/decred/dcrd/pull/2380))\r\n- standalone: Retain coinbase detection semantics ([decred/dcrd#2391](https://github.com/decred/dcrd/pull/2391))\r\n- standalone: Introduce CalcTSpendWindow ([decred/dcrd#2389](https://github.com/decred/dcrd/pull/2389))\r\n- standalone: Rename CalcTSpendExpiry ([decred/dcrd#2394](https://github.com/decred/dcrd/pull/2394))\r\n- standalone: IsTVI code consistency pass ([decred/dcrd#2394](https://github.com/decred/dcrd/pull/2394))\r\n- standalone: Misc comment consistency cleanup ([decred/dcrd#2394](https://github.com/decred/dcrd/pull/2394))\r\n- blockchain: Add ticket exhaustion check ([decred/dcrd#2398](https://github.com/decred/dcrd/pull/2398))\r\n- blockchain: Reject old block vers for tsry vote ([decred/dcrd#2400](https://github.com/decred/dcrd/pull/2400))\r\n- blockchain: Simplify old block ver upgrade checks ([decred/dcrd#2401](https://github.com/decred/dcrd/pull/2401))\r\n- multi: update blockchain and mempool error types ([decred/dcrd#2278](https://github.com/decred/dcrd/pull/2278))\r\n- blockchain/mempool: Update for recent err convrsn ([decred/dcrd#2421](https://github.com/decred/dcrd/pull/2421))\r\n- blockchain: Create treasury buckets during upgrade ([decred/dcrd#2441](https://github.com/decred/dcrd/pull/2441))\r\n- blockchain: Fix stxosToScriptSource ([decred/dcrd#2444](https://github.com/decred/dcrd/pull/2444))\r\n- blockchain: Make ver 5 to 6 db upgrades work again ([decred/dcrd#2446](https://github.com/decred/dcrd/pull/2446))\r\n- blockchain: Clear failed block flags for HF ([decred/dcrd#2447](https://github.com/decred/dcrd/pull/2447))\r\n- blockchain: Handle db upgrade paths for ver < 5 ([decred/dcrd#2449](https://github.com/decred/dcrd/pull/2449))\r\n- blockchain: No context dep checks for orphans ([decred/dcrd#2474](https://github.com/decred/dcrd/pull/2474))\r\n\r\n### Developer-related module management:\r\n\r\n- mining: Start v3 module dev cycle ([decred/dcrd#1955](https://github.com/decred/dcrd/pull/1955))\r\n- dcrutil: Start v3 module dev cycle ([decred/dcrd#1956](https://github.com/decred/dcrd/pull/1956))\r\n- txscript: Start v3 module dev cycle ([decred/dcrd#1958](https://github.com/decred/dcrd/pull/1958))\r\n- blockchain: Start v3 module dev cycle ([decred/dcrd#1959](https://github.com/decred/dcrd/pull/1959))\r\n- stake: Start v3 module dev cycle ([decred/dcrd#1960](https://github.com/decred/dcrd/pull/1960))\r\n- mempool: Start v4 module dev cycle ([decred/dcrd#1963](https://github.com/decred/dcrd/pull/1963))\r\n- connmgr: Start v3 module dev cycle ([decred/dcrd#1975](https://github.com/decred/dcrd/pull/1975))\r\n- multi: Use latest base58 module ([decred/dcrd#2016](https://github.com/decred/dcrd/pull/2016))\r\n- dcrctl: Update dcrwallet RPC types package ([decred/dcrd#2018](https://github.com/decred/dcrd/pull/2018))\r\n- multi: Update to prerel module release versions ([decred/dcrd#2032](https://github.com/decred/dcrd/pull/2032))\r\n- multi: switch to syndtr/goleveldb ([decred/dcrd#2034](https://github.com/decred/dcrd/pull/2034))\r\n- chaincfg: Start v3 module dev cycle ([decred/dcrd#2038](https://github.com/decred/dcrd/pull/2038))\r\n- chaincfg: Remove chainec package ([decred/dcrd#2039](https://github.com/decred/dcrd/pull/2039))\r\n- secp256k1: Start v3 module dev cycle ([decred/dcrd#2040](https://github.com/decred/dcrd/pull/2040))\r\n- rpcclient: Start v6 module dev cycle ([decred/dcrd#1980](https://github.com/decred/dcrd/pull/1980))\r\n- database, fees:  use latest leveldb ([decred/dcrd#2054](https://github.com/decred/dcrd/pull/2054))\r\n- multi: Update to prerel module release versions ([decred/dcrd#2074](https://github.com/decred/dcrd/pull/2074))\r\n- hdkeychain: Start v3 module dev cycle ([decred/dcrd#2076](https://github.com/decred/dcrd/pull/2076))\r\n- multi: Update all prerel module release versions ([decred/dcrd#2082](https://github.com/decred/dcrd/pull/2082))\r\n- multi: More prerel module release version updates ([decred/dcrd#2082](https://github.com/decred/dcrd/pull/2082))\r\n- multi: Round 3 prerel module release ver updates ([decred/dcrd#2082](https://github.com/decred/dcrd/pull/2082))\r\n- multi: Round 4 prerel module release ver updates ([decred/dcrd#2082](https://github.com/decred/dcrd/pull/2082))\r\n- chaincfg: Remove unused modules ([decred/dcrd#2144](https://github.com/decred/dcrd/pull/2144))\r\n- dcrutil: use errors api; require go 1.13+ ([decred/dcrd#2099](https://github.com/decred/dcrd/pull/2099))\r\n- mempool: use errors api; require go 1.13+ ([decred/dcrd#2100](https://github.com/decred/dcrd/pull/2100))\r\n- rpcclient: use errors api; require go 1.13+ ([decred/dcrd#2101](https://github.com/decred/dcrd/pull/2101))\r\n- txscript: use errors api; require go 1.13+ ([decred/dcrd#2102](https://github.com/decred/dcrd/pull/2102))\r\n- hdkeychain: Use errors api and require go 1.13+ ([decred/dcrd#2161](https://github.com/decred/dcrd/pull/2161))\r\n- wire: use std errors api ([decred/dcrd#2182](https://github.com/decred/dcrd/pull/2182))\r\n- rpcclient: bump to newer modules ([decred/dcrd#2190](https://github.com/decred/dcrd/pull/2190))\r\n- multi: Run go mod tidy on all modules ([decred/dcrd#2185](https://github.com/decred/dcrd/pull/2185))\r\n- main: Update go.mod for recent rpcclient bumps ([decred/dcrd#2194](https://github.com/decred/dcrd/pull/2194))\r\n- multi: Use latest base58 module ([decred/dcrd#2223](https://github.com/decred/dcrd/pull/2223))\r\n- standalone: Start v2 module dev cycle ([decred/dcrd#2224](https://github.com/decred/dcrd/pull/2224))\r\n- multi: go mod tidy cleanup and run in CI ([decred/dcrd#2225](https://github.com/decred/dcrd/pull/2225))\r\n- mempool: Move to internal ([decred/dcrd#2274](https://github.com/decred/dcrd/pull/2274))\r\n- mining: Move to internal ([decred/dcrd#2275](https://github.com/decred/dcrd/pull/2275))\r\n- rpcserver: Move to internal ([decred/dcrd#2288](https://github.com/decred/dcrd/pull/2288))\r\n- fees: Move to internal ([decred/dcrd#2287](https://github.com/decred/dcrd/pull/2287))\r\n- main: go mod tidy ([decred/dcrd#2367](https://github.com/decred/dcrd/pull/2367))\r\n- dcrjson: Prepare v3.1.0 ([decred/dcrd#2374](https://github.com/decred/dcrd/pull/2374))\r\n- addrmgr: Prepare v1.2.0 ([decred/dcrd#2375](https://github.com/decred/dcrd/pull/2375))\r\n- connmgr: Prepare v3.0.0 ([decred/dcrd#2376](https://github.com/decred/dcrd/pull/2376))\r\n- multi: Update chaincfg dependers to wire/v1.4.0 ([decred/dcrd#2381](https://github.com/decred/dcrd/pull/2381))\r\n- chaincfg: Prepare v3.0.0 ([decred/dcrd#2381](https://github.com/decred/dcrd/pull/2381))\r\n- dcrutil: Prepare v3.0.0 ([decred/dcrd#2383](https://github.com/decred/dcrd/pull/2383))\r\n- rpc/jsonrpc/types: Prepare v2.1.0 ([decred/dcrd#2385](https://github.com/decred/dcrd/pull/2385))\r\n- txscript: Prepare v3.0.0 ([decred/dcrd#2384](https://github.com/decred/dcrd/pull/2384))\r\n- blockchain: Update unreleased requires to master ([decred/dcrd#2364](https://github.com/decred/dcrd/pull/2364))\r\n- rpcclient: Update unreleased requires to master ([decred/dcrd#2369](https://github.com/decred/dcrd/pull/2369))\r\n- blockchain/standalone: Remove txscript dep ([decred/dcrd#2388](https://github.com/decred/dcrd/pull/2388))\r\n- database: Prepare v2.0.2 ([decred/dcrd#2387](https://github.com/decred/dcrd/pull/2387))\r\n- hdkeycahin: Prepare v3.0.0 ([decred/dcrd#2392](https://github.com/decred/dcrd/pull/2392))\r\n- blockchain/standalone: Prepare v2.0.0 ([decred/dcrd#2395](https://github.com/decred/dcrd/pull/2395))\r\n- blockchain/stake: Prepare v3.0.0 ([decred/dcrd#2418](https://github.com/decred/dcrd/pull/2418))\r\n- gcs: Prepare v2.1.0 ([decred/dcrd#2420](https://github.com/decred/dcrd/pull/2420))\r\n- peer: Prepare v2.2.0 ([decred/dcrd#2422](https://github.com/decred/dcrd/pull/2422))\r\n- rpcclient: Prepare v6.0.0 ([decred/dcrd#2423](https://github.com/decred/dcrd/pull/2423))\r\n- blockchain: Prepare v3.0.0 ([decred/dcrd#2424](https://github.com/decred/dcrd/pull/2424))\r\n- rpcclient: Prepare v6.0.1 ([decred/dcrd#2455](https://github.com/decred/dcrd/pull/2455))\r\n- main: Update to use all new module versions ([decred/dcrd#2426](https://github.com/decred/dcrd/pull/2426))\r\n- main: Remove module replacements ([decred/dcrd#2428](https://github.com/decred/dcrd/pull/2428))\r\n- main: Use backported module updates ([decred/dcrd#2456](https://github.com/decred/dcrd/pull/2456))\r\n\r\n### Testing and Quality Assurance:\r\n\r\n- build: update golangci-lint to v1.21.0 ([decred/dcrd#1951](https://github.com/decred/dcrd/pull/1951))\r\n- mining: Add priority calculation tests ([decred/dcrd#1967](https://github.com/decred/dcrd/pull/1967))\r\n- build: Add deadcode to linters for CI tests ([decred/dcrd#1993](https://github.com/decred/dcrd/pull/1993))\r\n- multi: Updates for staticcheck results ([decred/dcrd#1994](https://github.com/decred/dcrd/pull/1994))\r\n- blockchain: Separate processing order tests ([decred/dcrd#2004](https://github.com/decred/dcrd/pull/2004))\r\n- blockchain: Add benchmark for ancestor traversal ([decred/dcrd#2010](https://github.com/decred/dcrd/pull/2010))\r\n- multi: Address a bunch of lint issues ([decred/dcrd#2028](https://github.com/decred/dcrd/pull/2028))\r\n- build: golangci-lint v1.22.2 ([decred/dcrd#2029](https://github.com/decred/dcrd/pull/2029))\r\n- secpk256k1: Add benchmark for RFC6979 nonce gen ([decred/dcrd#2044](https://github.com/decred/dcrd/pull/2044))\r\n- secp256k1: Cleanup signature tests ([decred/dcrd#2048](https://github.com/decred/dcrd/pull/2048))\r\n- rpctest: adapt new API ([decred/dcrd#1980](https://github.com/decred/dcrd/pull/1980))\r\n- rpcserver: Add handlers test ([decred/dcrd#2066](https://github.com/decred/dcrd/pull/2066))\r\n- build: use golangci v1.23.6 ([decred/dcrd#2068](https://github.com/decred/dcrd/pull/2068))\r\n- rpctest: Update for hdkeychain API changes ([decred/dcrd#2092](https://github.com/decred/dcrd/pull/2092))\r\n- build: test against go 1.14 ([decred/dcrd#2092](https://github.com/decred/dcrd/pull/2092))\r\n- secp256k1: Add benchmark for signing ([decred/dcrd#2085](https://github.com/decred/dcrd/pull/2085))\r\n- seck256k1: Add benchmark for sig serialization ([decred/dcrd#2087](https://github.com/decred/dcrd/pull/2087))\r\n- secp256k1: Add benchmark for pubkey decompression ([decred/dcrd#2094](https://github.com/decred/dcrd/pull/2094))\r\n- secp256k1: Move sig benchmarks to separate file ([decred/dcrd#2095](https://github.com/decred/dcrd/pull/2095))\r\n- secp256k1: Add benchmark for SignCompact ([decred/dcrd#2095](https://github.com/decred/dcrd/pull/2095))\r\n- secp256k1: Add benchmark for RecoverCompact ([decred/dcrd#2095](https://github.com/decred/dcrd/pull/2095))\r\n- secp256k1: Rework DER sig parsing tests ([decred/dcrd#2109](https://github.com/decred/dcrd/pull/2109))\r\n- schnorr: Cleanup signature benchmarking ([decred/dcrd#2126](https://github.com/decred/dcrd/pull/2126))\r\n- schnorr: Rework signing tests ([decred/dcrd#2128](https://github.com/decred/dcrd/pull/2128))\r\n- secp256k1: Make field value tests more consistent ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- secp256k1: Move field val set hex to test file ([decred/dcrd#2134](https://github.com/decred/dcrd/pull/2134))\r\n- schnorr: Add negative tests for sig verification ([decred/dcrd#2145](https://github.com/decred/dcrd/pull/2145))\r\n- hdkeychain: Add child key with leading zeros test ([decred/dcrd#2155](https://github.com/decred/dcrd/pull/2155))\r\n- schnorr: Add benchmark for Signature.Serialize ([decred/dcrd#2158](https://github.com/decred/dcrd/pull/2158))\r\n- secp256k1: Rework pubkey tests ([decred/dcrd#2160](https://github.com/decred/dcrd/pull/2160))\r\n- secp256k1: Explicit pubkey parsing errors in tests ([decred/dcrd#2160](https://github.com/decred/dcrd/pull/2160))\r\n- secp256k1: Add compressed pubkey parse benchmark ([decred/dcrd#2167](https://github.com/decred/dcrd/pull/2167))\r\n- secp256k1: Add uncompressed pubkey parse benchmark ([decred/dcrd#2167](https://github.com/decred/dcrd/pull/2167))\r\n- build: use newer github and linter versions ([decred/dcrd#2182](https://github.com/decred/dcrd/pull/2182))\r\n- wire: Test no-relay case in TestVersionWire ([decred/dcrd#2184](https://github.com/decred/dcrd/pull/2184))\r\n- wire: Use new errors.Is capabilities in tests ([decred/dcrd#2183](https://github.com/decred/dcrd/pull/2183))\r\n- connmgr: Add test for dial timeout ([decred/dcrd#2189](https://github.com/decred/dcrd/pull/2189))\r\n- connmgr: Add test for connect context cancel ([decred/dcrd#2189](https://github.com/decred/dcrd/pull/2189))\r\n- connmgr: Refactor conn req ID/state test asserts ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Update tests to ensure clean shutdown ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Improve TestConnectMode robustness ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Increase timeout in TestTargetOutbound ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Shore up TestMaxRetryDuration ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Tighten TestNetworkFailure ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Tighten TestStopFailed ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Tighten TestRemovePendingConnection ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- connmgr: Cleanup TestCancelIgnoreDelayedConnection ([decred/dcrd#2192](https://github.com/decred/dcrd/pull/2192))\r\n- server: Actively prevent regnet network discovery ([decred/dcrd#2197](https://github.com/decred/dcrd/pull/2197))\r\n- Add debug and trace facility to rpctest ([decred/dcrd#2176](https://github.com/decred/dcrd/pull/2176))\r\n- build: use golangci-lint v1.27.0 ([decred/dcrd#2207](https://github.com/decred/dcrd/pull/2207))\r\n- rpcserver: Add handler test coverage ([decred/dcrd#2230](https://github.com/decred/dcrd/pull/2230))\r\n- rpcserver: Add handleDecodeScript test ([decred/dcrd#2238](https://github.com/decred/dcrd/pull/2238))\r\n- txscript: Add tests for new strict null data func ([decred/dcrd#2248](https://github.com/decred/dcrd/pull/2248))\r\n- rpcserver: Add default configs for tests ([decred/dcrd#2249](https://github.com/decred/dcrd/pull/2249))\r\n- txscript: Rework check signature encoding test ([decred/dcrd#2244](https://github.com/decred/dcrd/pull/2244))\r\n- rpcserver: Add tests for block related handlers ([decred/dcrd#2250](https://github.com/decred/dcrd/pull/2250))\r\n- txscript: Rework check pubkey encoding test ([decred/dcrd#2247](https://github.com/decred/dcrd/pull/2247))\r\n- txscript: Add benchmark for CheckSignatureEncoding ([decred/dcrd#2246](https://github.com/decred/dcrd/pull/2246))\r\n- connmgr: Use t.Fatal when there are no params ([decred/dcrd#2254](https://github.com/decred/dcrd/pull/2254))\r\n- rpcserver: Rework default configs for tests ([decred/dcrd#2257](https://github.com/decred/dcrd/pull/2257))\r\n- rpcserver: Update tests to use default configs ([decred/dcrd#2257](https://github.com/decred/dcrd/pull/2257))\r\n- rpcserver: Run tests in parallel ([decred/dcrd#2257](https://github.com/decred/dcrd/pull/2257))\r\n- rpcserver: Update error case handling in tests ([decred/dcrd#2257](https://github.com/decred/dcrd/pull/2257))\r\n- rpcserver: Add handleEstimateSmartFee test ([decred/dcrd#2255](https://github.com/decred/dcrd/pull/2255))\r\n- rpcserver: Add handleEstimateStakeDiff test ([decred/dcrd#2269](https://github.com/decred/dcrd/pull/2269))\r\n- rpcserver: Add handleGetTicketPoolValue test ([decred/dcrd#2272](https://github.com/decred/dcrd/pull/2272))\r\n- rpcserver: Add handleGetStakeVersions test ([decred/dcrd#2272](https://github.com/decred/dcrd/pull/2272))\r\n- rpcserver: Add handleGetStakeVersionInfo test ([decred/dcrd#2272](https://github.com/decred/dcrd/pull/2272))\r\n- mempool: Don't use deprecated reject code in tests ([decred/dcrd#2273](https://github.com/decred/dcrd/pull/2273))\r\n- build: golangci-lint v1.28.3 ([decred/dcrd#2266](https://github.com/decred/dcrd/pull/2266))\r\n- rpcserver: add missed and live tickets rpc tests ([decred/dcrd#2284](https://github.com/decred/dcrd/pull/2284))\r\n- rpcserver: add verifychain & getdifficulty tests ([decred/dcrd#2285](https://github.com/decred/dcrd/pull/2285))\r\n- multi: add BlockTemplater interface ([decred/dcrd#2292](https://github.com/decred/dcrd/pull/2292))\r\n- multi: add rpcCPUMiner adaptor ([decred/dcrd#2300](https://github.com/decred/dcrd/pull/2300))\r\n- connmgr: Improve dial timeout test synchronization ([decred/dcrd#2309](https://github.com/decred/dcrd/pull/2309))\r\n- rpcserver: Add handleGetCFilter tests ([decred/dcrd#2312](https://github.com/decred/dcrd/pull/2312))\r\n- rpcserver: Add handleGetCFilterHeader tests ([decred/dcrd#2312](https://github.com/decred/dcrd/pull/2312))\r\n- rpcserver: Add handleGetCFilterV2 tests ([decred/dcrd#2312](https://github.com/decred/dcrd/pull/2312))\r\n- rpcserver: Add handleExistsAddress test ([decred/dcrd#2291](https://github.com/decred/dcrd/pull/2291))\r\n- rpcserver: Add handleExistsAddresses test ([decred/dcrd#2291](https://github.com/decred/dcrd/pull/2291))\r\n- contrib: Respect quoted args in simnet ctl scripts ([decred/dcrd#2322](https://github.com/decred/dcrd/pull/2322))\r\n- contrib: Support MSYS2 in simnet setup script ([decred/dcrd#2323](https://github.com/decred/dcrd/pull/2323))\r\n- multi: add getwork tests ([decred/dcrd#2306](https://github.com/decred/dcrd/pull/2306))\r\n- rpcserver: add setgenerate & regentemplate tests ([decred/dcrd#2308](https://github.com/decred/dcrd/pull/2308))\r\n- rpcserver: Add TxMempooler interface ([decred/dcrd#2324](https://github.com/decred/dcrd/pull/2324))\r\n- rpcserver: Add handleExistsMempoolTxs test ([decred/dcrd#2324](https://github.com/decred/dcrd/pull/2324))\r\n- contrib: Update simnet script for dcrwallet master ([decred/dcrd#2327](https://github.com/decred/dcrd/pull/2327))\r\n- contrib: Support env var in simnet setup script ([decred/dcrd#2328](https://github.com/decred/dcrd/pull/2328))\r\n- contrib: Use var for simnet wallet create answers ([decred/dcrd#2328](https://github.com/decred/dcrd/pull/2328))\r\n- contrib: Update simnet script for wallet cointype ([decred/dcrd#2333](https://github.com/decred/dcrd/pull/2333))\r\n- build: test against go 1.15 ([decred/dcrd#2334](https://github.com/decred/dcrd/pull/2334))\r\n- blockchain: Add test func to remove deployment ([decred/dcrd#2343](https://github.com/decred/dcrd/pull/2343))\r\n- rpcserver: Add AddrIndexer interface ([decred/dcrd#2330](https://github.com/decred/dcrd/pull/2330))\r\n- rpcserver: Add TxIndexer interface ([decred/dcrd#2330](https://github.com/decred/dcrd/pull/2330))\r\n- rpcserver: Add testDB and testDatabaseTx ([decred/dcrd#2330](https://github.com/decred/dcrd/pull/2330))\r\n- rpcserver: Add handleSearchRawTransactions tests ([decred/dcrd#2330](https://github.com/decred/dcrd/pull/2330))\r\n- rpcserver: Add handleGenerate test ([decred/dcrd#2342](https://github.com/decred/dcrd/pull/2342))\r\n- mempool: Add TAdd Tests ([decred/dcrd#2350](https://github.com/decred/dcrd/pull/2350))\r\n- mempool: Improve tspend expiry handling and tests ([decred/dcrd#2350](https://github.com/decred/dcrd/pull/2350))\r\n- rpcserver: Verify tbase values in treasury rpctest ([decred/dcrd#2352](https://github.com/decred/dcrd/pull/2352))\r\n- rpctest: Add ability to limit VotingWallet votes ([decred/dcrd#2352](https://github.com/decred/dcrd/pull/2352))\r\n- rpcserver: Assert vote counts in treasury rpctest ([decred/dcrd#2351](https://github.com/decred/dcrd/pull/2351))\r\n- rpctest: Make votingwallet txs standard ([decred/dcrd#2373](https://github.com/decred/dcrd/pull/2373))\r\n- dcrutil: Cleanup verify tests and use mock params ([decred/dcrd#2382](https://github.com/decred/dcrd/pull/2382))\r\n- standalone: Add IsTreasuryVoteInterval tests ([decred/dcrd#2394](https://github.com/decred/dcrd/pull/2394))\r\n- standalone: Rework and add CalcTSpendExpiry tests ([decred/dcrd#2394](https://github.com/decred/dcrd/pull/2394))\r\n- standalone: Add InsideTSpendWindow tests ([decred/dcrd#2394](https://github.com/decred/dcrd/pull/2394))\r\n- standalone: Add IsTreasuryBase tests ([decred/dcrd#2394](https://github.com/decred/dcrd/pull/2394))\r\n- chaingen: implement DCP0001 for generator ([decred/dcrd#2329](https://github.com/decred/dcrd/pull/2329))\r\n- blockchain: Add chaingen harness AdvanceToHeight ([decred/dcrd#2090](https://github.com/decred/dcrd/pull/2090))\r\n- blockchain: Rework AdvanceToHeight ([decred/dcrd#2090](https://github.com/decred/dcrd/pull/2090))\r\n- rpcserver: Add --rejectnonstd to rpctest ([decred/dcrd#2415](https://github.com/decred/dcrd/pull/2415))\r\n\r\n### Misc:\r\n\r\n- release: Bump for 1.6 release cycle ([decred/dcrd#1948](https://github.com/decred/dcrd/pull/1948))\r\n- multi: resolve todos ([decred/dcrd#1869](https://github.com/decred/dcrd/pull/1869))\r\n- multi: remove whitespace ([decred/dcrd#2009](https://github.com/decred/dcrd/pull/2009))\r\n- release: Add example OpenBSD rc.d service script ([decred/dcrd#2030](https://github.com/decred/dcrd/pull/2030))\r\n- release: Remove build metadata from master branch ([decred/dcrd#2053](https://github.com/decred/dcrd/pull/2053))\r\n- secp256k1: Improve NonceRFC6979 comment ([decred/dcrd#2044](https://github.com/decred/dcrd/pull/2044))\r\n- secp256k1: Correct comments in signature.go ([decred/dcrd#2046](https://github.com/decred/dcrd/pull/2046))\r\n- multi: Resolve go1.15 vet complaints ([decred/dcrd#2310](https://github.com/decred/dcrd/pull/2310))\r\n- multi: Address some linter complaints ([decred/dcrd#2399](https://github.com/decred/dcrd/pull/2399))\r\n- build: bump golangci-lint to 1.24.0 ([decred/dcrd#2141](https://github.com/decred/dcrd/pull/2141))\r\n- main: Simplify startup logic slightly ([decred/dcrd#2293](https://github.com/decred/dcrd/pull/2293))\r\n- docker: Update image to golang:1.14 ([decred/dcrd#2202](https://github.com/decred/dcrd/pull/2202))\r\n- release: Remove no longer used release bits ([decred/dcrd#2317](https://github.com/decred/dcrd/pull/2317))\r\n- docker: Update image to golang:1.15 ([decred/dcrd#2335](https://github.com/decred/dcrd/pull/2335))\r\n- release: Bump for 1.6.0 ([decred/dcrd#2340](https://github.com/decred/dcrd/pull/2340))\r\n\r\n### Code Contributors (alphabetical order):\r\n\r\n- Brian Stafford\r\n- Dave Collins\r\n- David Hill\r\n- degeri\r\n- Donald Adu-Poku\r\n- Jamie Holdstock\r\n- Joe Gruffins\r\n- Josh Rickmar\r\n- Julian Yap\r\n- Marco Peereboom\r\n- Matheus Degiovani\r\n- Matt Hawkins\r\n- Ryan Riley\r\n- Ryan Staudt\r\n- Wisdom Arerosuoghene\r\n- Youssef Boukenken\r\n- zhizhongzhiwai", "created_at": "2021-01-21T19:39:11Z", "project": "Decred (DCR)", "currency": "dcr", "alias": "decred", "repo": "decred/dcrd", "type": "utxo", "hosting": "github", "explorer": "https://mainnet.decred.org", "explorer1": "https://dcrdata.decred.org/", "doc": "https://docs.decred.org/advanced/full-node", "api": "https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v0.16.2", "tag_name": "v0.16.2", "html_url": "https://github.com/okex/okexchain/releases/tag/v0.16.2", "repo_url": "https://github.com/okex/okexchain", "body": "## Bug Fixes\r\n\r\n* #554 fix ethermint msg format error\r\n* #555 reset accessList in EndBlocker\r\n* #562 fix the copy function in CommitStateDB\r\n* #563 fix metamask wallet pending while sending an error tx\r\n* #570 fix the wrong flag of unlock-key filepath\r\n\r\n\r\n## Improvements\r\n* add more unittest code for x/evm:\r\n   * #552 add evm keeper and genesis ut\r\n   * #557 add init genesis test case\r\n   * #559 add evm state db ut\r\n   * #571 add evm types ut\r\n* #566 register gov rest api\r\n* #568 add whitelist in swap  api\r\n* #569 add farm rest api \r\n", "created_at": "2021-01-21T15:50:30Z", "project": "OKExChain (OKT)", "currency": "okt", "alias": "okex", "repo": "okex/okexchain", "type": "cosmos", "hosting": "github", "explorer": "https://www.oklink.com/okexchain", "doc": "https://okexchain-docs.readthedocs.io/en/latest/getting-start/install-okexchain.html", "api": "https://documenter.getpostman.com/view/1112175/SzS5u6bE?version=latest#c5e563ed-ce31-42f6-8203-1ebe29563fc6", "add_time": "2020-12-30T02:00:00Z"}, {"name": "Reward Scale", "tag_name": "1.1.66", "html_url": "https://github.com/helium/blockchain-etl/releases/tag/1.1.66", "repo_url": "https://github.com/helium/blockchain-etl", "body": "This release adds reward_scale to gateway processing. \r\n\r\nThe `reward_scale` column for `gateways` and `gateway_inventory1 is _only_ updated on election blocks since reward_scale calculation is quite expensive. \r\n\r\n**NOTE**: This release requires a migration.", "created_at": "2021-01-21T13:33:32Z", "project": "Helium (HNT)", "currency": "hnt", "alias": "helium", "repo": "helium/blockchain-etl", "type": "helium", "hosting": "github", "explorer": "https://explorer.helium.com", "doc": "https://developer.helium.com/blockchain/setting-up-an-api-full-node", "api": "https://developer.helium.com/blockchain/api", "add_time": "2020-04-04T22:00:00Z"}, {"name": "Release v2.0.8-1", "tag_name": "v2.0.8-1", "html_url": "https://github.com/chainx-org/ChainX/releases/tag/v2.0.8-1", "repo_url": "https://github.com/chainx-org/ChainX", "body": "\r\nUpgrade priority:\r\n\r\n- [ ] **Medium** (upgrade at your earliest convenience)\r\n- [x] **High** (upgrade ASAP)\r\n\r\nWASM runtime built with [srtool](https://hub.docker.com/r/chainxorg/srtool) using `rustc 1.48.0-nightly (381b445ff 2020-09-29)`.\r\n\r\nchainx runtime proposal hash: `0x9d9e740fcb3d9bbdd5ed1db5824ffc91b2728ab9c9899bb12d2927c2876f7ea3`.\r\n\r\nNative runtime version: **9**\r\n\r\n#### Changes\r\n\r\n##### Runtime\r\nN/A\r\n\r\n##### Others\r\n\r\nRename `ChainX CC1` to `ChainX` on telemetry.\r\n\r\n", "created_at": "2021-01-21T07:29:44Z", "project": "ChainX (PCX)", "currency": "pcx", "alias": "chainx", "repo": "chainx-org/ChainX", "type": "polkadot", "hosting": "github", "explorer": "https://scan.chainx.org", "doc": "https://doc.chainx.org/#/zh-en/run-a-Chainx-node", "api": "https://github.com/chainx-org/ChainX/wiki/RPC", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Darwinia 0.9.0", "tag_name": "v0.9.0", "html_url": "https://github.com/darwinia-network/darwinia/releases/tag/v0.9.0", "repo_url": "https://github.com/darwinia-network/darwinia", "body": "## Darwinia 0.9.0\r\n|  Chain   | Runtime Spec Version |\r\n| :------: | :------------------: |\r\n| Darwinia |          18          |\r\n|   Crab   |          37          |\r\n\r\n## README\r\n\r\n### Darwinia CC1\r\n**Run with `--chain darwinia` or leave it empty to participate in Darwinia.** \r\n**\u4f7f\u7528 `--chain darwinia` \u6216\u4e0d\u586b\u5199\uff0c\u53c2\u4e0e\u5230 Darwinia \u7f51\u7edc\u3002**\r\n\r\n### Crab\r\n**Run with `--chain crab` to participate in Crab.** \r\n**\u4f7f\u7528 `--chain crab` \uff0c\u53c2\u4e0e\u5230 Crab \u7f51\u7edc\u3002**\r\n\r\n## Resource\r\n\r\n### Binary\r\n|               |  Arch   | glibc (at least) | llvm (at least) | pre-build |\r\n| :-----------: | :-----: | :--------------: | :-------------: | :-------: |\r\n| General Linux | x86_64  |       2.17       |       3.8       |     \u2714\ufe0e     |\r\n|  RaspberryPi  | aarch64 |       2.23       |       3.8       |     \u2714\ufe0e     |\r\n\r\n### Docker\r\n```docker\r\ndocker pull quay.io/darwinia-network/darwinia:v0.9.0\r\n```\r\n\r\n## Change Log\r\n\r\n### Update(s)\r\n### Fix(es)\r\n### Migration(s)\r\n\r\n### Darwinia Custom\r\n#### Runtime\r\n- Enable D2E bridge\r\n#### Migration(s)\r\n- Initialize `EthereumRelayAuthorities-Authorities` [C 401](https://github.com/darwinia-network/darwinia-common/pull/401)\r\n- Initialize `EthereumBacking-SetAuthoritiesAddress` [C 416](https://github.com/darwinia-network/darwinia-common/pull/416)\r\n\r\n### Crab Custom \r\n#### Runtime\r\n#### Migration(s)", "created_at": "2021-01-21T01:54:15Z", "project": "Darwinia (CRING)", "currency": "cring", "alias": "darwinia", "repo": "darwinia-network/darwinia", "type": "polkadot", "hosting": "github", "explorer": "https://crab.subscan.io", "doc": "https://github.com/paritytech/polkadot/blob/master/doc/docker.md", "doc1": "https://docs.google.com/document/d/1z0MF60OEe-kGvTW8ggFoDg_BWt6ZMPJGrDl0Jp_HSeE/edit", "api": "https://polkadot.js.org/api/substrate/rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Algorand BetaNet v2.4.1", "tag_name": "v2.4.1-beta", "html_url": "https://github.com/algorand/go-algorand/releases/tag/v2.4.1-beta", "repo_url": "https://github.com/algorand/go-algorand", "body": "![GitHub Logo](https://www.algorand.com/static/link-grid-bottom-252785b210330feb4966f54fc17cc7cc.jpg)\r\n\r\n## Highlights\r\n\r\nThis release is primarily to fix an issue with telemetry configuration being set incorrectly, in a bug that was introduced in 2.3.0.\r\n\r\n## Changes\r\n\r\n1. Config\r\n    * Bug Fixes\r\n        * Read from global logging config if data dir not provided\r\n        * Fix regression to loadTelemetryConfig introduced in 2.3.0\r\n1. Other\r\n    * Bug Fix - move check_golang_version check to fix travis builds\r\n\r\n## Protocol Upgrade\r\nThis release does not contain a consensus protocol upgrade.\r\n\r\n## Additional Resources\r\n* [Algorand Forum](https://forum.algorand.org)\r\n* [Developer Documentation](https://developer.algorand.org)", "created_at": "2021-01-20T21:30:02Z", "project": "Algorand (ALGO)", "currency": "algo", "alias": "algorand", "repo": "algorand/go-algorand", "type": "utxo", "hosting": "github", "explorer": "https://algoexplorer.io", "doc": "https://developer.algorand.org/docs/run-a-node/setup/install", "api": "https://developer.algorand.org/docs/reference/rest-apis/algod", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Testnet - v1.5.4", "tag_name": "v1.5.4", "html_url": "https://github.com/solana-labs/solana/releases/tag/v1.5.4", "repo_url": "https://github.com/solana-labs/solana", "body": "**This is a Testnet release.  It is not recommended for Mainnet Beta**\r\n\r\n#### Changes\r\n* Switch command-line-interface to use single-gossip rather than fully finalized\r\n* RPC reliability improvements\r\n* Low validator identity balance alert now settable with --minimum-validator-identity-balance\r\n* Added `getSnapshotSlot` RPC method which provides a convenient method to determine the highest snapshot that a node has available to it\r\n* Added `getHealth` RPC method which mimics the `/health` REST endpoint, but also provides information about how far behind the validator is.\r\n* Default command-line to single gossip confirmation for better responsiveness\r\n* `getSignatureStatuses` RPC method now includes `confirmationStatus` field\r\n* Improved load/store/execute timing messages in validator logs\r\n* Add support for cross-program invocations to program-test\r\n* Improve various RPC's timeout issues including BigTable backend", "created_at": "2021-01-20T18:04:25Z", "project": "Solana (SOL)", "currency": "sol", "alias": "solana", "repo": "solana-labs/solana", "type": "solana", "hosting": "github", "explorer": "https://explorer.solana.com/", "explorer1": "https://solanabeach.io", "doc": "https://docs.solana.com/integrations/exchange", "api": "https://docs.solana.com/apps/jsonrpc-api", "add_time": "2020-06-17T03:00:00Z"}, {"name": "Celo-Blockchain Release 1.2.2-stable", "tag_name": "v1.2.2", "html_url": "https://github.com/celo-org/celo-blockchain/releases/tag/v1.2.2", "repo_url": "https://github.com/celo-org/celo-blockchain", "body": "The major changes in the release are the addition of support for multiple proxies (#1026) and the ability to hotswap validators (#1141). There are a couple changes brought in from upstream geth to improve the dial scheduler (#1192) and improve the handling of chain repairs (#1163). This also includes several bug fixes to improve uptime: proxied validators not properly updating the proxy assignments on epoch blocks (#1240), an issue randomness beacon that could cause nodes to miss proposing and signing blocks (#1278), and fix to properly clear the message backlog (#1300).\r\n\r\n\r\nUpgrading Notes\r\n* The communication protocol between the validator and it's proxies implemented in release 1.2 is NOT backwards compatible to the pre-1.2 protocol.  If the proxy or validator is being upgraded to 1.2, then both need to be upgraded to that version.  \r\n* Validators and proxies using release 1.2 are still compatible with remote nodes running previous versions.\r\n* If you are upgrading from a version earlier than 1.1.0, see [1.1.0 release notes](https://github.com/celo-org/celo-blockchain/releases/tag/v1.1.0) for changes made to remove the geth init step.\r\n\r\nCommand Line Changes\r\n* `--ethstats` is being deprecated in favor of `--celostats`. `--ethstats` will be removed in a future version.\r\n* `--proxy.proxyenodeurlpair` is being deprecated in favor of `--proxy.proxyenodeurlpairs`. ` --proxy.proxyenodeurlpair` will be removed in a future version. Refer to multi-proxy docs for usage.\r\n* `--istanbul.replica` has been added. Refer to hotswap docs for usage.\r\n\r\nGeth Management RPC Additions\r\n* `istanbul.start()` and `istanbul.startAtBlock()`\r\n* `istanbul.stop()` and `istanbul.stopAtBlock()`\r\n* `istanbul.replicaState` and `istanbul.validating` as new fields.\r\n* `istanbul.addProxy(internal enode, external enode)`\r\n* `istanbul.removeProxy(internal enode)`\r\n* `istanbul.proxies` and `istanbul.proxiedValidators` as new fields applicable to validators and proxies, respectively.\r\n\r\nQuick Links:\r\n* [Multiproxy docs](https://docs.celo.org/validator-guide/proxy)\r\n* [Hotswap Docs](https://docs.celo.org/validator-guide/node-upgrades#hotswapping-validator-nodes)\r\n\r\nNotable Changes:\r\n* Multiproxy (#1026)\r\n* Hotswap Validators (#1141)\r\n* Chain repair fixes (#1163)\r\n* Cherry pick new dial scheduler from upstream (#1192)\r\n* Fix disconnecting unelected validators in ReplaceValidatorPeers() (#1191)\r\n* Celo1 hard fork field added to config (#1173)\r\n* Make primary protocol concept apply to specific versions of istanbul (#1201)\r\n* Make static dials subject to the maxActiveDials limit. (#1202)\r\n* Fix goroutine leak in celostats login. (#1206)\r\n* Security fix with Golang 1.14.12 (#1222, #1226)\r\n* Fixes an issue where passing the flag `--ethstats` or `--celostats` causes the node to crash (#1218)\r\n* Fixes a LES vulnerability from upstream (#1267)\r\n* Fixes an issue with the randomness beacon that could cause nodes to miss proposing and signing blocks (#1278, #1289)\r\n* Properly clears the message backlog (#1300)\r\n\r\nChanges Since 1.2.0\r\n* Security fix with Golang 1.14.12 (#1222, #1226)\r\n* Fixes an issue where passing the flag `--ethstats` or `--celostats` causes the node to crash (#1218)\r\n* Fixes a LES vulnerability from upstream (#1267)\r\n* Fixes an issue with the randomness beacon that could cause nodes to miss proposing and signing blocks (#1278, #1289)\r\n* Properly clears the message backlog (#1300)\r\n\r\n\r\nDocker Images\r\n- geth: us.gcr.io/celo-org/geth:1.2.2\r\n- geth-all: us.gcr.io/celo-org/geth-all:1.2.2", "created_at": "2021-01-20T14:50:31Z", "project": "Celo (CELO)", "currency": "celo", "alias": "celo", "repo": "celo-org/celo-blockchain", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.celo.org", "doc": "https://docs.celo.org/getting-started/mainnet/running-a-full-node-in-mainnet", "api": "https://eth.wiki/json-rpc/API", "add_time": "2020-07-07T07:00:00Z"}, {"name": "v3.0.1", "tag_name": "v3.0.1", "html_url": "https://github.com/cosmos/gaia/releases/tag/v3.0.1", "repo_url": "https://github.com/cosmos/gaia", "body": "# Gaia v.3.0.1 Release Notes\r\n\r\nThis release includes bug fixes from the Cosmos SDK and Tendermint. \r\nThis release also introduces important security patches.\r\n\r\nNo breaking changes are introduced, but users are encouraged to use this release when upgrading their networks to Gaia v3.\r\n\r\nSee the [Cosmos SDK v0.40.1 Release](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.40.1) for details. ", "created_at": "2021-01-20T14:22:31Z", "project": "Cosmos (ATOM)", "currency": "atom", "alias": "cosmos", "repo": "cosmos/gaia", "type": "cosmos", "hosting": "github", "explorer": "https://www.mintscan.io", "doc": "https://hub.cosmos.network/main/gaia-tutorials/installation.html", "api": "https://cosmos.network/rpc/master", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.4.1", "tag_name": "v1.4.1", "html_url": "https://github.com/filecoin-project/lotus/releases/tag/v1.4.1", "repo_url": "https://github.com/filecoin-project/lotus", "body": "This is an optional Lotus release that introduces various improvements to the sealing, mining, and deal-making processes. In particular, [#5341](https://github.com/filecoin-project/lotus/pull/5341) introduces the ability for Lotus miners to terminate sectors.\r\n\r\n## Changes\r\n\r\n#### Core Lotus\r\n\r\n- fix(sync): enforce ForkLengthThreshold for synced chain (https://github.com/filecoin-project/lotus/pull/5182)\r\n- introduce memory watchdog; LOTUS_MAX_HEAP (https://github.com/filecoin-project/lotus/pull/5101)\r\n- Skip bootstrapping if no peers specified (https://github.com/filecoin-project/lotus/pull/5301)\r\n- Chainxchg write response timeout (https://github.com/filecoin-project/lotus/pull/5254)\r\n- update NewestNetworkVersion (https://github.com/filecoin-project/lotus/pull/5277)\r\n- fix(sync): remove checks bypass when we submit the block (https://github.com/filecoin-project/lotus/pull/4192)\r\n- chore: export vm.ShouldBurn (https://github.com/filecoin-project/lotus/pull/5355)\r\n- fix(sync): enforce fork len when changing head (https://github.com/filecoin-project/lotus/pull/5244)\r\n- Use 55th percentile instead of median for gas-price (https://github.com/filecoin-project/lotus/pull/5369)\r\n- update go-libp2p-pubsub to v0.4.1 (https://github.com/filecoin-project/lotus/pull/5329)\r\n\r\n#### Sealing\r\n\r\n- Sector termination support (https://github.com/filecoin-project/lotus/pull/5341)\r\n- update weight canSeal and canStore when attach (https://github.com/filecoin-project/lotus/pull/5242/files)\r\n- sector-storage/mock: improve mocked readpiece (https://github.com/filecoin-project/lotus/pull/5208)\r\n- Fix deadlock in runWorker in sched_worker.go (https://github.com/filecoin-project/lotus/pull/5251)\r\n- Skip checking terminated sectors provable (https://github.com/filecoin-project/lotus/pull/5217)\r\n- storagefsm: Fix unsealedInfoMap.lk init race (https://github.com/filecoin-project/lotus/pull/5319)\r\n- Multicore AddPiece CommP (https://github.com/filecoin-project/lotus/pull/5320)\r\n- storagefsm: Send correct event on ErrExpiredTicket in CommitFailed (https://github.com/filecoin-project/lotus/pull/5366)\r\n- expose StateSearchMessage on gateway (https://github.com/filecoin-project/lotus/pull/5382)\r\n- fix FileSize to return correct disk usage recursively (https://github.com/filecoin-project/lotus/pull/5384)\r\n\r\n#### Dealmaking\r\n\r\n- Better error message when withdrawing funds (https://github.com/filecoin-project/lotus/pull/5293)\r\n- add verbose for list transfers (https://github.com/filecoin-project/lotus/pull/5259)\r\n- cli - rename `client info` to `client balances` (https://github.com/filecoin-project/lotus/pull/5304)\r\n- Better CLI for wallet market withdraw and client info (https://github.com/filecoin-project/lotus/pull/5303)\r\n\r\n#### UX\r\n\r\n- correct flag usages for replace cmd (https://github.com/filecoin-project/lotus/pull/5255)\r\n- lotus state call will panic (https://github.com/filecoin-project/lotus/pull/5275)\r\n- fix get sector bug (https://github.com/filecoin-project/lotus/pull/4976)\r\n- feat: lotus wallet market add (adds funds to storage market actor) (https://github.com/filecoin-project/lotus/pull/5300)\r\n- Fix client flag parsing in client balances cli (https://github.com/filecoin-project/lotus/pull/5312)\r\n- delete slash-consensus miner (https://github.com/filecoin-project/lotus/pull/4577)\r\n- add fund sufficient check in send (https://github.com/filecoin-project/lotus/pull/5252)\r\n- enable parse and shorten negative FIL values (https://github.com/filecoin-project/lotus/pull/5315)\r\n- add limit and rate for chain noise (https://github.com/filecoin-project/lotus/pull/5223)\r\n- add bench env print (https://github.com/filecoin-project/lotus/pull/5222)\r\n- Implement full-node restore option (https://github.com/filecoin-project/lotus/pull/5362)\r\n- add color for token amount (https://github.com/filecoin-project/lotus/pull/5352)\r\n- correct log in maybeUseAddress (https://github.com/filecoin-project/lotus/pull/5359)\r\n- add slash-consensus from flag (https://github.com/filecoin-project/lotus/pull/5378)\r\n\r\n#### Testing\r\n\r\n- tvx extract: more tipset extraction goodness (https://github.com/filecoin-project/lotus/pull/5258)\r\n- Fix race in blockstore test suite (https://github.com/filecoin-project/lotus/pull/5297)\r\n\r\n\r\n#### Build & Networks\r\n\r\n- Remove LOTUS_DISABLE_V2_ACTOR_MIGRATION envvar (https://github.com/filecoin-project/lotus/pull/5289)\r\n- Create a calibnet build option (https://github.com/filecoin-project/lotus/pull/5288)\r\n- Calibnet: Set Orange epoch (https://github.com/filecoin-project/lotus/pull/5325)\r\n\r\n#### Management\r\n\r\n- Update SECURITY.md (https://github.com/filecoin-project/lotus/pull/5246)\r\n- README: Contribute section (https://github.com/filecoin-project/lotus/pull/5330)\r\n- README: refine Contribute section (https://github.com/filecoin-project/lotus/pull/5331)\r\n- Add misc tooling to codecov ignore list (https://github.com/filecoin-project/lotus/pull/5347)", "created_at": "2021-01-20T08:47:42Z", "project": "Filecoin (FIL)", "currency": "fil", "alias": "fil", "repo": "filecoin-project/lotus", "type": "ipfs", "hosting": "github", "explorer1": "https://filscout.io/zh", "explorer": "https://filfox.info/zh", "doc": "https://lotu.sh/en+install-lotus-ubuntu", "api": "https://lotu.sh/en+api-methods", "add_time": "2020-09-11T09:52:00Z"}, {"name": "GreatVoyage-v4.1.2", "tag_name": "GreatVoyage-v4.1.2", "html_url": "https://github.com/tronprotocol/java-tron/releases/tag/GreatVoyage-v4.1.2", "repo_url": "https://github.com/tronprotocol/java-tron", "body": "## Notices\r\nForced upgrade\r\n\r\n## New Features\r\n\r\n### Core\r\n\r\n- Support to perform historical balance lookup. #3538\r\n- Blackhole account optimization. #3608\r\n- [TIP-196](https://github.com/tronprotocol/tips/issues/196) Reward SRs with the transaction fees charged for bandwidth and Energy. #3532\r\n\r\n### TVM\r\n\r\n- [TIP-209](https://github.com/tronprotocol/tips/blob/master/tip-209.md) Adopt to solidity0.6.0.  #3535\r\n   - The try/catch-statement currently only support revert-style error message, other error messages will be supported in future.\r\n- [TIP-204](https://github.com/tronprotocol/tips/blob/master/tip-204.md) Allow to change maxfeelimit. #3534\r\n\r\n### API\r\n\r\n- Add new APIs to support to perform a historical balance lookup. #3538\r\n   - GetAccountBalance: perform a historical balance lookup.\r\n   - GetBlockBalance: fetch all balance-changing operations in a block.\r\n   - GetBurnTrxAmount: query burned TRX amount\r\n## Changes\r\n\r\n- Support the jitpack repository to provide dependency support and make it easy for developers to use java-tron as a dependency for their projects. #3553\r\n\r\n", "created_at": "2021-01-20T08:01:19Z", "project": "TRON (TRX)", "currency": "trx", "alias": "tron", "repo": "tronprotocol/java-tron", "type": "tron", "hosting": "github", "explorer": "https://tronscan.org", "doc": "https://tronprotocol.github.io/documentation-zh/developers/deployment", "api": "https://tronprotocol.github.io/documentation-zh/api/http", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Aganippe (v1.11.21)", "tag_name": "v1.11.21", "html_url": "https://github.com/etclabscore/core-geth/releases/tag/v1.11.21", "repo_url": "https://github.com/etclabscore/core-geth", "body": "- __Add__ `--ecbp1100.nodisable` as a way to disable ECBP1100 auto-shutoff mechanisms (low peers and stale head) (#303).\r\n- __Add__ a new RPC API subscription method `newSideBlocks`, creating a subscription to side-chain import events (blocks written but not considered canonical) (Websocket, IPC, and `inproc` only) (#293).\r\n- __Add__ OpenRPC `rpc.discover` schema compliance tests (#295).\r\n- __Refactor__ `cmd/faucet` to fix some bugs and add some features, including...\r\n  - __Add__ `faucet --attach` flag to allow you to run a faucet on top of an existing node instance (instead of only on top of a dedicated light client) (#269).\r\n  - __Add__ `faucet --syncmode=[full|fast|light]` flag to decide the syncmode of a faucet-managed node (instead of only a default LES client) (#268).\r\n  - __Migrate__ the faucet's node data directory (if any) from `<datadir>/MultiFaucet` to `<datadir>/CoreFaucet`. The data migration logic should handle this automatically for you, but if you're using a custom setup you may need to reconfigure (#279).\r\n- __Fix__ a `geth console` bug where `--jspath` and `--preload` together would generate a bad path (#274).\r\n- __Remove__ `cmd/puppeth` to reduce footprint and trim feature-creep (#270).\r\n- Finally set up a __documentation site__, check it out!  __https://etclabscore.github.io/core-geth__  \ud83d\udcd5 :tada:\r\n  (#291, #294, #300)\r\n\r\n---\r\n\r\n- Docker images published under [`etclabscore/core-geth`](https://hub.docker.com/r/etclabscore/core-geth/builds).", "created_at": "2021-01-19T15:00:02Z", "project": "Ethereum Classic (ETC)", "currency": "etc", "alias": "ethereum-classic", "repo": "etclabscore/core-geth", "type": "ethereum", "hosting": "github", "explorer1": "https://expedition.dev/?network=mainnet", "explorer": "https://etc.tokenview.com/cn", "explorer2": "https://etcblockexplorer.com", "doc": "https://etclabscore.github.io/core-geth/getting-started/installation/", "api": "https://etclabscore.github.io/core-geth/apis/jsonrpc-apis/", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.0.5", "tag_name": "v1.0.5", "html_url": "https://github.com/binance-chain/bsc/releases/tag/v1.0.5", "repo_url": "https://github.com/binance-chain/bsc", "body": "SECURITY\r\n* [\\#63](https://github.com/binance-chain/bsc/pull/63) security patches from go-ethereum \r\n* [\\#54](https://github.com/binance-chain/bsc/pull/54) les: fix GetProofsV2 that could potentially cause a panic.\r\n\r\nFEATURES\r\n* [\\#56](https://github.com/binance-chain/bsc/pull/56) apply mirror sync upgrade \r\n* [\\#53](https://github.com/binance-chain/bsc/pull/53) support fork id in header; elegant upgrade\r\n\r\nIMPROVEMENT\r\n* [\\#61](https://github.com/binance-chain/bsc/pull/61)Add `x-forward-for` log message when handle message failed\r\n* [\\#60](https://github.com/binance-chain/bsc/pull/61) add rpc method request gauge\r\n\r\nBUGFIX\r\n* [\\#59](https://github.com/binance-chain/bsc/pull/59) fix potential deadlock of pub/sub module \r\n", "created_at": "2021-01-19T03:46:02Z", "project": "Binance Smart Chain (BSC)", "currency": "bsc", "alias": "bsc", "repo": "binance-chain/bsc", "type": "fork eth", "hosting": "github", "explorer": "https://bscscan.com", "doc": "https://docs.binance.org/smart-chain/developer/fullnode.html", "api": "https://documenter.getpostman.com/view/4117254/ethereum-json-rpc/RVu7CT5J?version=latest", "add_time": "2020-09-17T09:00:00Z"}, {"name": "Apricot Phase 0 - Patch 3", "tag_name": "v1.1.3", "html_url": "https://github.com/ava-labs/avalanchego/releases/tag/v1.1.3", "repo_url": "https://github.com/ava-labs/gecko", "body": "This update is optional but encouraged. The patch includes minor bug fixes relating to APIs.\r\n\r\n- Fixed hanging call when attempting to filter C-chain logs.\r\n- Fixed C-chain client to call the proper multi-coin API.\r\n- Added `getAtomicUTXOs` to `avm` and `platformvm` API clients.", "created_at": "2021-01-15T19:27:01Z", "project": "Avalanche (AVAX)", "currency": "avax", "alias": "ava", "repo": "ava-labs/gecko", "type": "avax", "hosting": "github", "explorer": "https://explorer.avax.network", "doc": "https://docs.avax.network/build/getting-started", "api": "https://docs.avax.network/build/tools/ortelius", "add_time": "2020-08-24T05:00:00Z"}, {"name": "Release 2.0.2", "tag_name": "2.0.2", "html_url": "https://github.com/blockstack/stacks-blockchain/releases/tag/2.0.2", "repo_url": "https://github.com/blockstack/stacks-blockchain", "body": "", "created_at": "2021-01-15T18:15:53Z", "project": "Blockstack (STX)", "currency": "stx", "alias": "blockstack", "repo": "blockstack/stacks-blockchain", "type": "utxo", "hosting": "github", "explorer": "https://explorer.stacks.co/?chain=mainnet", "doc": "https://docs.blockstack.org/understand-stacks/running-mainnet-node", "api": "https://blockstack.github.io/stacks-blockchain-api/", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Bitcoin Core 0.21.0", "tag_name": "v0.21.0", "html_url": "https://github.com/bitcoin/bitcoin/releases/tag/v0.21.0", "repo_url": "https://github.com/bitcoin/bitcoin", "body": "Bitcoin Core version 0.21.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.21.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.21.0.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.", "created_at": "2021-01-13T21:57:24Z", "project": "Bitcoin (BTC)", "currency": "btc", "alias": "bitcoin", "repo": "bitcoin/bitcoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/btc", "explorer1": "https://btc.com", "explorer2": "https://blockchair.com/bitcoin", "explorer3": "https://blockchain.coinmarketcap.com/zh/chain/bitcoin", "explorer4": "https://sochain.com", "doc": "https://github.com/4ops/docker-bitcoin-core", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release 2.1.1", "tag_name": "Release2.1.1", "html_url": "https://github.com/HcashOrg/hcd/releases/tag/Release2.1.1", "repo_url": "https://github.com/HcashOrg/hcd", "body": "modify testnet2 magic", "created_at": "2021-01-12T09:45:03Z", "project": "HyperCash (HC)", "currency": "hc", "alias": "hypercash", "repo": "HcashOrg/hcd", "type": "hc", "hosting": "github", "explorer": "https://hc-explorer.h.cash", "doc": "https://wiki.h.cash/getting-started/user-guides/hcd-setup", "api": "https://wiki.h.cash/wallet/hcwalletAPI", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v15.2.0", "tag_name": "v15.2.0", "html_url": "https://github.com/stellar/stellar-core/releases/tag/v15.2.0", "repo_url": "https://github.com/stellar/stellar-core", "body": "## Stability improvements\r\n\r\n- [Fix crash when running as captive core](https://github.com/stellar/stellar-core/pull/2849)\r\n- [Various improvements to dev container](https://github.com/stellar/stellar-core/pull/2846)\r\n- Performance: [Reduce possibility of small prefetch](https://github.com/stellar/stellar-core/pull/2815)\r\n- [Make close-time cutoff less aggressive](https://github.com/stellar/stellar-core/pull/2821)\r\n- [Return 404 on missing routes instead of 200](https://github.com/stellar/stellar-core/issues/2495)\r\n- [Fix small edge conditions on shutdown](https://github.com/stellar/stellar-core/pull/2854)\r\n- [Fix small edge condition when subprocess stops](https://github.com/stellar/stellar-core/pull/2862)\r\n- [Log missing content hash on txINTERNAL_ERROR](https://github.com/stellar/stellar-core/pull/2861)\r\n- [Log backtraces when possible](https://github.com/stellar/stellar-core/pull/2770)\r\n- [Fix formatting bug in overlay](https://github.com/stellar/stellar-core/pull/2829)\r\n- [Don't generate operation meta if an operation has already failed](https://github.com/stellar/stellar-core/pull/2865)\r\n- [Use randomized hashing](https://github.com/stellar/stellar-core/pull/2812) \r\n- [Reworked fuzzer code](https://github.com/stellar/stellar-core/pull/2823) and [more fuzzer improvements](https://github.com/stellar/stellar-core/pull/2841)\r\n\r\n## New features\r\n- [Print a report on archive health on startup & add an http endpoint for that](https://github.com/stellar/stellar-core/pull/2784)\r\n\r\n## Breaking changes\r\n- [Replaced logging infrastructure](https://github.com/stellar/stellar-core/pull/2837). The only breaking change is that for people using dates in log file names, the syntax is now `filename{datetime:date-format-string}.log` where `date-format-string` uses the same syntax than [strftime](https://en.cppreference.com/w/cpp/chrono/c/strftime).\r\n", "created_at": "2021-01-11T22:10:17Z", "project": "Stellar (XLM)", "currency": "xlm", "alias": "stellar", "repo": "stellar/stellar-core", "type": "stellar", "hosting": "github", "explorer": "https://steexp.com", "doc": "https://github.com/stellar/stellar-core/blob/master/INSTALL.md", "api": "https://developers.stellar.org/api/introduction", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Polkadot v0.8.27", "tag_name": "v0.8.27", "html_url": "https://github.com/paritytech/polkadot/releases/tag/v0.8.27", "repo_url": "https://github.com/paritytech/polkadot", "body": "Upgrade priority: **Low** (upgrade at your convenience) \r\nNative runtimes:\r\n\r\n- Polkadot: **27**\r\n- Kusama: **2027**\r\n- Westend: **47**\r\n\r\nThis release was tested against the following versions of `rustc`. Other versions may work.\r\n\r\n- rustc 1.48.0 (7eac88abb 2020-11-16)\r\n- rustc 1.50.0-nightly (f74583445 2020-12-18)\r\n\r\nWASM runtimes built with [srtool](https://github.com/paritytech/srtool) using `rustc 1.49.0-nightly (fd542592f 2020-10-26)`.\r\n\r\nProposal hashes:\r\n* `polkadot_runtime-v27.compact.wasm - 0xe1de4c2e8593f8a521c94ba192b261964b2b77d3695e14fc689d12951ec250b9`\r\n* `kusama_runtime-v2027.compact.wasm - 0x81b7cd44dd13d4b32f57d5c5cbae56d52b7557dde760a57fc27e3e7302b025d6`\r\n\r\n\r\n## Client\r\n\r\n* Allow capping the amount of work performed when deleting a child trie (paritytech/substrate#7671)\r\n* Remove sc_network::NetworkService::register_notifications_protocol and partially refactor Grandpa tests (paritytech/substrate#7646)\r\n* Expand remote keystore interface to allow for hybrid mode (paritytech/substrate#7628)\r\n* minor fix and improvements on localkeystore (paritytech/substrate#7626)\r\n* contracts: Add `salt` argument to contract instantiation (paritytech/substrate#7482)\r\n* RPC to allow setting the log filter (paritytech/substrate#7474)\r\n* contracts: Rework contracts_call RPC (paritytech/substrate#7468)\r\n* Use `storage::exists` host function instead of ::get. (paritytech/substrate#7445)\r\n\r\n## Runtime\r\n\r\n* \u2705 `trivial` Update Tips to go 100% to Author (#1836)\r\n* \u2705 `trivial` Fix locked ksm in council votes. (#1832)\r\n* \u2705 `trivial` `sudo_as` Returns a Result (paritytech/substrate#7620)\r\n* \u2705 `trivial` Fix some weirdness in `offchain_worker` (paritytech/substrate#7541)\r\n* \u2705 `trivial` Fix `on_runtime_upgrade` weight recording (paritytech/substrate#7480)\r\n* \u2705 `trivial` More Extensible Multiaddress Format (paritytech/substrate#7380)\r\n* \u2705 `trivial` Features needed for reserve-backed stablecoins (paritytech/substrate#7152)\r\n* \u2705 `audited` Streamline frame_system weight parametrization (paritytech/substrate#6629)\r\n", "created_at": "2021-01-11T10:18:59Z", "project": "Kusama (KSM)", "currency": "ksm", "alias": "kusama", "repo": "paritytech/polkadot", "type": "polkadot", "hosting": "github", "explorer": "https://kusama.subscan.io", "doc": "https://github.com/paritytech/polkadot/blob/master/doc/docker.md", "api": "https://polkadot.js.org/api/substrate/rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Polkadot v0.8.27", "tag_name": "v0.8.27", "html_url": "https://github.com/paritytech/polkadot/releases/tag/v0.8.27", "repo_url": "https://github.com/paritytech/polkadot", "body": "Upgrade priority: **Low** (upgrade at your convenience) \r\nNative runtimes:\r\n\r\n- Polkadot: **27**\r\n- Kusama: **2027**\r\n- Westend: **47**\r\n\r\nThis release was tested against the following versions of `rustc`. Other versions may work.\r\n\r\n- rustc 1.48.0 (7eac88abb 2020-11-16)\r\n- rustc 1.50.0-nightly (f74583445 2020-12-18)\r\n\r\nWASM runtimes built with [srtool](https://github.com/paritytech/srtool) using `rustc 1.49.0-nightly (fd542592f 2020-10-26)`.\r\n\r\nProposal hashes:\r\n* `polkadot_runtime-v27.compact.wasm - 0xe1de4c2e8593f8a521c94ba192b261964b2b77d3695e14fc689d12951ec250b9`\r\n* `kusama_runtime-v2027.compact.wasm - 0x81b7cd44dd13d4b32f57d5c5cbae56d52b7557dde760a57fc27e3e7302b025d6`\r\n\r\n\r\n## Client\r\n\r\n* Allow capping the amount of work performed when deleting a child trie (paritytech/substrate#7671)\r\n* Remove sc_network::NetworkService::register_notifications_protocol and partially refactor Grandpa tests (paritytech/substrate#7646)\r\n* Expand remote keystore interface to allow for hybrid mode (paritytech/substrate#7628)\r\n* minor fix and improvements on localkeystore (paritytech/substrate#7626)\r\n* contracts: Add `salt` argument to contract instantiation (paritytech/substrate#7482)\r\n* RPC to allow setting the log filter (paritytech/substrate#7474)\r\n* contracts: Rework contracts_call RPC (paritytech/substrate#7468)\r\n* Use `storage::exists` host function instead of ::get. (paritytech/substrate#7445)\r\n\r\n## Runtime\r\n\r\n* \u2705 `trivial` Update Tips to go 100% to Author (#1836)\r\n* \u2705 `trivial` Fix locked ksm in council votes. (#1832)\r\n* \u2705 `trivial` `sudo_as` Returns a Result (paritytech/substrate#7620)\r\n* \u2705 `trivial` Fix some weirdness in `offchain_worker` (paritytech/substrate#7541)\r\n* \u2705 `trivial` Fix `on_runtime_upgrade` weight recording (paritytech/substrate#7480)\r\n* \u2705 `trivial` More Extensible Multiaddress Format (paritytech/substrate#7380)\r\n* \u2705 `trivial` Features needed for reserve-backed stablecoins (paritytech/substrate#7152)\r\n* \u2705 `audited` Streamline frame_system weight parametrization (paritytech/substrate#6629)\r\n", "created_at": "2021-01-11T10:18:59Z", "project": "Dot (DOT)", "currency": "dot", "alias": "polkadot", "repo": "paritytech/polkadot", "type": "polkadot", "hosting": "github", "explorer": "https://polkadot.subscan.io", "explorer1": "https://polkascan.io/polkadot", "doc": "https://wiki.polkadot.network/docs/en/maintain-sync", "api": "https://wiki.polkadot.network/docs/en/build-node-interaction#polkadot-rpc", "add_time": "2020-07-29T08:00:00Z"}, {"name": "Release v0.8.0-hf.2", "tag_name": "v0.8.0-hf.2", "html_url": "https://github.com/binance-chain/node-binary/releases/tag/v0.8.0-hf.2", "repo_url": "https://github.com/binance-chain/node-binary", "body": "## 0.8.0-hf.2\r\n\r\n*Jan. 11th 2021*\r\n\r\nResolve the issue that memory usage is too high when Hotsync is enabled", "created_at": "2021-01-11T10:00:14Z", "project": "Binance Coin (BNB)", "currency": "bnb", "alias": "binance", "repo": "binance-chain/node-binary", "type": "cosmos", "hosting": "github", "explorer": "https://explorer.binance.org", "doc": "https://docs.binance.org/fullnode.html", "api": "https://docs.binance.org/rpc-swagger/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Chainweb Mainnet 2.4", "tag_name": "2.4", "html_url": "https://github.com/kadena-io/chainweb-node/releases/tag/2.4", "repo_url": "https://github.com/kadena-io/chainweb-node", "body": "This version replaces all previous versions. Any prior version will stop working on 2021-01-14T00:00:00Z. Node administrators must upgrade to this version before that date.\r\n\r\nThis version will stop working on 2021-02-25T00:00:00Z.\r\n\r\n\r\nSee the [changelog](https://github.com/kadena-io/chainweb-node/blob/master/CHANGELOG.md#24-2021-01-11) for more information.\r\n\r\n#### SHA256 Hashes:\r\n\r\n```\r\nd74087dbb62932e4b3a17127b2ee7f316ee6ee051a86faf2a1b72c8ffa4eff38  chainweb-2.4.ghc-8.8.4.ubuntu-16.04.15111ad.tar.gz\r\n4c10af7fabd1a7980a5419bae5d552a992c7e69dcc4d165561fdb045a809f223  chainweb-2.4.ghc-8.8.4.ubuntu-18.04.15111ad.tar.gz\r\n296e0e0e8b7e374c5864c5f2949efc9dabad32357673bc098b94dd01a6a18c8a  chainweb-2.4.ghc-8.8.4.ubuntu-20.04.15111ad.tar.gz\r\nc1de28b6d27ea350bb91bc11acd140deef71585d32f1773586f0cbef1ad50ad3  chainweb-2.4.ghc-8.8.4.macOS-latest.15111ad.tar.gz\r\n```\r\n\r\n#### Nix store paths:\r\n\r\nLinux: `/nix/store/7rq9bfpbwwc2qnw0n5p82wabrvjfxk47-chainweb-2.4`\r\nMac: `/nix/store/sbg3lq15gsl3f6is8cgkn5mq1l40qg9m-chainweb-2.4`\r\n\r\n#### Docker: \r\n\r\n[https://hub.docker.com/r/kadena/chainweb-node](https://hub.docker.com/r/kadena/chainweb-node)\r\n", "created_at": "2021-01-10T22:15:14Z", "project": "Kadena (KDA)", "currency": "kda", "alias": "kadena", "repo": "kadena-io/chainweb-node", "type": "kadena", "hosting": "github", "explorer": "https://explorer.chainweb.com/mainnet", "doc": "https://medium.com/kadenacoin/how-to-operate-a-kadena-node-kda-7844622ed5b4", "api": "https://kadena-io.github.io/kadena-docs/rest-api-examples", "add_time": "2019-12-01T00:00:00Z"}, {"name": "0.22.11", "tag_name": "v0.22.11", "html_url": "https://github.com/Bitcoin-ABC/bitcoin-abc/releases/tag/v0.22.11", "repo_url": "https://github.com/bitcoin-ABC/bitcoin-abc", "body": "# Bitcoin ABC 0.22.11 Release Notes\r\n\r\nBitcoin ABC version 0.22.11 is now available from:\r\n\r\n  <https://download.bitcoinabc.org/0.22.11/>\r\n\r\nThis release includes the following features and fixes:\r\n\r\n- The `getpeerinfo` RPC no longer returns the `banscore` field unless the configuration\r\n  option `-deprecatedrpc=banscore` is used. The `banscore` field will be fully\r\n  removed in the next major release.\r\n\r\n- The `-banscore` configuration option, which modified the default threshold for\r\n  disconnecting and discouraging misbehaving peers, has been removed as part of\r\n  changes in this release to the handling of misbehaving peers.\r\n\r\nGUI changes\r\n-----------\r\n\r\n- The GUI Peers window no longer displays a \"Ban Score\" field.\r\n", "created_at": "2021-01-08T16:20:24Z", "project": "Bitcoin Cash ABC (BCHA)", "currency": "bcha", "alias": "bcha", "repo": "bitcoin-ABC/bitcoin-abc", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bha", "explorer1": "https://blockchair.com/bitcoin-abc", "doc": "https://www.bitcoinabc.org/releases/", "api": "https://www.bitcoinabc.org/doc/0.22.6/rpc/blockchain/getblock", "add_time": "2020-11-16T00:00:00Z"}, {"name": "0.22.11", "tag_name": "v0.22.11", "html_url": "https://github.com/Bitcoin-ABC/bitcoin-abc/releases/tag/v0.22.11", "repo_url": "https://github.com/bitcoin-ABC/bitcoin-abc", "body": "# Bitcoin ABC 0.22.11 Release Notes\r\n\r\nBitcoin ABC version 0.22.11 is now available from:\r\n\r\n  <https://download.bitcoinabc.org/0.22.11/>\r\n\r\nThis release includes the following features and fixes:\r\n\r\n- The `getpeerinfo` RPC no longer returns the `banscore` field unless the configuration\r\n  option `-deprecatedrpc=banscore` is used. The `banscore` field will be fully\r\n  removed in the next major release.\r\n\r\n- The `-banscore` configuration option, which modified the default threshold for\r\n  disconnecting and discouraging misbehaving peers, has been removed as part of\r\n  changes in this release to the handling of misbehaving peers.\r\n\r\nGUI changes\r\n-----------\r\n\r\n- The GUI Peers window no longer displays a \"Ban Score\" field.\r\n", "created_at": "2021-01-08T16:20:24Z", "project": "Bitcoin Cash (BCH)", "currency": "bch", "alias": "bchn", "repo": "bitcoin-ABC/bitcoin-abc", "repo1": "https://gitlab.com/bitcoin-cash-node/bitcoin-cash-node", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bch", "explorer1": "https://blockchair.com/bitcoin-cash", "doc": "https://docs.bitcoincashnode.org/doc", "api": "https://docs.bitcoincashnode.org/doc/json-rpc/", "api1": "https://www.bitcoinabc.org/doc/0.22.6/rpc/blockchain/getblock", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.4.0", "tag_name": "v1.4.0", "html_url": "https://github.com/vechain/thor/releases/tag/v1.4.0", "repo_url": "https://github.com/vechain/thor", "body": "This is a maintenance release that contains performance improvement and bug fixes.\r\n\r\n* Add API `subscriptions/beat2` to support variable-length bloom filter(#430)\r\n* Update bn256, fix building failure on architecture `ARM64` (#426)\r\n* Update continuous integration system configurations (#427, #431)", "created_at": "2021-01-08T07:05:00Z", "project": "VeChain (VET)", "currency": "vet", "alias": "vechain", "repo": "vechain/thor", "type": "vechain", "hosting": "github", "explorer": "https://insight.vecha.in", "doc": "https://github.com/vechain/thor#docker", "api": "https://docs.vechain.org/thor/get-started/api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v0.11.0", "html_url": "https://github.com/crustio/crust/commit/f629f2ddf66a3933a990618a000a93a6fcf4cbee", "repo_url": "https://github.com/crustio/crust", "body": "Happy New Year \ud83c\udf89 (#391)", "created_at": "2021-01-08T02:28:04Z", "project": "CRUST (CRU)", "currency": "cru", "alias": "cru", "repo": "crustio/crust", "type": "ipfs", "hosting": "github", "explorer": "http://explorer.crust.network", "doc": "https://mp.weixin.qq.com/s/nIfwHfkiauQQ7t2mJv0c3Q", "api": "https://github.com/crustio/crust-api/blob/master/docs/API.md", "add_time": "2020-09-17T09:00:00Z"}, {"name": "Oxygen Orion, Point Release 1.9", "tag_name": "v0.17.1.9", "html_url": "https://github.com/monero-project/monero/releases/tag/v0.17.1.9", "repo_url": "https://github.com/monero-project/monero", "body": "# Overview\r\n\r\nThis is the v0.17.1.9 minor point release of the Monero software.\r\nThis is a recommended release that contains mitigations against the ongoing memory exhaustion attack.\r\n\r\nSome highlights of this minor release are:\r\n\r\n- Add different limits for epee binary format for P2P and RPC\r\n- Add more sanity checks on data size (portable_storage)\r\n- Fix deadlock banning while updating peer lists\r\n- Add aggressive restrictions to pre-handshake p2p buffer limit\r\n- Add a max levin packet size by command type\r\n- Restrict duplicate keys and unnamend sections in epee binary format\r\n- More sanity checks in new chain block hashes\r\n- Minor bug fixes\r\n\r\n# Contributors for this Release\r\n\r\nThis release was the direct result of 7 people who worked, largely unpaid and altruistically, to put out 30 commits containing 362 new lines of code. We'd like to thank them very much for their time and effort. In no particular order they are:\r\n\r\n- luigi1111\r\n- Snipa\r\n- moneromooo\r\n- vtnerd\r\n- selsta\r\n- xiphon\r\n- binaryFate\r\n\r\n# Official Download Links\r\n\r\n[Windows, 64-bit](https://downloads.getmonero.org/cli/monero-win-x64-v0.17.1.9.zip)\r\n[Windows, 32-bit](https://downloads.getmonero.org/cli/monero-win-x86-v0.17.1.9.zip)\r\n[macOS, 64-bit](https://downloads.getmonero.org/cli/monero-mac-x64-v0.17.1.9.tar.bz2)\r\n[Linux, 64-bit](https://downloads.getmonero.org/cli/monero-linux-x64-v0.17.1.9.tar.bz2)\r\n[Linux, 32-bit](https://downloads.getmonero.org/cli/monero-linux-x86-v0.17.1.9.tar.bz2)\r\n[Linux, armv7](https://downloads.getmonero.org/cli/monero-linux-armv7-v0.17.1.9.tar.bz2)\r\n[Linux, armv8](https://downloads.getmonero.org/cli/monero-linux-armv8-v0.17.1.9.tar.bz2)\r\n[Android, armv7](https://downloads.getmonero.org/cli/monero-android-armv7-v0.17.1.9.tar.bz2)\r\n[Android, armv8](https://downloads.getmonero.org/cli/monero-android-armv8-v0.17.1.9.tar.bz2)\r\n[FreeBSD, 64-bit](https://downloads.getmonero.org/cli/monero-freebsd-x64-v0.17.1.9.tar.bz2)\r\n\r\n# Download Hashes\r\n\r\nIf you would like to verify that you have downloaded the correct file, please use the following SHA256 hashes:\r\n\r\n```\r\nmonero-win-x64-v0.17.1.9.zip, a3e6e2f55deb487f6b4a33cf430d82d62e986d37d7d589dcb33a4ff0a13a062b\r\nmonero-win-x86-v0.17.1.9.zip, bb3c633a3d8ac160bc9c75ef514a9cbc77f1f45bdbd220d1963d78d66435c23a\r\nmonero-mac-x64-v0.17.1.9.tar.bz2, d4850ae45eee67868140183cd8c00f9e1f9e1cc5e415b00bc78c14c7bab85834\r\nmonero-linux-x64-v0.17.1.9.tar.bz2, 0fb6f53b7b9b3b205151c652b6c9ca7e735f80bfe78427d1061f042723ee6381\r\nmonero-linux-x86-v0.17.1.9.tar.bz2, 1f51206c1996a577f976c0526b93cc495fe577db21f68b55636dce926f201206\r\nmonero-linux-armv8-v0.17.1.9.tar.bz2, ef16c3aefc8a17f0a547ffec9e2f087923c6bf293b9538294d14cbd318f1ab98\r\nmonero-linux-armv7-v0.17.1.9.tar.bz2, c8b226af900b018fade24742e5936b0ef6cec3fcdbc8a57a4b3f3d6d2507a2ec\r\nmonero-android-armv8-v0.17.1.9.tar.bz2, 2c45e0fb364ff2e60aa9cdf0d3faef145b22a8632b3336cc248eeba24352d39b\r\nmonero-android-armv7-v0.17.1.9.tar.bz2, c7192caf85f82ecdd1e7299c9ae6314fe2fb02ed9b7035a426a8644b676cc75f\r\nmonero-freebsd-x64-v0.17.1.9.tar.bz2, 3052f691a1a7631ba50c3f4d6f1b1355bdcc9a8c0c617cf56ced400afa1ea402\r\n```\r\n\r\nA GPG-signed list of the hashes is at [https://www.getmonero.org/downloads/hashes.txt](https://www.getmonero.org/downloads/hashes.txt) and should be treated as canonical, with the signature checked against the appropriate GPG key in the source code (in /utils/gpg_keys). To ensure that the files you download are those originally posted by the maintainers, you should both check that the hashes of your files match those on the signed list, and that the signature on the list is valid.", "created_at": "2021-01-08T01:55:37Z", "project": "Monero (XMR)", "currency": "xmr", "alias": "monero", "repo": "monero-project/monero", "type": "monero", "hosting": "github", "explorer": "http://moneroblocks.info", "doc": "https://web.getmonero.org/zh-cn/resources/user-guides/vps_run_node.html", "api": "https://web.getmonero.org/resources/developer-guides/daemon-rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v0.19.1.9", "tag_name": "v0.19.1.9", "html_url": "https://github.com/ghost-coin/ghost-core/releases/tag/v0.19.1.9", "repo_url": "https://github.com/ghost-coin/ghost-core", "body": "```\r\nff2e467775da17260f92e1c8744e4163b4630a850da5818ba93d9cd7403e57ac  ghost-0.19.1.9-aarch64-linux-gnu.tar.gz\r\n8bb0c8ac47e02c7a19e39808a55017a0df35f209be77e075789a1e813e1deb8c  ghost-0.19.1.9-arm-linux-gnueabihf.tar.gz\r\n931542125637a7a91c243b5ec1e9c915cfc382a0db878c63ea97e775c30c2455  ghost-0.19.1.9-i686-pc-linux-gnu_nousb.tar.gz\r\n9da132180b1f8e43895f4a52999dc160e7ac4a78a0e8000d0272dc6365121f1d  ghost-0.19.1.9-i686-pc-linux-gnu.tar.gz\r\n7a64cc0d5dc944d3783edebdc87259146a82b9036f23ba210ea02dde4a1e5bf8  ghost-0.19.1.9-osx64.tar.gz\r\nb071c0e7827c3a59723639b48219118eba64cb48d6ad73adaf612e233f97e944  ghost-0.19.1.9-osx-unsigned.dmg\r\nada62f25236657e0e055bbe370bf04ee61a3b668d122350d89c633ab064e8764  ghost-0.19.1.9-riscv64-linux-gnu.tar.gz\r\n3a43df9b49bca93fc36f1d983d554d37ddb50c0c00defaa521a57be383d38ad2  ghost-0.19.1.9.tar.gz\r\n123525172c73d02baa73a11bea74eab4648a9bd1b9efc2a661feb279500aae2d  ghost-0.19.1.9-win64-setup-unsigned.exe\r\ne5ea44af06b2f3bf34fb3b8fb4465538e3b1e130cd1d0709c2523de2ad2726da  ghost-0.19.1.9-win64.zip\r\n0a065e89e21a1d60660720835417418ae7c1c7f257a13a706a1c608cfdd7d5dc  ghost-0.19.1.9-x86_64-linux-gnu_nousb.tar.gz\r\n7a74489b621250528a9d2d50198f29ad9f5a9cf7687bde5d76e3eb92b63cf0f6  ghost-0.19.1.9-x86_64-linux-gnu.tar.gz\r\n2403a7c0a30aad8100128bd23dad09bccb0b934a815159a0076093020bdb8dfe  SHA256SUMS.asc\r\n```", "created_at": "2021-01-08T01:10:56Z", "project": "Ghost (GHOST)", "currency": "ghost", "alias": "ghost", "repo": "ghost-coin/ghost-core", "type": "utxo", "hosting": "github", "explorer": "https://ghostscan.io", "explorer1": "https://www.ghostin.io", "doc": "https://github.com/ghost-coin/ghost-core/tree/master/doc", "api": "https://github.com/ghost-coin/ghost-core/blob/master/doc/REST-interface.md", "add_time": "2020-08-18T10:00:00Z"}, {"name": "ckb 0.39.1 (7f5d486 2021-01-06)", "tag_name": "v0.39.1", "html_url": "https://github.com/nervosnetwork/ckb/releases/tag/v0.39.1", "repo_url": "https://github.com/nervosnetwork/ckb", "body": "This version is compatible with v0.25.0 and above. However, it is recommended to upgrade the node, since we will only release security patches based on the latest release.\r\n\r\nSee [how to connect to various chains](https://github.com/nervosnetwork/ckb/wiki/Chains) in Wiki.\r\n\r\n* Upgrade tentacle to 0.3.4 (@driftluo).\r\n\r\n### Downloads\r\n\r\n| OS        | Arch | Runtime Dependencies      | Package               | Sign               |\r\n| --------- | ---- | ------------------------- | --------------------- | ------------------ |\r\n| macOS     | x64  | macOS 10.12 or above | [zip][macos-zip]      | [PGP][macos-pgp]   |\r\n| Linux     | x64  | glibc, libstdc++          | [tarball][linux-zip]  | [PGP][linux-pgp]   |\r\n| CentOS    | x64  | glibc, libstdc++, openssl | [tarball][centos-zip] | [PGP][centos-pgp]  |\r\n| Windows\\* | x64  | VC++ Redistributable      | [zip][windows-zip]    | [PGP][windows-pgp] |\r\n| Docker    |      |                           | [dockerhub][]         |                    |\r\n\r\n> \\* Windows support is experimental.\r\n\r\nThe `.asc` files are signatures. It is wise and more secure to check out for the files [integrity](https://github.com/nervosnetwork/ckb/blob/develop/docs/integrity-check.md).\r\n\r\n[macos-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-apple-darwin.zip\r\n[macos-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-apple-darwin.zip.asc\r\n[linux-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-unknown-linux-gnu.tar.gz\r\n[linux-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-unknown-linux-gnu.tar.gz.asc\r\n[centos-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-unknown-centos-gnu.tar.gz\r\n[centos-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-unknown-centos-gnu.tar.gz.asc\r\n[windows-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-pc-windows-msvc.zip\r\n[windows-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.39.1/ckb_v0.39.1_x86_64-pc-windows-msvc.zip.asc\r\n[dockerhub]: https://hub.docker.com/r/nervos/ckb/tags", "created_at": "2021-01-06T23:26:24Z", "project": "Nervos Network (CKB)", "currency": "ckb", "alias": "nervos", "repo": "nervosnetwork/ckb", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.nervos.org", "doc": "https://docs.nervos.org/docs/basics/guides/mainnet", "api": "https://github.com/nervosnetwork/ckb/blob/master/rpc/README.md", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.2.2 (fix sync issues)", "tag_name": "v1.2.2", "html_url": "https://github.com/filestar-project/lotus/releases/tag/v1.2.2", "repo_url": "https://github.com/filestar-project/lotus", "body": "\u5305\u542b\u5982\u4e0b\u6539\u53d8\uff1a\r\n1. \u4fee\u590d\u90e8\u5206\u8282\u70b9\u7684\u540c\u6b65\u95ee\u9898\r\n2. \u4fee\u590d\u90e8\u5206\u60c5\u51b5\u4e0b8GiB\u77ff\u5de5\u65e0\u6cd5\u521b\u5efa\u7684\u95ee\u9898\r\n\r\n\u5982\u679cFileStar\u8282\u70b9\u5728\u5206\u53c9\u540e\u51fa\u73b0\u540c\u6b65\u95ee\u9898\uff0c\u8bf7\u66f4\u65b0\u7248\u672c\u81f3v1.2.2\u3002\u7136\u540e\r\n1. `lotus chain sethead --epoch 184559`\u5e76\u91cd\u542flotus\u3002\r\n2. \u6216\u8005\u4e0b\u8f7d[snapshot](https://filestar-proofs.s3.cn-east-1.jdcloud-oss.com/snapshot/filestar.car)\uff0c\u7136\u540e\u5220\u9664\u6570\u636e\u76ee\u5f55\u4e0b\u7684datastore\u6587\u4ef6\u5939\uff0c\u518d\u901a\u8fc7`lotus daemon --import-snapshot /path/to/snapshot.car`\u542f\u52a8\u3002", "created_at": "2020-12-30T08:56:55Z", "project": "FileStar (STAR)", "currency": "star", "alias": "star", "repo": "filestar-project/lotus", "type": "ipfs", "hosting": "github", "explorer": "https://filestar.info/zh", "doc": "https://github.com/filestar-project/docs/wiki/%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9", "api": "https://lotu.sh/en+api-methods", "add_time": "2020-11-10T11:00:00Z"}, {"name": "EOSIO v2.0.9 Release Notes", "tag_name": "v2.0.9", "html_url": "https://github.com/EOSIO/eos/releases/tag/v2.0.9", "repo_url": "https://github.com/EOSIO/eos", "body": "This release contains security and miscellaneous fixes.\r\n\r\n## Security bug fixes\r\n\r\n### Consolidated Security Fixes for 2.0.9 ([#9841](https://github.com/EOSIO/eos/pull/9841))\r\n- Fixes to packed_transaction cache\r\n- Transaction account fail limit refactor\r\n\r\nNote: These security fixes are relevant to all nodes on EOSIO blockchain networks.\r\n\r\n## Other Changes\r\n- ([#9803](https://github.com/EOSIO/eos/pull/9803)) Fix stdout console logging: Merge back #9582 to 2.0.x\r\n\r\n_Disclaimer: All repositories and other materials are provided subject to this [IMPORTANT](https://github.com/EOSIO/eos/blob/58b270379e846ce6633d7a9e6a4f80dd880521a8/IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice._", "created_at": "2020-12-29T22:34:09Z", "project": "EOSIO (EOS)", "currency": "eos", "alias": "eos", "repo": "EOSIO/eos", "type": "eos", "hosting": "github", "explorer": "https://bloks.io", "doc": "https://developers.eos.io/manuals/eos/latest/nodeos/index", "api": "https://developers.eos.io/manuals/eos/latest/nodeos/rpc_apis/index", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.1.1", "tag_name": "v1.1.1", "html_url": "https://github.com/Bytom/bytom/releases/tag/v1.1.1", "repo_url": "https://github.com/Bytom/bytom", "body": "## Bytom version 1.1.1 is now available.\r\n\r\n## Checksums\r\nFile | Checksum(md5)\r\n------------ | -------------\r\nbytom-1.1.1-darwin_386.tgz | 6bfb90889f501235c2fbbe0cff65b6a8\r\nbytom-1.1.1-darwin_amd64.tgz | 1bc84379bc443db23c1f7e40375e7e0a\r\nbytom-1.1.1-linux_386.tgz | 91b249d24191cfc44a01bde1ad17ae19\r\nbytom-1.1.1-linux_amd64.tgz | ed38044864c4eee2a370e90c80faf38e\r\nbytom-1.1.1-windows_386.zip | 24fcc93c5e1f3e4fc1a62e347461d577\r\nbytom-1.1.1-windows_amd64.zip | fb8ebab5873a1c89de4915c46d2dac17", "created_at": "2020-12-23T01:36:24Z", "project": "Bytom (BTM)", "currency": "btm", "alias": "bytom", "repo": "Bytom/bytom", "type": "Defi", "hosting": "github", "explorer": "https://blockmeta.com", "doc": "https://github.com/Bytom/bytom/wiki/Running-in-Docker", "api": "https://github.com/Bytom/bytom/wiki/API-Reference", "add_time": "2019-12-01T00:00:00Z"}, {"name": "4.2.0", "tag_name": "v4.2.0", "html_url": "https://github.com/zcash/zcash/releases/tag/v4.2.0", "repo_url": "https://github.com/zcash/zcash", "body": "Notable changes\r\n===============\r\n\r\nSwitch to ed25519-zebra for consensus signature checks\r\n------------------------------------------------------\r\nThis removes the zcashd dependency upon libsodium for ed25519 signature checks and instead uses the Rust implementation in ed25519-zebra, which has been active for signature verification since the Canopy upgrade. For more information on the conditions that led to this change see https://hdevalence.ca/blog/2020-10-04-its-25519am.\r\n\r\nUpdate default fees according to ZIP-313\r\n----------------------------------------\r\nReduce default fees to 0.00001 ZEC as specified in ZIP-313 and ensure that transactions paying at least the new minimum fee meet the transaction relay threshold irrespective of transaction size.\r\n\r\nImprove getblocktemplate rpc performance when using shielded coinbase\r\n---------------------------------------------------------------------\r\nThis change precomputes future block templates to permit miners to begin working atop newly arrived blocks as quickly as possible, rather than waiting for a new template to be generated after a block has arrived. It also reduces the initial wait time for incorporating new mempool transactions into a block from 1 minute to 10 seconds; the previous value was inherited from the upstream bitcoin codebase but is inappropriate for our block timing.\r\n\r\nMigrate from rpc-tests.sh to rpc-tests.py\r\n-----------------------------------------\r\nThis unifies and simplifies the RPC testing framework, as has been done in the upstream Bitcoin codebase.", "created_at": "2020-12-21T21:06:51Z", "project": "Zcash (ZEC)", "currency": "zec", "alias": "zcash", "repo": "zcash/zcash", "type": "utxo", "hosting": "github", "explorer": "https://explorer.zcha.in", "explorer1": "https://zcash.tokenview.com", "doc": "https://zcash.readthedocs.io/en/latest/rtd_pages/zcashd.html", "api": "https://zcash-rpc.github.io", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Witnet Mainnet 1.1", "tag_name": "1.1.0", "html_url": "https://github.com/witnet/witnet-rust/releases/tag/1.1.0", "repo_url": "https://github.com/witnet/witnet-rust", "body": "https://medium.com/p/ecaae6b6945e", "created_at": "2020-12-21T15:21:24Z", "project": "Witnet (WIT)", "currency": "wit", "alias": "wit", "repo": "witnet/witnet-rust", "type": "witnet", "hosting": "github", "explorer": "https://witnet.network", "doc": "https://docs.witnet.io/try/run-a-node/", "api": "https://docs.witnet.io/developer/wallet-api/", "add_time": "2021-01-15T06:00:00Z"}, {"name": "", "tag_name": "v1.2", "html_url": "https://api.github.com/repos/aowclub/AOWchain/commits/da20f9490183d5e5c36f6d9688fc69bcd52919ad", "repo_url": "https://github.com/aowclub/AOWchain", "body": "update 1.2", "created_at": "2020-12-21T07:57:42Z", "project": "ORION (ORI)", "currency": "ori", "alias": "ori", "repo": "aowclub/AOWchain", "type": "polkadot", "hosting": "github", "explorer": "https://userscan.orionchain.org", "doc": "https://orionchain.oss-cn-beijing.aliyuncs.com/orion_build_guide.pdf", "api": "https://polkadot.js.org/docs/", "add_time": "2020-12-28T02:00:00Z"}, {"name": "v1.0.0", "tag_name": "v1.0.0", "html_url": "https://github.com/HuobiGroup/huobi-eco-chain/releases/tag/v1.0.0", "repo_url": "https://github.com/HuobiGroup/huobi-eco-chain", "body": "First release for heco", "created_at": "2020-12-17T11:08:05Z", "project": "Heco (HT)", "currency": "heco", "alias": "ht", "repo": "HuobiGroup/huobi-eco-chain", "type": "fork eth", "hosting": "github", "explorer": "https://scan.hecochain.com/home/index", "doc": "https://docs.hecochain.com/#/dev/install", "api": "https://eth.wiki/json-rpc/api", "add_time": "2021-01-21T02:00:00Z"}, {"name": "v1.0.201217", "tag_name": "v1.0.201217", "html_url": "https://github.com/gxchain/gxb-core/releases/tag/v1.0.201217", "repo_url": "https://github.com/gxchain/gxb-core", "body": "### GXB-Core Release v1.0.201217\r\n\r\n## Notice:\r\n\r\n**This is a hotfix release of GXB-Core Release v1.0.200327, Every node should upgrade to solve block generation issue caused by integer calculation overflow.**\r\n\r\nHot fix Commit:\r\n- https://github.com/gxchain/gxb-core/commit/dc3d967ddd2264503e5fbd62a38615afa192fcc0\r\n- https://github.com/gxchain/gxb-core/commit/84c33320c1c690270a972f3d290543b563b106df\r\n\r\nHow to Upgrade: Download and replace programs/witness_node/witness_node\r\n\r\nDownload Link: https://github.com/gxchain/gxb-core/releases/tag/v1.0.201217\r\n\r\n## Upgrade steps\r\n\r\n1. Download the latest release package, and unzip\uff1a\r\n   ```wget 'https://github.com/gxchain/gxb-core/releases/download/v1.0.201217/gxb_1.0.201217-ubuntu-14.04.tar.gz' -O gxb_1.0.201217-ubuntu-14.04.tar.gz && tar zxvf gxb_1.0.201217-ubuntu-14.04.tar.gz```\r\n\r\n2. Stop witness_node:\r\n\r\n```\r\nkill -s SIGINT $(pgrep witness_node)\r\n```\r\n\r\n3. Restart\r\n\r\n```\r\n# Your original started up script: history|grep witness_node\r\nnohup ./programs/witness_node/witness_node [other-options] # (The parameters are omitted here,each node is started differently)\r\n\r\n```\r\n\r\n> Note: For a BP, if you cannot produce a block after upgrade, your TrustedNode may have been banned by the system, to solve this problem, open https://wallet.gxb.io, import your account and do unbanned on the profile tab\r\n\r\n---\r\n\r\n**GXChain\u7684\u7f51\u7edc\u7531\u4e8e\u51fa\u73b0\u51fa\u5757\u5956\u52b1\u8ba1\u7b97\u6ea2\u51fa\uff0c\u5bfc\u81f4\u51fa\u5757\u5931\u8d25\uff0c\u76ee\u524d\u5df2\u7ecf\u5b8c\u6210\u4fee\u590d\uff0c\u6240\u6709\u7684\u8282\u70b9\u9700\u8981\u5347\u7ea7\u7a0b\u5e8f\u4ee5\u5b9e\u73b0\u6b63\u5e38\u51fa\u5757**\r\n\r\n\u4fee\u590d\u4ee3\u7801\uff1a\r\n- https://github.com/gxchain/gxb-core/commit/dc3d967ddd2264503e5fbd62a38615afa192fcc0\r\n- https://github.com/gxchain/gxb-core/commit/84c33320c1c690270a972f3d290543b563b106df\r\n\r\n\u5347\u7ea7\u65b9\u5f0f\uff1a\u6240\u6709\u7684\u8282\u70b9\u9700\u8981\u66ff\u6362\u8282\u70b9\u7a0b\u5e8f\u540e\u91cd\u542f\u8282\u70b9\uff0c\u6765\u5b8c\u6210\u5347\u7ea7\r\n\r\n\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/gxchain/gxb-core/releases/tag/v1.0.201217\r\n\r\n## \u5347\u7ea7\u6b65\u9aa4\r\n\r\n1. \u4e0b\u8f7d\u89e3\u538b\u6700\u65b0\u8282\u70b9\u7a0b\u5e8f\uff1a\r\n   ```wget 'https://github.com/gxchain/gxb-core/releases/download/v1.0.201217/gxb_1.0.201217-ubuntu-14.04.tar.gz' -O gxb_1.0.201217-ubuntu-14.04.tar.gz && tar zxvf gxb_1.0.201217-ubuntu-14.04.tar.gz```\r\n\r\n2. \u5b89\u5168\u505c\u6b62witness_node:\r\n\r\n```\r\nkill -s SIGINT $(pgrep witness_node)\r\n```\r\n\r\n3. \u91cd\u542f\r\n\r\n```\r\n# \u4f7f\u7528\u539f\u6765\u7684\u542f\u52a8\u65b9\u5f0f\u8fdb\u884c\u542f\u52a8: history|grep witness_node\r\nnohup ./programs/witness_node/witness_node [other-options]\r\n\r\n```\r\n\r\n> \u63d0\u793a\uff1a\u5982\u679c\u4f60\u7684\u662f\u4e00\u4e2a\u51fa\u5757\u8282\u70b9\uff08BP\uff09\uff0c\u7531\u4e8e\u5347\u7ea7\u4e0d\u53ca\u65f6\u53ef\u80fd\u5df2\u7ecf\u88ab\u7cfb\u7edf\u81ea\u52a8\u5173\u8fdb\u5c0f\u9ed1\u5c4b\uff0c\u65e0\u6cd5\u53c2\u4e0e\u51fa\u5757\uff0c\u53ef\u4ee5\u5728 https://wallet.gxb.io \u5bfc\u5165\u8d26\u6237\u6d3b\u8dc3\u6743\u9650\u79c1\u94a5\u540e\uff0c\u5728\u8d44\u6599\u9875\u9762\u8fdb\u884c\u64cd\u4f5c\uff0c\u79bb\u5f00\u5c0f\u9ed1\u5c4b\r\n\r\n## SHA256 checksum:\r\n- dab13eaa4920431a71e5a06d7949effbd3476465d03983b540c05f75a2d27fd0  gxb_1.0.201217-ubuntu-14.04.tar.gz\r\n- 4f73945a7e34d6c3ed3fd9ba8935b0036e895ddb59eb5f039b6c7f4196a23dfd  gxb_1.0.201217-with-plugin-ubuntu-14.04.tar.gz\r\n", "created_at": "2020-12-16T23:35:17Z", "project": "GXChain (GXC)", "currency": "gxc", "alias": "gxchain", "repo": "gxchain/gxb-core", "type": "eos", "hosting": "github", "explorer": "https://explorer.gxchain.org", "doc": "https://docs.gxchain.org/zh/advanced/witness_node.html", "api": "https://docs.gxchain.org/zh/guide/apis.html", "add_time": "2020-04-04T22:00:00Z"}, {"name": "Release 2.3.0.0", "tag_name": "N.2.3.0.0", "html_url": "https://github.com/ArweaveTeam/arweave/releases/tag/N.2.3.0.0", "repo_url": "https://github.com/ArweaveTeam/arweave", "body": "This release introduces a hard fork that activates at height 591140, approximately 2020-12-21 11:00 UTC. You will need to make sure you have upgraded your miner before this time in order to connect to the 2.3 network.\r\nMost of the work put into this release is preparation for SPoRA - the new consensus mechanism.\r\n\r\n### New features and improvements\r\n\r\n* The difficulty of mining on alternative recall chunks grows linearly as a function of the alternative sequence number. It follows the pattern applied in SPoRA. [Link.](https://github.com/ArweaveTeam/arweave/commit/ea4955d4f2d68ce70bfba77ca9994e06fef68b28)\r\n* A `sync_jobs` configuration parameter is added to control the intensity of data syncing. The node now runs two jobs by default. Consider increasing it on the new nodes and decreasing once you replicate the desired amount of data.\r\n* Block application is [reworked](https://github.com/ArweaveTeam/arweave/commit/93323da8d05284fb2e8bf390f926e8bc01595e67). The new version maintains a cache of uncle blocks to efficiently validate the work component of a block for the fast and DoS-resistant block propagation in the network. The update is especially relevant for validating blocks that are not on top of the longest chain currently known to the node.\r\n* The data of v1 transactions is moved to the new [index](https://github.com/ArweaveTeam/arweave/commit/60de0fc5d7fb8c1f5880d9dc17266d85db897aea). The planned consensus mechanism incentivizes fast random access to past data. Therefore, it is crucial to have quick access to the historical v1 data.\r\n* The benchmark [is made more representative by running a node](https://github.com/ArweaveTeam/arweave/commit/65e6ac606330627f4d2d9489350659b5a8c8a056). Run it via `./bin/benchmark`.\r\n* The node [can run under limited disk space now](https://github.com/ArweaveTeam/arweave/commit/d7d6e9fa5e6a8a9fffc892ff3429f3fc2749a071). Once there is little available space left, the node stops syncing data and begins cleaning up older headers to free up space for the new block and transaction headers.\r\n* The transaction blacklist [is reworked](https://github.com/ArweaveTeam/arweave/commit/f9ee427052072c8a894a03dfc2af5ecad959fdba). The new blacklist is more scalable, supports v2 data, allows to fetch blacklisted transactions from external sources, and automatically removes already stored blacklisted data. Additionally, the change introduces a whitelist.\r\n* The v2 chunk data is migrated from the individual files to RocksDB, see the [commit](https://github.com/ArweaveTeam/arweave/commit/8c1fb7331193462b5f4df26a909f687b8800ddfe) for more details.\r\n\r\n### Bug fixes\r\n\r\n* A bug is fixed where the node would never attempt to sync a historical transaction if it crashed right after syncing the corresponding block header.\r\n* A bug where the node would not send new blocks to the configured webhooks is [fixed](https://github.com/ArweaveTeam/arweave/commit/82ba60fa7b11f933de60a576c94371cc6255ff29).\r\n* The broken requests_per_minute flag [works again](https://github.com/ArweaveTeam/arweave/commit/82ba60fa7b11f933de60a576c94371cc6255ff29).\r\n\r\n### Upgrade instructions\r\n\r\nN.2.3.0.0 comes with the prebuilt binaries for the Linux and Darwin x86_64 platforms.\r\n\r\nDownload the corresponding archive and unpack it:\r\n\r\n```\r\ntar -xzf arweave-2.3.0.0.linux-x86_64.tar.gz\r\n```\r\n\r\nIt makes sense to unpack it inside a dedicated directory. You can always move this directory around, but the miner may not work if you move only some of the files. The weave data would, by default, be stored in this directory, too, but it can be overridden using the data_dir command-line argument.\r\nThe archive contents look like this:\r\n\r\n```\r\nbin/  data/  erts-10.3/  lib/  releases/\r\n```\r\n\r\nTo run the miner, execute ./bin/start <arguments>. See the mining guide for more details.\r\nIf your OS/platform architecture is not in the list, check README for how to build the miner from sources.\r\n\r\nIf you want to run the miner from the existing Git folder, execute the following command to upgrade:\r\n\r\n```\r\ngit fetch --all --tags && git checkout -f N.2.3.0.0\r\n```\r\n\r\nYou can now run the miner using the arweave-server script.\r\n\r\n**Support**\r\n\r\nFor more details on how to run a mining node, please see our mining guide - https://docs.arweave.org/info/mining/mining-guide. If you have any issues upgrading or would like to know more about the release, feel free to reach out to us in the #mining channel on Discord Arweave Dev Talk server (https://discord.gg/DjAFMJc) or email us at team@arweave.org.", "created_at": "2020-12-14T20:16:13Z", "project": "Arweave (AR)", "currency": "ar", "alias": "arweave", "repo": "ArweaveTeam/arweave", "type": "ar", "hosting": "github", "explorer": "https://viewblock.io/arweave", "doc": "https://www.arweave.org/mine/start", "api": "https://docs.arweave.org/developers/server/http-api", "add_time": "2020-05-12T10:00:00Z"}, {"name": "Marljeh (v1.9.25)", "tag_name": "v1.9.25", "html_url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.9.25", "repo_url": "https://github.com/ethereum/go-ethereum", "body": "Geth v1.9.25 is a maintenance release.\r\n\r\nNotable changes in this release:\r\n\r\n- Geth has a new subcommand, `geth version-check`, which displays known security issues ([#21859](https://github.com/ethereum/go-ethereum/pull/21859))\r\n- The geth `--ws.origins` flag now supports more expressive origin rules ([#21481](https://github.com/ethereum/go-ethereum/pull/21481))\r\n- Recording of trie key preimages can now be disabled using the `--cache.preimages` flag ([#21402](https://github.com/ethereum/go-ethereum/pull/21402))\r\n- The accounts/abi/bind package now offers replay-protected transaction signing ([#21356](https://github.com/ethereum/go-ethereum/pull/21356))\r\n- The GraphQL API now always returns status code 400 if there is an error processing the query ([#21882](https://github.com/ethereum/go-ethereum/pull/21882))\r\n- The `devp2p nodeset filter` command can now find snap-enabled nodes ([#21950](https://github.com/ethereum/go-ethereum/pull/21950))\r\n- The eth protocol test suite has been extended with tests for transaction announcements and malicious announce behavior ([#21857](https://github.com/ethereum/go-ethereum/pull/21857), [#21792](https://github.com/ethereum/go-ethereum/pull/21792))\r\n- Support for 'retesteth' has been removed from geth since it is no longer used for tests. Its replacement, the `evm t8n` tool, was released in Geth v1.9.16 ([#21861](https://github.com/ethereum/go-ethereum/pull/21861))\r\n- We now offer signify/minisign signatures for Geth binary downloads as an alternative to PGP. This is experimental, and not yet advertised on the downloads page ([#21798](https://github.com/ethereum/go-ethereum/pull/21798))\r\n\r\nBug fixes:\r\n\r\n- A crash in LES server handling of the GetProofsV2 message is resolved. See [CVE-2020-26264 advisory](https://github.com/ethereum/go-ethereum/security/advisories/GHSA-r33q-22hv-j29q) for more information ([#21896](https://github.com/ethereum/go-ethereum/pull/21896))\r\n- The LES server no longer locks up during geth shutdown ([#21927](https://github.com/ethereum/go-ethereum/pull/21927))\r\n- Clef now correctly derives accounts for Ledger Live devices ([#21757](https://github.com/ethereum/go-ethereum/pull/21757))\r\n- The faucet now ignores URL query parameters in Facebook post URLs ([#21838](https://github.com/ethereum/go-ethereum/pull/21838))\r\n- Light client peer discovery now uses DNS ([#21906](https://github.com/ethereum/go-ethereum/pull/21906))\r\n- `go mod vendor` of go-ethereum should now work ([#21735](https://github.com/ethereum/go-ethereum/pull/21735))\r\n- The peer connection acceptor doesn't hot-spin anymore when geth runs out of file descriptors ([#21878](https://github.com/ethereum/go-ethereum/pull/21878))\r\n- Using the `reexec` option for tracing RPC methods no longer crashes the RPC handler ([#21830](https://github.com/ethereum/go-ethereum/pull/21830))\r\n- `common.Hash` and `common.Address` now print as hex when using `fmt.Println` ([#21834](https://github.com/ethereum/go-ethereum/pull/21834))\r\n- A rare deadlock in Discovery v5 message dispatch is fixed ([#21858](https://github.com/ethereum/go-ethereum/pull/21858))\r\n- Failures in internal CPU metrics collection no longer crash geth ([#21864](https://github.com/ethereum/go-ethereum/pull/21864))\r\n- In Go contract bindings generated by abigen, the `Raw` field of parsed events is now set correctly ([#21807](https://github.com/ethereum/go-ethereum/pull/21807))\r\n\r\nFor a full rundown of the changes please consult the Geth 1.9.25 [release milestone](https://github.com/ethereum/go-ethereum/milestone/111?closed=1)\r\n\r\n---\r\n\r\nAs with all our previous releases, you can find the:\r\n\r\n- Pre-built binaries for all platforms on our [downloads page](https://geth.ethereum.org/downloads/).\r\n- Docker images published under [`ethereum/client-go`](https://cloud.docker.com/u/ethereum/repository/docker/ethereum/client-go).\r\n- Ubuntu packages in our [Launchpad PPA repository](https://launchpad.net/~ethereum/+archive/ubuntu/ethereum).\r\n- OSX packages in our [Homebrew Tap repository](https://github.com/ethereum/homebrew-ethereum).\r\n", "created_at": "2020-12-11T08:03:16Z", "project": "Ethereum (ETH)", "currency": "eth", "alias": "ethereum", "repo": "ethereum/go-ethereum", "type": "ethereum", "hosting": "github", "explorer": "https://cn.etherscan.com", "doc": "https://geth.ethereum.org/docs/install-and-build/installing-geth#install-on-ubuntu-via-ppas", "api": "https://eth.wiki/json-rpc/API", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/CryptoDWH/cdwh-sdk", "repo_url": "https://github.com/CryptoDWH/cdwh-sdk", "body": "", "created_at": "2020-12-10T02:00:00Z", "project": "Mirror World (MW)", "currency": "mw", "alias": "mw", "repo": "CryptoDWH/cdwh-sdk", "type": "mw", "hosting": "github", "explorer": "https://testboot.mw.run", "explorer1": "http://mw.rylink.io:7216", "doc": "https://mwfs.oss-cn-shenzhen.aliyuncs.com/cos/miner/MW_Miner_Register.pdf", "api": "http://docs.mw.run", "add_time": "2020-12-10T02:00:00Z"}, {"name": "Conflux v1.1.0 (Tanzanite)", "tag_name": "v1.1.0", "html_url": "https://github.com/Conflux-Chain/conflux-rust/releases/tag/v1.1.0", "repo_url": "https://github.com/Conflux-Chain/conflux-rust", "body": "## Incompatible changes\r\n\r\n- CIP-38: Reduce the block base reward to 2 CFX from the epoch number 3,615,000.\r\n- CIP-39: Blocks from the height 3,615,000 (included) are required to set the first element of their `custom` field in the header to `[1]`.\r\n\r\n## Improvements\r\n- Return the `custom` field in the block header for related RPCs (`cfx_getBlockByHash`, `cfx_getBlockByHashWithPivotAssumption`, `cfx_getBlockByEpochNumber`).\r\n\r\n- Add config parameter `executive_trace` to allow storing block execution traces. (default is `false`)\r\n- Add config parameter `enable_tracing` to allow public access to `trace_*` RPC APIs. (default is `false`)\r\n- Add new rpc `trace_block` for archive/full nodes. (only works for blocks processed after setting `executive_trace`)\r\n- Use 0 as default for storage limit in `cfx_sendTransaction` and `cfx_signTransaction`.\r\n\r\n## Bug Fixes\r\n\r\n- Change the `blame` field returned from the `newHeads` pub-sub to hex.\r\n- Fix an issue where the `logs` pub-sub API would skip logs.\r\n- Fix an issue where if miners submit the nonce solution to multiple nodes, some of these nodes may stop mining (Issue #1985).\r\n", "created_at": "2020-12-09T07:20:28Z", "project": "Conflux (CFX)", "currency": "cfx", "alias": "cfx", "repo": "Conflux-Chain/conflux-rust", "type": "fork eth", "hosting": "github", "explorer": "https://confluxscan.io", "doc": "https://developer.conflux-chain.org/docs/conflux-doc/docs/installation", "api": "https://developer.conflux-chain.org/docs/conflux-doc/docs/json_rpc", "add_time": "2020-11-05T11:00:00Z"}, {"name": "Mercury(v1.0.2)", "tag_name": "v1.0.2", "html_url": "https://github.com/Dipper-Labs/Dipper-Protocol/releases/tag/v1.0.2", "repo_url": "https://github.com/Dipper-Labs/Dipper-Protocol", "body": "update coin_type from 118 to 925", "created_at": "2020-12-08T07:21:52Z", "project": "Dipper Network (DIP)", "currency": "dip", "alias": "dip", "repo": "Dipper-Labs/Dipper-Protocol", "type": "cosmos", "hosting": "github", "explorer": "http://explorer.dippernetwork.com", "doc": "https://docs.dippernetwork.com/get-started/install.html", "api": "https://docs.dippernetwork.com/api/api.html", "add_time": "2020-12-10T12:00:00Z"}, {"name": "Cardano Node 1.24.2", "tag_name": "1.24.2", "html_url": "https://github.com/input-output-hk/cardano-node/releases/tag/1.24.2", "repo_url": "https://github.com/input-output-hk/cardano-node", "body": "This release provides support for the upcoming Allegra (token locking) Hard Fork and Mary Hard Fork and the new features they bring.\r\n\r\nEveryone ***must*** upgrade to this (or a later) version to cross the Allegra Hard Fork.\r\nDaedalus users should look for Daedalus release 3.0.0 which includes a version of the node that will cross the Token locking Cardano update, however people using the node directly must upgrade.\r\n\r\n* Token locking Cardano update adds some features needed to support the Catalyst treasury scheme. It extends the existing multi-sig script language with predicates for time, via the slot number. It allows, for example, to make a script address that is not spendable until a certain point in time.\r\n* The native tokens Cardano update adds multi-asset support. This is comparable to ERC20 and ERC721 tokens, but supported natively in the UTxO ledger. This is part of the Goguen feature set. It is a very significant feature and will have implications for all Cardano wallet implementations, including exchanges.\r\n\r\nStake Pool Operators (SPOs) and Exchanges should update their node config \"options\" section with an extra entry:\r\n```\r\n  \"options\": {\r\n    \"mapBackends\": {\r\n      \"cardano.node.resources\": [\r\n        \"EKGViewBK\"\r\n      ],\r\n```\r\nSee link to configuration files in documentation section below.\r\n\r\n## Node changes\r\n- Add a nodeStartTime metric. This is a partial replacement for the uptime metric that was removed in the 1.23.0 release. (#2118)\r\n- New metrics for the size of the UTxO and delegation maps (#2158)\r\n- Tracing changes to support \"K=1000\" benchmarks (#2156, #2175)\r\n- Mention the required xz tool in the Cabal build instructions (#2132)\r\n- Eliminate the need to update the `LastKnownBlockVersion-*` entries in the node config files for the Shelley-based eras. This means the configuration does not need to be updated for the Token locking or native tokens eras. (#2193)\r\n- Export some more metrics for selected OS and RTS stats (#2192)\r\n\r\n## Ledger changes\r\n- Support for optional additional scripts in the tx auxiliary data ([#1993](https://github.com/input-output-hk/cardano-ledger-specs/pull/1993))\r\n- Update the CDDL specification of the blockchain binary format for Token locking and native tokens eras ([#1994](https://github.com/input-output-hk/cardano-ledger-specs/pull/1994), [#1999](https://github.com/input-output-hk/cardano-ledger-specs/pull/1999), [#2009](https://github.com/input-output-hk/cardano-ledger-specs/pull/2009))\r\n- Improved serialised binary format for multi-asset values ([#1979](https://github.com/input-output-hk/cardano-ledger-specs/pull/1979))\r\n- Add a compact in-memory storage format for multi-asset values ([#1996](https://github.com/input-output-hk/cardano-ledger-specs/pull/1996))\r\n- Updates to the multi-asset formal specifiation ([#2003](https://github.com/input-output-hk/cardano-ledger-specs/pull/2003))\r\n- Adjust how the major protocol version is handled for soft forks ([#1998](https://github.com/input-output-hk/cardano-ledger-specs/pull/1998))\r\n- Initial preparatory steps for the Alonzo era ([#2016](https://github.com/input-output-hk/cardano-ledger-specs/pull/2016), [#2027](https://github.com/input-output-hk/cardano-ledger-specs/pull/2027))\r\n- Benchmarks for the transaction generators ([#2024](https://github.com/input-output-hk/cardano-ledger-specs/pull/2024))\r\n\r\n## Consensus changes\r\n- Use a single set of credentials for all Shelley-based eras. This keeps the node configuration simple for the new eras. ([#2753](https://github.com/input-output-hk/ouroboros-network/pull/2753))\r\n- Add support for a token locking-only protocol mode to simplify benchmarking ([#2754](https://github.com/input-output-hk/ouroboros-network/pull/2754))\r\n- Add support for the system wall clock time being adjusted backwards by a small amount without triggering a node shutdown and restart. Small backwards adjustments can be caused by NTP. ([#2781](https://github.com/input-output-hk/ouroboros-network/pull/2781), [#2785](https://github.com/input-output-hk/ouroboros-network/pull/2785))\r\n\r\n## Network changes\r\n- Preparations for publishing io-sim as a public library ([#2775](https://github.com/input-output-hk/ouroboros-network/pull/2775))\r\n- Improved logging of the creation of the node's sockets ([#2746](https://github.com/input-output-hk/ouroboros-network/pull/2746))\r\n- Update the cardano-ping tool to support the node-to-node protocol V4 ([#2787](https://github.com/input-output-hk/ouroboros-network/pull/2787))\r\n\r\n## CLI changes\r\n- CLI support for the Token locking  and native tokens eras, including creating transactions for the new eras, and support for the special new features in the new eras: script extensions, tx validity intervals, auxiliary scripts, multi-asset tx outputs and asset minting. (#2072, #2129, #2136)\r\n- It is now necessary to specify the target era (e.g. --allegra-era) when creating a transaction (with build-raw) so that the right format and feature-set is used. The --shelley-era remains the default.\r\n- It is necessary for now to specify the target era when using the CLI query commands. This may become automatic in future. The default is --shelley-era.\r\n- Move all the Shelley sub-commands to the top level of the command line. For example `cardano-cli shelley transaction build-raw` becomes simply `cardano-cli transaction build-raw`. The existing names are also kept for compatibility. (#2076, #2145)\r\n- Updated help text for the ledger/protocol state queries to clarify that they are primarily for debugging and are not stable interfaces (#2125, #2126, #2133)\r\n- New command `transaction policyid` for making multi-asset policy ids (#2176)\r\n- New command `byron transaction txid` to help scripts with getting the transaction id for Byron transactions made using the cli (#2169)\r\n- New `--tx-file` flag for the command `transaction txid` to accept complete txs, not just tx bodies (#2169)\r\n- Hide the deprecated `--ttl` flag in the `--help` output (#2189, #2190)\r\n\r\n## API changes\r\n- Full API support for the Token locking and native tokens eras, including creating transactions for the new eras, and support for the special new features in the new eras: script extensions, tx validity intervals, auxiliary scripts, multi-asset tx outputs and asset minting (#2092, #2110, #2111, #2121, #2127, #2128, #2141, #2149)\r\n\r\n## Documentation\r\n\r\n- [Cardano Node documentation](https://docs.cardano.org/projects/cardano-node/)\r\n- [Cardano CLI](https://github.com/input-output-hk/cardano-node/blob/1.24.2/cardano-cli/README.md)\r\n- [Internal API docs for ledger, consensus and network](https://input-output-hk.github.io/ouroboros-network/)\r\n- [Configuration files](https://docs.cardano.org/projects/cardano-node/en/latest/stake-pool-operations/getConfigFiles_AND_Connect.html)\r\n## Platforms\r\n\r\n- Linux 64-bit (Ubuntu 18.04 LTS, 20.04 LTS; Mint 19.3, 20; Debian 10.3)\r\n- Windows 64-bit (8.1, 10)\r\n- MacOS 10.13, 10.14, 10.15\r\n- [Docker image](https://hub.docker.com/r/inputoutput/cardano-node)\r\n\r\n## Minimum System Requirements\r\n\r\n- An Intel or AMD x86 processor with two or more cores, at 1.6GHz or faster (2GHz or faster for a stake pool or relay)\r\n- 4GB of RAM (8GB for a relay or stake pool)\r\n- 10GB of free storage (20GB for a stake pool)\r\n\r\n## Sign off\r\n<!-- Signatures of people responsible for the release -->\r\nRole | Approval\r\n-- | --\r\nTechnical Lead |\u2714\ufe0f\r\nQA Engineer | \u2714\ufe0f \r\nOps | \u2714\ufe0f\r\nRelease Manager |\u2714\ufe0f", "created_at": "2020-12-07T18:13:19Z", "project": "Cardano (ADA)", "currency": "ada", "alias": "cardano", "repo": "input-output-hk/cardano-node", "type": "utxo", "hosting": "github", "explorer": "https://cardanoexplorer.com", "doc": "https://github.com/input-output-hk/cardano-sl/blob/develop/docs/how-to/build-cardano-sl-and-daedalus-from-source-code.md", "api": "https://docs.cardano.org/technical/wallet/api/v1", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Gateway Bugfix Release 2", "tag_name": "v0.12.1", "html_url": "https://github.com/Kava-Labs/kava/releases/tag/v0.12.1", "repo_url": "https://github.com/Kava-Labs/kava", "body": "# Gateway Bugfix Release\r\n\r\nThis release fixes minor bugs and is compatible with mainnet `kava-4`. There are no contraints on when validators should update.\r\n\r\n## Release Notes\r\n\r\n- Increment version of the cosmos-sdk (to [v0.39.2](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.39.2)) and tendermint (to [v0.33.9](https://github.com/tendermint/tendermint/releases/tag/v0.33.9)) to help an issue resulting in missed blocks \r\nfor validators (https://github.com/tendermint/tendermint/issues/5550).\r\n- Add an authorized mempool feature to allow nodes to limit the transactions they accept into their mempool.\r\n\r\n", "created_at": "2020-12-02T12:46:14Z", "project": "Kava (KAVA)", "currency": "kava", "alias": "kava", "repo": "Kava-Labs/kava", "type": "cosmos", "hosting": "github", "explorer": "https://kava.mintscan.io", "explorer1": "https://kava.bigdipper.live", "doc": "https://docs.kava.io/#installation", "doc1": "https://mp.weixin.qq.com/s/HFj7bYqQ7FrjR_89jj-QWQ", "api": "https://rpc.kava.io", "add_time": "2020-03-03T12:00:00Z"}, {"name": "Bitcoin SV version 1.0.6 Release Notes", "tag_name": "v1.0.6", "html_url": "https://github.com/bitcoin-sv/bitcoin-sv/releases/tag/v1.0.6", "repo_url": "https://github.com/bitcoin-sv/bitcoin-sv", "body": "## List of Changes since 1.0.5\r\n* New RPC to retrieve UTXOs.\r\n* sendrawtransactions returns any double spend transaction IDs.\r\n* Refactor code so HTTP client requests can be made from bitcoind.\r\n* New RPC to list ZMQ notifications and endpoints.\r\n* ZMQ notifications for transaction mempool removal.\r\n* Insecure function (sprintf) no longer used.\r\n* Make ZMQ interface thread safe.\r\n* RPC to provide Merkle proofs for transaction inclusion in blocks.\r\n* Invalid transactions can now be published to ZMQ or stored to disk.\r\n* Ensure the fallback path for packages (bitcoinsv.io) in the Gitian build contains all required packages.\r\n* Fix to Gitian build.\r\n* Fix: Accessing memory after std::move.\r\n* ZMQ: Push information (blockhash) in which block transaction we collided with arrived.\r\n* Do not use deprecated boost bind features.\r\n* Remove logging from consensus.\r\n* Validation status dos cleanup.\r\n* ThreadSanitiser reports issues in thread safe queue tests.\r\n* ThreadSanitiser reported heap-use-after-free.\r\n* Fix: gettxouts parameters CLI type mismatch.\r\n* Fix: CheckTxInputExists should not be used.\r\n* Remove assert and fix shutdown after unsuccessful startup.\r\n* Unconditionally log P2P stall messages if denugp2pthreadstalls is specified.\r\n* Fix: clearinvalidtransactions RPC returned the number of bytes freed as zero.\r\n* Fix: #include <limits> added to script_num.cpp to fix build issues with later compilers.\r\n* Rename ZMQ topic zmqpubremovedfrommempool to zmqpubdiscardedfrommempool.\r\n* November 2020 STN reset.\r\n\r\n## Scaling Test Network (STN) Reset\r\nThe Scaling Test Network has been reset at block height 4. This block has hash \r\n`00000000d33661d5a6906f84e3c64ea6101d144ec83760bcb4ba81edcb15e68d`.", "created_at": "2020-11-17T08:01:39Z", "project": "Bitcoin SV (BSV)", "currency": "bsv", "alias": "bitcoin-sv", "repo": "bitcoin-sv/bitcoin-sv", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bsv", "doc": "https://github.com/4ops/docker-bitcoin-sv", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Dash Core 0.16.1.1 Release Announcement", "tag_name": "v0.16.1.1", "html_url": "https://github.com/dashpay/dash/releases/tag/v0.16.1.1", "repo_url": "https://github.com/dashpay/dash", "body": "We are happy to announce the release of 0.16.1.1. This release includes binaries, which can be downloaded below.\r\n\r\nAbout this release\r\n=============\r\n\r\nDash Core 0.16.1.1 is a hotfix release of the Dash Core 0.16.x.x series. This release contains a bugfix and we consider this a stable release. You can find detailed release notes at https://github.com/dashpay/dash/blob/v0.16.1.1/doc/release-notes.md.\r\n\r\nVerification of Downloads\r\n-----------------------------------\r\n\r\nThis release was signed by https://keybase.io/pasta (GPG fingerprint: `2959 0362 EC87 8A81 FD3C 202B 5252 7BED ABE8 7984`).\r\n\r\nIt is important to verify the binaries you download by following one of these guides:\r\n - [Windows](https://docs.dash.org/en/stable/wallets/dashcore/installation-windows.html?#verifying-dash-core)\r\n - [MacOS](https://docs.dash.org/en/stable/wallets/dashcore/installation-macos.html?#verifying-dash-core)\r\n - [Linux](https://docs.dash.org/en/stable/wallets/dashcore/installation-linux.html?#verifying-dash-core)\r\n\r\nNotable Changes\r\n-----------------------\r\nThere was an unexpected behaviour of the \"Encrypt wallet\" menu item for unencrypted wallets which was showing users the \"Decrypt wallet\" dialog instead. This was a GUI only issue, internal encryption logic and RPC behaviour were not affected.\r\n\r\nCredits\r\n-------\r\n\r\nThanks go out to all Dash Core contributors, everyone who submitted issues, reviewed pull requests or helped translating on [Transifex](https://www.transifex.com/projects/p/dash/) and also to [Bitcoin Core](https://github.com/bitcoin/bitcoin) Developers.", "created_at": "2020-11-15T21:43:14Z", "project": "Dash (DASH)", "currency": "dash", "alias": "dash", "repo": "dashpay/dash", "type": "utxo", "hosting": "github", "explorer": "https://explorer.dash.org", "doc": "https://docs.dash.org/zh_CN/stable/masternodes/setup.html#option-1-automated-installation-using-dashman", "api": "https://dashcore.readme.io/docs/core-api-ref-http-rest-quick-reference", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/cypherium/cypherBFTBin", "repo_url": "https://github.com/cypherium/cypherBFTBin", "body": "", "created_at": "2020-11-04T04:00:00Z", "project": "Cypherium (CPH)", "currency": "cph", "alias": "cph", "repo": "cypherium/cypherBFTBin", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.cypherium.io", "doc": "https://www.cypherium.io", "api": "https://www.cypherium.io", "add_time": "2020-11-04T04:00:00Z"}, {"name": "Release v1.5.3", "tag_name": "v1.5.3", "html_url": "https://github.com/klaytn/klaytn/releases/tag/v1.5.3", "repo_url": "https://github.com/klaytn/klaytn", "body": "# v1.5.3 Release Notes\r\n\r\n## New Features\r\n- Implemented a streaming module to push fetched blockchain data to Kafka in real-time\r\n  - Implemented a Kafka client (#685)  \r\n  - Added options for Kafka (#689)\r\n  - Implemented a Kafka consumer (#697)\r\n- Implemented Remote Cache (redis) (#681)\r\n- Implemented Redis pub/sub for the latest block (#676) \r\n- Implemented DB Migration feature (#648)\r\n- Implemented StateTrieNode cache dump feature to restore the cache after restart for performance boost at cold start (#692, #702)\r\n\r\n## Improvements\r\n- Fixed wrong status API output of state trie migration (#703)\r\n- Fixed the validation logic of a role-based key including `AccountKeyLegacy` (#674)\r\n\r\n## Miscellaneous\r\n- Added options to disable Fetcher/Downloader/Worker (#680, #688)\r\n- Implemented to generate the genesis block with existing chain data (#649)\r\n- Removed the unused flag `--cache.writethrough` (#682)\r\n- Added an error log when failed to read the trie DB (#683)\r\n- Added the staking contract source code (#699)\r\n- Added `--start-block-num` to test past blocks (#711)  \r\n- Added a validity check when a keystore is created (#725)\r\n- Added read/write performance metrics for Level DB (#726) \r\n\r\n# Binaries\r\n<ul><li>Linux: <a href=http://packages.klaytn.net/klaytn/v1.5.3/kcn-v1.5.3-0-linux-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kpn-v1.5.3-0-linux-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/ken-v1.5.3-0-linux-amd64.tar.gz>ken</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kscn-v1.5.3-0-linux-amd64.tar.gz>kscn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kspn-v1.5.3-0-linux-amd64.tar.gz>kspn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/ksen-v1.5.3-0-linux-amd64.tar.gz>ksen</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kbn-v1.5.3-0-linux-amd64.tar.gz>kbn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kgen-v1.5.3-0-linux-amd64.tar.gz>kgen</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/homi-v1.5.3-0-linux-amd64.tar.gz>homi</a> </li><li>Darwin: <a href=http://packages.klaytn.net/klaytn/v1.5.3/kcn-v1.5.3-0-darwin-10.10-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kpn-v1.5.3-0-darwin-10.10-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/ken-v1.5.3-0-darwin-10.10-amd64.tar.gz>ken</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kscn-v1.5.3-0-darwin-10.10-amd64.tar.gz>kscn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kspn-v1.5.3-0-darwin-10.10-amd64.tar.gz>kspn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/ksen-v1.5.3-0-darwin-10.10-amd64.tar.gz>ksen</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kbn-v1.5.3-0-darwin-10.10-amd64.tar.gz>kbn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kgen-v1.5.3-0-darwin-10.10-amd64.tar.gz>kgen</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/homi-v1.5.3-0-darwin-10.10-amd64.tar.gz>homi</a> </li><li>Baobab-linux: <a href=http://packages.klaytn.net/klaytn/v1.5.3/kcn-baobab-v1.5.3-0-linux-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kpn-baobab-v1.5.3-0-linux-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/ken-baobab-v1.5.3-0-linux-amd64.tar.gz>ken</a> </li><li>Baobab-darwin: <a href=http://packages.klaytn.net/klaytn/v1.5.3/kcn-baobab-v1.5.3-0-darwin-10.10-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/kpn-baobab-v1.5.3-0-darwin-10.10-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.5.3/ken-baobab-v1.5.3-0-darwin-10.10-amd64.tar.gz>ken</a> </li></ul>", "created_at": "2020-10-28T10:00:11Z", "project": "Klaytn (KLAY)", "currency": "klay", "alias": "klaytn", "repo": "klaytn/klaytn", "type": "fork eth", "hosting": "github", "explorer": "https://scope.klaytn.com", "doc": "https://docs.klaytn.com/node/endpoint-node/installation-guide/installation-guide", "api": "https://docs.klaytn.com/node/endpoint-node/json-rpc-apis", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "release@1.0.8n", "html_url": "https://github.com/yottachain/YTDataNode/commit/7a69bbcb5869d5900fac5cae1d73b1a840ebd93f", "repo_url": "https://github.com/yottachain/YTDataNode", "body": "publish 1.0.8n", "created_at": "2020-10-21T02:44:07Z", "project": "YOTTA (YTA)", "currency": "yta", "alias": "yta", "repo": "yottachain/YTDataNode", "type": "eos", "hosting": "github", "explorer": "https://yottascan.io/zh/overview", "doc": "https://www.yottachain.io/zh/developer/", "api": "https://static.yottachain.net/download/YTA%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%20.pdf", "add_time": "2020-11-04T04:00:00Z"}, {"name": "", "tag_name": "v2.0.22", "html_url": "https://github.com/HorizenOfficial/zen/releases/tag/v2.0.22", "repo_url": "https://github.com/HorizenOfficial/zen", "body": "Binaries\r\n=========\r\nWindows and macOS binaries are signed with a valid certificate,\r\nsee included instructions.txt for Win/Mac command line wallets.\r\n\r\nInstall\r\n=========\r\nDebian package dependencies:\r\n\r\n```\r\nDepends amd64: libc6 (>= 2.18), libgcc1 (>= 1:4.2), libgomp1 (>= 4.9), libstdc++6 (>= 5.2)\r\nDepends arm64: libc6 (>= 2.25), libgcc1 (>= 1:4.2), libgomp1 (>= 4.9), libstdc++6 (>= 7)\r\n```\r\n\r\n\r\nNotable changes\r\n===============\r\n\r\n* Hard Fork at mainnet block 835968/testnet block 735700 with minor changes to OP_CBAH handling\r\n* Extend OP_CBAH unit tests\r\n* Security hardening of TLS P2P code, only allow PFS ciphers, limit TLS versions to 1.2/1.3\r\n* Extend TLS unit tests\r\n* Extend the 'getblock' RPC command with additional verbosity level, adding transaction information in the format of the getrawtransaction RPC call\r\n* Add fetch-params.ps1 powershell script for Windows trusted setup DL and verification\r\n* Fix for gcc10 compatibility\r\n* Updates of dependencies OpenSSL, Univalue, libsodium\r\n* Rename GH organization to HorizenOfficial", "created_at": "2020-10-19T18:34:28Z", "project": "Horizen (ZEN)", "currency": "zen", "alias": "zen", "repo": "HorizenOfficial/zen", "type": "utxo", "hosting": "github", "explorer": "https://explorer.zensystem.io", "explorer1": "https://zen.tokenview.com", "doc": "https://github.com/HorizenOfficial/zen-node-docker", "api": "https://docs.horizen.io/en/latest/reference/index.html", "add_time": "2020-11-30T12:00:00Z"}, {"name": "Release 3.3.0", "tag_name": "v3.3.0", "html_url": "https://github.com/ucacoin/Ucacoin2/releases/tag/v3.3.0", "repo_url": "https://github.com/ucacoin/Ucacoin2", "body": "# Mandatory Update:\r\n\r\n###  Users with updating from a previous version will require a full resync of their local blockchain from either the P2P network or by way of the **bootstrap**.\r\n### If you didn't go with **bootstrap** than it will be ask for resync **when you start wallet** . This resync is a one-time event.\r\n\r\n## How to upgrade:\r\nShutdown your old pc/mac/linux wallet completely.\r\n\r\n- For windows users - run the <a href=\"https://github.com/ucacoin/Ucacoin2/releases/download/v3.3.0/ucacoin-3.3.0-setup-win64.zip\">Installer</a>.\r\n- For Mac users copy the dmg to your Applications folder (copying over your current UCA Coin application).\r\n- For Linux users copy over ucacoind/ucacoin-qt. If you have installed your data directory to a custom location select existing data directory during your installation.\r\n\r\n", "created_at": "2020-10-16T10:43:20Z", "project": "UCA Coin (UCA)", "currency": "uca", "alias": "ucacoin", "repo": "ucacoin/Ucacoin2", "type": "utxo", "hosting": "github", "explorer": "https://blockexplorer.ucacoin.cash", "doc": "https://github.com/ucacoin/Ucacoin2#docker", "api": "https://github.com/ucacoin/Ucacoin2/blob/master/doc/REST-interface.md", "add_time": "2020-07-07T07:00:00Z"}, {"name": "Mainnet Ignition v0.20.1 - Upgrade to bitcoin core 0.20.1 - Improvements - Bug fixes", "tag_name": "mainnet-ignition-v0.20.1", "html_url": "https://github.com/qtumproject/qtum/releases/tag/mainnet-ignition-v0.20.1", "repo_url": "https://github.com/qtumproject/qtum", "body": "What's new\r\n----------------\r\n\r\n* v0.20.1 - Mainnet Ignition v0.20.1 - Upgrade to bitcoin core 0.20.1 - Bug fixes\r\n\t* Upgrade Qtum core to bitcoin core 0.20.1 including updates from [0.20.0](https://bitcoin.org/en/release/v0.20.0#change-log) and [0.20.1](https://bitcoin.org/en/release/v0.20.1#change-log).\r\n\t* Add RPC calls for custom super staker configuration from cli: `setsuperstakervaluesforaddress`, `listsuperstakercustomvalues`, `listsuperstakervaluesforaddress`, `removesuperstakervaluesforaddress`.\r\n\t* Change `stakingwhitelist` and `stakingblacklist` to `stakingallowlist` and `stakingexcludelist`.\r\n\t* Update `callcontract` RPC call to estimate the gas needed for creating a contract.\r\n\t* Add amount option to `callcontract` RPC call.\r\n\t* Split the total weight into staker weight and delegations weight for RPC call `getstakinginfo`.\r\n\t* Allow min utxo value < 100 in GUI wallet.\r\n\t* Add matured weight for delegation in RPC call `getdelegationsforstaker`.\r\n\t* Update coinstake display in RPC calls for transactions.\r\n\t* Fix a bug that caused `fundrawtransaction` to fail in some cases.\r\n\t* Fix build with boost 1.73.0.\r\n\t* Fix compiler error for Qt5 5.15.\r\n\t* Move redundant lock in getblockhashes to blockOnchainActive.\r\n\t* Update blockchain data.\r\n\t* Add post fork checkpoints.\r\n\t* Fix minor GUI typos.\r\n\r\n\r\nHash validation\r\n----------------\r\n\r\nIf you would like to validate that the binaries you download are exactly the same as those provided and built by the Qtum team, then you can compare your binaries to the following sha256sum hashes:\r\n\r\n```\r\n2991fdfc429665d435eb1b588dcd814b76052881929252082c2e1f8fe986da8f  qtum-0.20.1-aarch64-linux-gnu-debug.tar.gz\r\nfe9d0367da6e10aaa7361fa445fc93092785480ea94eda76788238c63a18ce1f  qtum-0.20.1-aarch64-linux-gnu.tar.gz\r\ncb92c55d870760e4aacfcc476d873b2bd08768d8eb54c7239672263dd7eed53c  qtum-0.20.1-arm-linux-gnueabihf-debug.tar.gz\r\n9044f1ce4510b6b04dc726aa3266aebe05c5a4467d14d5e84eb4033547775ad9  qtum-0.20.1-arm-linux-gnueabihf.tar.gz\r\n9121afa8b2a01efc4ab91df147864b1c9d075161060e882a1839dec6c304b920  qtum-0.20.1-riscv64-linux-gnu-debug.tar.gz\r\n4f10a07cadba058e256acc6442eae1658004f9e18a6f20103777a48d3dceaf9c  qtum-0.20.1-riscv64-linux-gnu.tar.gz\r\n99888e8f6249904f90794c4da015f77861d87341647de19162f71c38c95f34aa  qtum-0.20.1-x86_64-linux-gnu-debug.tar.gz\r\ne9a77eb3e2b76625fdc8058c12bc0790309b24b9c1ac39f4895e4f8756cf0010  qtum-0.20.1-x86_64-linux-gnu.tar.gz\r\n41b4d50aabb06d2dac9a31d25a50f5a019346de7472aa1f8cd46a94a53a02a9e  src/qtum-0.20.1.tar.gz\r\nf79d30a307ead674c2774224ec45460182d1c3d3d1495bbebd6290974614f9fb  qtum-core-linux-0.20-res.yml\r\n\r\nbaf6d88ebb6fb966f5db7b1215d0b370fdbac7c93480abb93730437c4bccf73b  qtum-0.20.1-win-unsigned.tar.gz\r\n02f6b1df82263c8d138962041026a90dc01f084dafecb6b60bd6a4ae0d6dbb08  qtum-0.20.1-win64-debug.zip\r\nb6efacc002223aa9a72a28a7f23e4b28b008f43c47af0a61ccee2437b410314c  qtum-0.20.1-win64-setup-unsigned.exe\r\n3f149b6b191532b9fc477e62213c5cf0ba2de8b87eb677f04e95824684404fe6  qtum-0.20.1-win64.zip\r\n41b4d50aabb06d2dac9a31d25a50f5a019346de7472aa1f8cd46a94a53a02a9e  src/qtum-0.20.1.tar.gz\r\n64b5748ce6781440f7beaeee11b9790b1791fb1453a8fced89c3c2adcf6eeea2  qtum-core-win-0.20-res.yml\r\n\r\ncf909f0292020fd140011e79f22894639e1bf013ed83021a55b9ba8324ddbc33  qtum-0.20.1-osx-unsigned.dmg\r\n6bdaced3e8a34fe466da2ecc24ecf18d10c31b2020269b5f9ae9386b3a0334cd  qtum-0.20.1-osx-unsigned.tar.gz\r\n830b779564f9fc2f039282f9b01ffd8fe1644b8b9a341980cf26e0f33da54dcc  qtum-0.20.1-osx64.tar.gz\r\n41b4d50aabb06d2dac9a31d25a50f5a019346de7472aa1f8cd46a94a53a02a9e  src/qtum-0.20.1.tar.gz\r\n935598d1484b933c0880270399c7f69f6242c8cddcd3dc9f194e6d6d8945786f  qtum-core-osx-0.20-res.yml\r\n```", "created_at": "2020-10-13T03:32:52Z", "project": "Qtum (QTUM)", "currency": "qtum", "alias": "qtum", "repo": "qtumproject/qtum", "type": "utxo", "hosting": "github", "explorer": "https://qtum.info", "explorer1": "https://explorer.qtum.org", "doc": "https://docs.qtum.site/zh/Launch-Qtum-with-Docker.html", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Omni Core v0.9.0", "tag_name": "v0.9.0", "html_url": "https://github.com/OmniLayer/omnicore/releases/tag/v0.9.0", "repo_url": "https://github.com/OmniLayer/omnicore", "body": "v0.9.0 is a major release and uses Segregated Witness wrapped in P2SH for newly generated addresses per default. It also adds two new transaction types to anchor arbitrary data in the blockchain. As an experimental feature, several new commands were added to support querying any Bitcoin balance.\r\n\r\nWhile this release is not mandatory and doesn't change the consensus rules of the Omni Layer protocol, an upgrade is nevertheless recommended.\r\n\r\nUpgrading from 0.8.2, 0.8.1 or 0.8.0 does not require a rescan and can be done very fast without interruption.\r\n\r\nPlease report bugs using the issue tracker on GitHub:\r\n\r\n  https://github.com/OmniLayer/omnicore/issues\r\n\r\n\r\nTable of contents\r\n=================\r\n\r\n- [Omni Core v0.9.0](#omni-core-v082)\r\n- [Upgrading and downgrading](#upgrading-and-downgrading)\r\n  - [How to upgrade](#how-to-upgrade)\r\n  - [Downgrading](#downgrading)\r\n  - [Compatibility with Bitcoin Core](#compatibility-with-bitcoin-core)\r\n- [Improvements](#improvements)\r\n  - [Use wrapped Segrated Witness scripts for new addresses](#use-wrapped-segrated-witness-scripts-for-new-addresses)\r\n  - [New transactions to anchor arbitrary data](#new-transactions-to-anchor-arbitrary-data)\r\n  - [Experimental querying of any Bitcoin balance](#experimental-querying-of-any-bitcoin-balance)\r\n  - [Several test and under the hood improvements](#several-test-and-under-the-hood-improvements)\r\n- [Change log](#change-log)\r\n- [Credits](#credits)\r\n\r\n\r\nUpgrading and downgrading\r\n=========================\r\n\r\nHow to upgrade\r\n--------------\r\n\r\nIf you are running Bitcoin Core or an older version of Omni Core, shut it down. Wait until it has completely shut down, then copy the new version of `omnicored`, `omnicore-cli` and `omnicore-qt`. On Microsoft Windows the setup routine can be used to automate these steps.\r\n\r\nWhen upgrading from an older version than 0.8.0, the database of Omni Core is reconstructed, which can easily consume several hours. During the first startup historical Omni Layer transactions are reprocessed and Omni Core will not be usable for several hours up to more than a day. The progress of the initial scan is reported on the console, the GUI and written to the `debug.log`. The scan may be interrupted and can be resumed.\r\n\r\nUpgrading from 0.8.1 or 0.8.0 does not require a rescan and can be done very fast without interruption.\r\n\r\nDowngrading\r\n-----------\r\n\r\nDowngrading to an Omni Core version prior to 0.8.0 is not supported.\r\n\r\nCompatibility with Bitcoin Core\r\n-------------------------------\r\n\r\nOmni Core is based on Bitcoin Core 0.18.1 and can be used as replacement for Bitcoin Core. Switching between Omni Core and Bitcoin Core may be supported.\r\n\r\nHowever, it is not advised to upgrade or downgrade to versions other than Bitcoin Core 0.18. When switching to Omni Core, it may be necessary to reprocess Omni Layer transactions.\r\n\r\n\r\nImprovements\r\n============\r\n\r\nUse wrapped Segrated Witness scripts for new addresses\r\n------------------------------------------------------\r\n\r\nWhen using `getnewaddress` new addresses are generated with Segrated Witness scripts wrapped in P2SH. On mainnet, those addresses start with a `3` instead of `1`. This upgrade lowers transaction fees significantly and should not break integrations.\r\n\r\nIn case you need to fall back to the legacy address generation, please start Omni Core with `addresstype=legacy` configuration option.\r\n\r\n\r\nNew transactions to anchor arbitrary data\r\n-----------------------------------------\r\n\r\nTwo new transaction types were added to anchor arbitrary data on-chain. This allows the creation of overlay protocols on top of the Omni protocol, or can simply be used to store any form of data in the blockchain.\r\n\r\n**Example of sending and pulling data**\r\n\r\nSending the hex-encoded data `497420776f726b7321`:\r\n\r\n```bash\r\n$ omnicore-cli \"omni_sendanydata\" \"2N5bnBsaVdPBuK5xKCQ5ZTXnofBfwSxU2Th\" \"497420776f726b7321\"\r\n```\r\n```\r\n4c9776f28e7015e840a05cb0955c22fd6917cf264032ad694e5d1ee0d8ebf745\r\n```\r\n\r\nAfter a confirmation:\r\n\r\n```bash\r\n$ omnicore-cli \"omni_gettransaction\" \"4c9776f28e7015e840a05cb0955c22fd6917cf264032ad694e5d1ee0d8ebf745\"\r\n```\r\n```js\r\n{\r\n  \"txid\": \"4c9776f28e7015e840a05cb0955c22fd6917cf264032ad694e5d1ee0d8ebf745\",\r\n  \"fee\": \"0.00003240\",\r\n  \"sendingaddress\": \"2N5bnBsaVdPBuK5xKCQ5ZTXnofBfwSxU2Th\",\r\n  \"ismine\": true,\r\n  \"version\": 0,\r\n  \"type_int\": 200,\r\n  \"type\": \"Embed any data\",\r\n  \"data\": \"497420776f726b7321\",\r\n  \"valid\": true,\r\n  \"blockhash\": \"7c1e8be2c48fa6062b2b8ff6de7b2e1bc14b7d281d961979ed195a86399abd75\",\r\n  \"blocktime\": 1599469254,\r\n  \"positioninblock\": 1,\r\n  \"block\": 367,\r\n  \"confirmations\": 1\r\n}\r\n```\r\n\r\nFor more details, please see the descriptions of the new RPCs:\r\n\r\n- [omni_sendanydata](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#omni_sendanydata)\r\n- [omni_createpayload_anydata](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#omni_createpayload_anydata)\r\n\r\n\r\nExperimental querying of any Bitcoin balance\r\n--------------------------------------------\r\n\r\nA new optional database was added, which allows the user to query any Bitcoin balance or list transactions of any addresses. Please note, this feature is experimental and not enabled per default. To enable the new database, restart Omni Core with `experimental-btc-balances=1` configuration option.\r\n\r\n**When enabling both of these options, Omni Core creates a new database for Bitcoin balances. This step can take a very long time of up to multiple days on mainnet. More than 300 GB of additional disk space are required!**\r\n\r\nPlease see the descriptions of the new RPCs for more details:\r\n\r\n- [getaddresstxids](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddresstxids)\r\n- [getaddressdeltas](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddressdeltas)\r\n- [getaddressbalance](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddressbalance)\r\n- [getaddressutxos](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddressutxos)\r\n- [getaddressmempool](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#xxxxx)\r\n- [getblockhashes](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getblockhashes)\r\n- [getspentinfo](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getspentinfo)\r\n\r\n**Please also note, this feature is experimental and may provide inaccurate results.**\r\n\r\n\r\nSeveral test and under the hood improvements\r\n--------------------------------------------\r\n\r\nTo prepare Omni Core for Bitcoin Core 0.20+, OpenSSL was removed and replaced. OmniJ related tests were upgraded to use JDK 11. New tests for funded transactions were added and old bash tests were converted to the newer functional test framework. Additional checks and safe guards were implemented.\r\n\r\nThese changes improve the robustness and reliability of Omni Core.\r\n\r\n\r\nChange log\r\n==========\r\n\r\nThe following list includes relevant pull requests merged into this release:\r\n\r\n```\r\n- #1142 Remove OpenSSL usage from Omni source\r\n- #1146 Travis OmniJ tests: upgrade to JDK 11 (from JDK 8)\r\n- #1153 Check Omni token balance is consistent after reorg\r\n- #1155 Add tests for CreateFundedTransaction\r\n- #1159 Convert bash test scripts to functional test framework\r\n- #1163 Set default address type to P2SH_SEGWIT\r\n- #1166 Add new transaction type to embed any data\r\n- #1168 Support adding a receiver address for \"any data\" transactions\r\n- #1169 Avoid overflow on reindex with debug enabled\r\n- #1165 Add bitcore indexing\r\n- #1173 Bump version to 0.9.0\r\n- #1175 Add description for -experimental-btc-balances\r\n- #1179 Move lock to blockOnchainActive\r\n- #1177 Add documentation for address index RPCs\r\n- #1181 Return error, when using bitcore RPCs without addrindex\r\n- #1176 Add release notes for Omni Core 0.9.0\r\n```\r\n\r\n\r\nCredits\r\n=======\r\n\r\nThanks to everyone who contributed to this release, especially to Peter Bushnell.", "created_at": "2020-10-08T14:02:35Z", "project": "Omni (OMNI)", "currency": "usdt", "alias": "omni", "repo": "OmniLayer/omnicore", "type": "utxo", "hosting": "github", "explorer": "https://www.omniexplorer.info", "doc": "https://github.com/mpugach/docker_omnicored", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "0.6.4", "tag_name": "0.6.4", "html_url": "https://github.com/near/nearup/releases/tag/0.6.4", "repo_url": "https://github.com/near/nearup", "body": "", "created_at": "2020-10-05T15:29:17Z", "project": "NEAR (NEAR)", "currency": "near", "alias": "near", "repo": "near/nearup", "type": "near", "hosting": "github", "explorer": "https://explorer.near.org", "doc": "https://docs.near.org/docs/roles/validator/hardware", "api": "https://docs.near.org/docs/api/rpc", "add_time": "2020-10-10T09:00:00Z"}, {"name": "Neo CLI v2.12.2", "tag_name": "v2.12.2", "html_url": "https://github.com/neo-project/neo-node/releases/tag/v2.12.2", "repo_url": "https://github.com/neo-project/neo-node", "body": "**200G free disk space is needed and SSD is recommended. This is a stable version for v2.12**\r\n\r\n## **ChangeLog:**\r\n\r\n### Fixed\r\n- ([#neo-1967](https://github.com/neo-project/neo/pull/1967)) Check Reference before get NetworkFee\r\n- ([#neo-1957](https://github.com/neo-project/neo/pull/1957)) Fix GetStateRoots related\r\n\r\n### Optimized\r\n- ([#neo-1972](https://github.com/neo-project/neo/pull/1972)) Set block_received_time during CheckCommits\r\n- ([#neo-1955](https://github.com/neo-project/neo/pull/1955)) Optimize GetStateRootsPayload\r\n\r\nFile Hashes|\r\n------------|\r\nFile: neo-cli-portable.zip<br />SHA1: 886B7D70FB412C2A211B356CC34BF77FEA4742C3<br />SHA256: 7BF253DCD7ED544A6E077049C95B8FF7ECD0BF2CE7E52195A18FBBCB392666DF|\r\nFile: neo-cli-win-x64.zip<br />SHA1: 43561C58055A4C4B92B06119A7B84714C90D9693<br />SHA256: 483CBAB0DCA7436F3170F5CBBFEB701195358012B6C7DF27FED9A8E0CD28A346|\r\nFile: neo-cli-linux-x64.zip<br />SHA1: DEA3F16C8ADF82F4D2C6E0B4EBBF4FC7D8A1621D<br />SHA256: D13298A0F4A122332DE0583780921099E32F6B3987402D3981FAC6F2B44DE0B6|\r\nFile: neo-cli-osx-x64.zip<br />SHA1: BC6B05725CF03A211D0625BCF8B20B4497FB0F89<br />SHA256: EB48D752488C6703287FA7D3A16108A92F41DE6BCBEBDAC06D3FB3AB96AE238E|", "created_at": "2020-09-27T12:22:04Z", "project": "Neo (NEO)", "currency": "neo", "alias": "neo", "repo": "neo-project/neo-node", "type": "neo", "hosting": "github", "explorer": "https://neoscan.io", "explorer1": "https://neotracker.io", "explorer2": "https://explorer.o3.network", "doc": "https://docs.neo.org/docs/zh-cn/node/cli/setup.html", "api": "https://docs.neo.org/docs/zh-cn/reference/rpc/latest-version/api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Stafi v0.3.2", "tag_name": "v0.3.2", "html_url": "https://github.com/stafiprotocol/stafi-node/releases/tag/v0.3.2", "repo_url": "https://github.com/stafiprotocol/stafi-node", "body": "Priority: Medium (timely upgrade recommended)\r\n\r\nNative runtimes:\r\nStafi: 6\r\n\r\nThis release was tested against the following versions of rustc. Other versions may work.\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nrustc 1.48.0-nightly (0da580074 2020-09-22)\r\n\r\nChanges:\r\n1. Reduce transaction fees. Only a small fee is required to send a transaction. \r\n2. Tweak deposit costs. Reduce the amount of FIS that needs to be deposited, such as setting an identity, adding proxy etc. \r\n3. Bump Nominator Reward Limits. Increase max nominator rewarded per validator from 64 to 256. \r\n4. Add DefaultVote type for collective modules. \r\n5. Upgrade the underlying framework.\r\n", "created_at": "2020-09-26T07:18:14Z", "project": "StaFi (FIS)", "currency": "fis", "alias": "fis", "repo": "stafiprotocol/stafi-node", "type": "polkadot", "hosting": "github", "explorer": "https://stafi.subscan.io", "explorer1": "https://apps.stafi.io/#/explorer", "doc": "https://docs.stafi.io/validator-sv/run-a-node", "api": "https://docs.stafi.io/network-1/sitara-incentivized-testnet/stage-2/monitor-your-node-and-setup-automated-alerts#1-monitor-your-node", "add_time": "2020-11-16T11:00:00Z"}, {"name": "New Baleyworld v0.13.1", "tag_name": "NewBaleyworld_v0.13.1", "html_url": "https://github.com/PlatONnetwork/PlatON-Go/releases/tag/NewBaleyworld_v0.13.1", "repo_url": "https://github.com/PlatONnetwork/PlatON-Go", "body": "# md5sum\r\n\r\n| File    | md5sum | \r\n|:----------|:-------------|\r\n| platon-ubuntu-amd64-0.13.1.tar.gz | dd84e40ed9762e380db1953e70da4a81 |\r\n\r\n# Change Log\r\n\r\n- New features\r\n\r\n1. No longer mandatory to unstake when nodes ware slashed by low block production[PIP-11](https://github.com/PlatONnetwork/PIPs/blob/master/TestNet/PIP-11.md).\r\n2. The condition for zero block production times is changed from the default of 3 to 1[PIP-11](https://github.com/PlatONnetwork/PIPs/blob/master/TestNet/PIP-11.md).\r\n3. Special blocks, such as election blocks, settlement blocks are packaged and traded according to normal logic[#1461](https://github.com/PlatONnetwork/PlatON-Go/issues/1461).\r\n4. RLP coding optimization of WASM contract[#1449](https://github.com/PlatONnetwork/PlatON-Go/issues/1449).\r\n5. Add the txpool.cacheSize parameter, when a certain number of transactions are received, the transaction will be moved from queue to pending[#1469](https://github.com/PlatONnetwork/PlatON-Go/pull/1469).\r\n6. Adjust the default gasLimit of the block to 201600000 to increase the capacity of a single block[#1469](https://github.com/PlatONnetwork/PlatON-Go/pull/1469).\r\n7. When the block is executed, the 'from' is first obtained from txpool, if not, calculated it in parallel[#1469](https://github.com/PlatONnetwork/PlatON-Go/pull/1469).\r\n\r\n- Changes\r\n\r\n1. Synced some optimized content from go-ethereum.\r\n2. Built-in domain names of mainnet seed nodes and foundation nodes.\r\n3. Optimized the performance test plugin.\r\n\r\n- Bug Fixes\r\n\r\n1. Fixed an issue where wasm contract gas was calculated incorrectly[#1465](https://github.com/PlatONnetwork/PlatON-Go/issues/1465). \r\n2. Fixed an issue where the bls signature verification failed in the log[#1464](https://github.com/PlatONnetwork/PlatON-Go/issues/1464).\r\n3. Fixed the problem of view synchronization failure when memory forks[#1474](https://github.com/PlatONnetwork/PlatON-Go/pull/1474).", "created_at": "2020-09-22T03:06:47Z", "project": "Alaya (ATP)", "currency": "atp", "alias": "atp", "repo": "PlatONnetwork/PlatON-Go", "type": "platon", "hosting": "github", "explorer": "https://scan.alaya.network", "doc": "https://devdocs.alaya.network/alaya-devdocs/zh-CN/Install_Node/", "api": "https://devdocs.alaya.network/alaya-devdocs/zh-CN/Json_Rpc/", "add_time": "2020-11-06T11:00:00Z"}, {"name": "ycashd v2.1.1-6: Further Stability Improvements and Updated Expiry Block Height", "tag_name": "v2.1.1-6", "html_url": "https://github.com/ycashfoundation/ycash/releases/tag/v2.1.1-6", "repo_url": "https://github.com/ycashfoundation/ycash", "body": "This release incorporates an [upstream zcashd fix](https://github.com/zcash/zcash/pull/4690/commits) that fixes upstream [zcashd issue #4680](https://github.com/zcash/zcash/issues/4680).\r\n\r\nPrior versions versions of ycashd will expire at block height 837,088 (approximately October 27, 2020). You must upgrade to this new version before then in order to stay synced with the blockchain.\r\n\r\nThe new expiry block height is 1,051,092 (approximately November 4, 2021).", "created_at": "2020-09-10T19:56:10Z", "project": "Ycash (YEC)", "currency": "yec", "alias": "ycash", "repo": "ycashfoundation/ycash", "type": "utxo", "hosting": "github", "explorer": "https://yec.zcha.in/blocks", "doc": "https://zcash.readthedocs.io/en/latest/rtd_pages/user_guide.html", "api": "https://zcash-rpc.github.io", "add_time": "2019-12-01T00:00:00Z"}, {"name": "RSK Papyrus Release v2.1.0", "tag_name": "PAPYRUS-2.1.0", "html_url": "https://github.com/rsksmart/rskj/releases/tag/PAPYRUS-2.1.0", "repo_url": "https://github.com/rsksmart/rskj", "body": "This release contains performance improvements, bug fixes and security improvements. This is a summary of the changes included in this version:\r\n\r\n- Transaction relay improvements and handling of pending transactions fixes (#1266, #1134, #1253)\r\n- New persistent storage for logs bloom reduces execution times for _eth_getLogs_ method (#1208)\r\n- New command-line tools enable local export and import of blocks (see this [blog post](https://medium.com/@angeljavalopez/command-line-tools-for-rsk-node-565d53c240c1) for more info) (#1226)\r\n- Peer discovery now works for nodes behind NAT routers (#1262)\r\n- The _eth_compile_ family of methods has been removed (#1211)\r\n- Other performance improvements (#1227, #1285)\r\n\r\nYou can find a complete list of the changes introduced in [Papyrus 2.1.0 milestone](https://github.com/rsksmart/rskj/milestone/22).\r\n\r\nSHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):\r\necc4163c5292cef3b72580f07cfa30dae3996a95fc426ea09766a71e07d58918  rskj-core-2.1.0-PAPYRUS-all.jar", "created_at": "2020-09-02T21:17:03Z", "project": "DeFi (RIF)", "currency": "rif", "alias": "rskj", "repo": "rsksmart/rskj", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.rsk.co", "doc": "https://developers.rsk.co/rsk/node/install", "api": "https://developers.rsk.co/develop/json-rpc-api", "add_time": "2020-05-19T03:00:00Z"}, {"name": "rippled (XRP Ledger server) Version 1.6.0", "tag_name": "1.6.0", "html_url": "https://github.com/ripple/rippled/releases/tag/1.6.0", "repo_url": "https://github.com/ripple/rippled", "body": "This `rippled` 1.6.0 release introduces several new features including changes to the XRP Ledger's consensus mechanism to make it even more robust in adverse conditions, as well as numerous bug fixes and optimizations.\r\n \r\n**New and Improved Features**\r\n*  Initial implementation of Negative UNL functionality: This change can improve the liveness of the network during periods of network instability, by allowing servers to track which validators are temporarily offline and to adjust quorum calculations to match. This change requires an amendment, but the amendment is not in the 1.6.0 release. Ripple expects to run extensive public testing for Negative UNL functionality on the Devnet in the coming weeks. If public testing satisfies all requirements across security, reliability, stability, and performance, then the amendment could be included in a version 2.0 release. [#3380]\r\n*  Validation Hardening: This change allows servers to detect accidental misconfiguration of validators, as well as potentially Byzantine behavior by malicious validators. Servers can now log a message to notify operators if they detect a single validator issuing validations for multiple, incompatible ledger versions, or validations from multiple servers sharing a key. As part of this update, validators report the version of rippled they are using, as well as the hash of the last ledger they consider to be fully validated, in validation messages. [#3291] Amendment: Required\r\n*  Software Upgrade Monitoring & Notification: After the HardenedValidations amendment is enabled and the validators begin reporting the versions of rippled they are running, a server can check how many of the validators on its UNL run a newer version of the software than itself. If more than 60% of a server's validators are running a newer version, the server writes a message to notify the operator to consider upgrading their software. [#3447]\r\n*  Link Compression: Beginning with 1.6.0, server operators can enable support for compressing peer-to-peer messages. This can save bandwidth at a cost of higher CPU usage. This support is disabled by default and should prove useful for servers with a large number of peers. [#3287]\r\n*  Unconditionalize Amendments that were enabled in 2017: This change removes legacy code which the network has not used since 2017. This change limits the ability to replay ledgers that rely on the pre-2017 behavior. [#3292]\r\n*  New Health Check Method: Perform a simple HTTP request to get a summary of the health of the server: Healthy, Warning, or Critical. [#3365]\r\n*  Start work on API version 2. Version 2 of the API will be part of a future release. The first breaking change will be to consolidate several closely related error messages that can occur when the server is not synced into a single \"notSynced\" error message. [#3269]\r\n*  Improved shard concurrency: Improvements to the shard engine have helped reduce the lock scope on all public functions, increasing the concurrency of the code. [#3251]\r\n*  Default Port: In the config file, the [ips_fixed] and [ips] stanzas now use the IANA-assigned port for the XRP Ledger protocol (2459) when no port is specified. The connect API method also uses the same port by default. [#2861].\r\n*  Improve proposal and validation relaying. The peer-to-peer protocol always relays trusted proposals and validations (as part of the consensus process), but only relays untrusted proposals and validations in certain circumstances. This update adds configuration options so server operators can fine-tune how their server handles untrusted proposals and validations, and changes the default behavior to prioritize untrusted validations higher than untrusted proposals. [#3391]\r\n*  Various Build and CI Improvements including updates to RocksDB 6.7.3 [#3356], NuDB 2.0.3 [#3437], adjusting CMake settings so that rippled can be built as a submodule [#3449], and adding Travis CI settings for Ubuntu Bionic Beaver [#3319].\r\n*  Better documentation in the config file for online deletion and database tuning. [#3429]\r\n \r\n**Bug Fixes**\r\n*  Fix the 14 day timer to enable amendment to start at the correct quorum size [#3396]\r\nImprove online delete backend lock which addresses a possibility in the online delete process where one or more backend shared pointer references may become invalid during rotation. [#3342]\r\n*  Address an issue that can occur during the loading of validator tokens, where a deliberately malformed token could cause the server to crash during startup. [#3326]\r\n*  Add delivered amount to GetAccountTransactionHistory. The delivered_amount field was not being populated when calling GetAccountTransactionHistory. In contrast, the delivered_amount field was being populated when calling GetTransaction. This change populates delivered_amount in the response to GetAccountTransactionHistory, and adds a unit test to make sure the results delivered by GetTransaction and GetAccountTransactionHistory match each other. [#3370]\r\n*  Fix build issues for GCC 10 [#3393]\r\n*  Fix historical ledger acquisition - this fixes an issue where historical ledgers were acquired only since the last online deletion interval instead of the configured value to allow deletion.[#3369]\r\n*  Fix build issue with Docker #3416]\r\n*  Add Shard family. The App Family utilizes a single shared Tree Node and Full Below cache for all history shards. This can create a problem when acquiring a shard that shares an account state node that was recently cached from another shard operation. The new Shard Family class solves this issue by managing separate Tree Node and Full Below caches for each shard. #3448]\r\n*  Amendment table clean up which fixes a calculation issue with majority. #3428]\r\n*  Add the ledger_cleaner command to rippled command line help [#3305]\r\nVarious typo and comments fixes.", "created_at": "2020-08-18T22:33:02Z", "project": "XRP (XRP)", "currency": "xrp", "alias": "ripple", "repo": "ripple/rippled", "type": "utxo", "hosting": "github", "explorer": "https://xrpscan.com", "doc": "https://xrpl.org/install-rippled-on-ubuntu.html", "api": "https://xrpl.org/rippled-api.html", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Release - FIO v2.0.0", "tag_name": "v2.0.0", "html_url": "https://github.com/fioprotocol/fio/releases/tag/v2.0.0", "repo_url": "https://github.com/fioprotocol/fio", "body": "# Blockchain update\r\nA replay is required when updating to this release.\r\n\r\n## Upgrade required by Friday September 4th\r\nThis is a required upgrade to the blockchain code. All FIO API and History Nodes must be upgraded by **Friday September 4th**. Nodes that are not upgraded by that date will be forked from the updated FIO blockchain.\r\n# Enhancements and Updates\r\nThese features are included in the current fio release but may not be available until the corresponding features are also released in fio.contracts.\r\n\r\n(#217) Add final forking date to apply_context.cpp / chain_plugin\r\n\r\n(#73) FIP-2. Add get_fio_domains and get_fio_addresses endpoints with support for paging.\r\n\r\n(#95) FIP-3. Add ability to cancel a request for funds.\r\n* Adds a new status for a request for funds, to cancel a request for funds.\r\n* Modifies the get_sent_fio_requests to return cancelled requests along with the rest.\r\n* Modified the record_obt_data so that it no longer allows multiple status records to be associated with a request id.\r\n* Adds a new endpoint and contract action for cancel_funds_request.\r\n* Adds a new get endpoint get_cancelled_fio_requests, returning cancelled fio requests.\r\n\r\n(#96) FIP-4. Add ability to remove mapped public addresses. Adds new endpoints and fio.address actions for remove_pub_address remove_all_pub_address.\r\n\r\n(#35) Addresses issue #112. EOSIO 1.8.10-1.8.12 upgrade.\r\n\r\n(#118 / #119) Create /get_actor endpoint. Adds a new endpoint to the chain plugin called get_actor that takes as input fio public key and returns the actor for the specified public key.\r\n\r\n# V1 History Updates\r\nA resync is required for nodes running the V1 history plugin when upgrading to this release.\r\n\r\nSome of these updates may not be available until the corresponding features are also released in fio.contracts.\r\n\r\n(#120) FIO Support for History Plugin. Includes initial import of light history implementation from Greymass for FIO. \r\n\r\n(#129) Unlinkauth missing from action mapping. Addresses issue #128.", "created_at": "2020-08-12T16:59:58Z", "project": "FIO (FIO)", "currency": "fio", "alias": "fio", "repo": "fioprotocol/fio", "type": "eos", "hosting": "github", "explorer": "https://fio.bloks.io", "explorer1": "https://monitor.fioprotocol.io", "doc": "https://developers.fioprotocol.io/fio-chain/history", "api": "https://developers.fioprotocol.io/api/api-spec", "add_time": "2020-07-16T02:00:00Z"}, {"name": "v1.0.11", "tag_name": "v1.0.11", "html_url": "https://github.com/zvchain/zvchain/releases/tag/v1.0.11", "repo_url": "https://github.com/zvchain/zvchain", "body": "", "created_at": "2020-08-10T02:30:48Z", "project": "ZVCHAIN (ZVC)", "currency": "zvc", "alias": "zvchain", "repo": "zvchain/zvchain", "type": "zvchain", "hosting": "github", "explorer": "https://explorer.zvchain.io", "doc": "https://github.com/zvchain/zvchain/wiki/miner_operation_zh#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C", "doc1": "https://github.com/zvchain/zvchain/wiki/rpc_api_zh#RPC%E6%9C%8D%E5%8A%A1", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v2.1.0", "tag_name": "v2.1.0", "html_url": "https://github.com/ontio/ontology/releases/tag/v2.1.0", "repo_url": "https://github.com/ontio/ontology", "body": "\r\ncurrently running on **testnet** and **mainnet**.\r\n\r\n### Notices\r\n* **All nodes** need to be upgraded\r\n\r\n### New Features\r\n* update new peer cost param.\r\n\r\n### Improvement and Bug fix\r\n* fix data race in conensus, p2p, txpool, log module.\r\n* fix verify header error in cross chain contract.\r\n\r\n### Breaking Changes\r\n\r\n\r\n### md5sum\r\nFile| md5sum\r\n------------ | -------------\r\nontology-linux-amd64 | cbeb9aee0343673447cc82a3c7a6a223\r\ntool-linux.zip | 9c4f54b55945ebbde8c603079869cb76\r\nontology-darwin-amd64 | 82650c1ca024280166a3bdc7c9e2e975\r\ntool-darwin.zip | b2e665086249569178c1def0db40562f\r\n\r\n\r\n### Change Log Since v2.1.0\r\n* update height and abi file (#1269)\r\n* update new peer cost (#1266)\r\n* fix log data race (#1263)\r\n* output remote peer height and version in subnet. (#1262)\r\n* fix data race in vbft module (#1259)\r\n* fix findKeyHeight bug of VerifyHeader (#1243)\r\n* support timer param update (#1261)\r\n* add more subnet log message (#1257)\r\n* reduce peer state log, do logging in ticker (#1255)\r\n* fix verify header vbft peerinfo data race (#1253)\r\n* fix data race in p2p and txnpool (#1248)\r\n* update serviceJson struct (#1251)\r\n* Fix data race in consensus module (#1250)\r\n\r\n\r\n\r\n", "created_at": "2020-08-06T11:35:19Z", "project": "Ontology (ONT)", "currency": "ont", "alias": "ontology", "repo": "ontio/ontology", "type": "utxo", "hosting": "github", "explorer": "https://explorer.ont.io", "doc": "https://docs.ont.io/ontology-node/node-deployment", "api": "https://docs.ont.io/developer-tools/api/http-api/restful", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/telosnetwork/node-template", "repo_url": "https://github.com/telosnetwork/node-template", "body": "", "created_at": "2020-08-06T06:00:00Z", "project": "Teloscoin (TELOS)", "currency": "telos", "alias": "tlos", "repo": "telosnetwork/node-template", "type": "eos", "hosting": "github", "explorer": "https://telos.bloks.io", "doc": "https://docs.telos.net/developers/platform/overview/platform_and_toolchain#nodeos", "api": "https://developers.eos.io/welcome/latest/reference/nodeos-rpc-api-reference/", "add_time": "2020-08-06T06:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/meterio/meter-go", "repo_url": "https://github.com/meterio/meter-go", "body": "", "created_at": "2020-07-16T02:00:00Z", "project": "Meter (MTR)", "currency": "mtr", "alias": "meter", "repo": "meterio/meter-go", "type": "meter", "hosting": "github", "explorer": "https://scan.meter.io", "doc": "https://github.com/meterio/mainnet_docs", "api": "https://docs.meter.io/meterify.html#meterify", "api1": "https://mainnet.meter.io:8667", "add_time": "2020-07-16T02:00:00Z"}, {"name": "BOSCore v3.0.9 Release Notes", "tag_name": "v3.0.9", "html_url": "https://github.com/boscore/bos/releases/tag/v3.0.9", "repo_url": "https://github.com/boscore/bos", "body": "<!-- PLEASE FILL OUT THE FOLLOWING MARKDOWN TEMPLATE -->\r\n<!-- Give your PR a title that is sufficient to understand what is being changed. -->\r\n\r\n## Change Description\r\nAdd account query db, link to EOSIO [feature](https://github.com/EOSIO/eos/pull/8899). resolve: #159 \r\n\r\n<!-- Describe the change you made, the motivation for it, and the impact it will have. Reference issues or pull requests where possible (use '#XX' or 'GH-XX' where XX is the issue or pull request number). -->\r\n\r\n## Consensus Changes\r\n\r\n<!-- If this PR introduces a change to the validation of blocks in the chain or consensus in general, please describe the impact. -->\r\n\r\n\r\n## API Changes\r\n\r\n```bash\r\n$ curl http://127.0.0.1:8888/v1/chain/get_accounts_by_authorizers -d '{\"keys\":[\"EOS...\"]}' 2>/dev/null | jq '[.accounts[].account_name] | unique'\r\n```\r\n\r\n```bash\r\n$ curl http://127.0.0.1:8888/v1/chain/get_accounts_by_authorizers -d '{\"accounts\":[\"alice\"]}' 2>/dev/null | jq '[.accounts[].account_name] | unique'\r\n```\r\n\r\n<!-- If this PR introduces API changes, please describe the changes here. What will developers need to know before upgrading to this version? -->\r\n\r\n\r\n## Documentation Additions\r\n\r\n## --enable-account-queries\r\n*default: false*\r\n\r\nBoolean that indicates whether the Account Query DB should be initialized at start-up and maintained for the life of this instance. if set to true then the RPC endpoint for `/v1/chain/get_accounts_by_authorizers` will be registered otherwise it will not be present and requests to that endpoint will return `404` errors.\r\n\r\n## Others\r\n\r\nDocker image: boscore/bos:v3.0.9\r\n\r\nFor Ubuntu, SW/eden [APT](https://eosswedenorg.github.io/apt/bos) source can be used:\r\n```\r\nsudo apt-get install software-properties-common\r\ncurl https://apt.eossweden.org/key 2> /dev/null | sudo apt-key add -\r\nsudo apt-add-repository -y 'deb [arch=amd64] https://apt.eossweden.org/bos `lsb_release -cs` stable' \r\nsudo apt-get update\r\nsudo apt-get install bos-mv-309\r\n```\r\n", "created_at": "2020-06-15T07:03:15Z", "project": "BOSCore (BOS)", "currency": "bos", "alias": "bos", "repo": "boscore/bos", "type": "eos", "hosting": "github", "explorer": "https://bos.bloks.io", "explorer1": "https://bos.eosx.io", "doc": "https://www.bcskill.com/index.php/archives/631.html", "api": "https://developers.eos.io/manuals/eos/latest/nodeos/rpc_apis/index/", "add_time": "2020-12-24T08:00:00Z"}, {"name": "Litecoin Core v0.18.1", "tag_name": "v0.18.1", "html_url": "https://github.com/litecoin-project/litecoin/releases/tag/v0.18.1", "repo_url": "https://github.com/litecoin-project/litecoin", "body": "# Litecoin Core v0.18.1 Release\r\n\r\n*Follow our\u00a0*[*Twitter*](https://twitter.com/litecoinproject)*\u00a0for the latest dev news.*\r\n\r\nWe are pleased to release Litecoin Core 0.18.1. This is a new major version release, including new features, various bugfixes and performance improvements, as well as updated translations. It is recommended for all users to upgrade to this version.\r\n\r\nHow to Upgrade\r\n==============\r\n\r\nIf you are running an older version, shut it down. Wait until it has completely shut down (which might take a few minutes for older versions), then run the installer (on Windows) or just copy over\u00a0`/Applications/Litecoin-Qt`\u00a0(on Mac) or\u00a0`litecoind`/`litecoin-qt`\u00a0(on Linux).\r\n\r\nThe first time you run version 0.15.0 or newer, your chainstate database will be converted to a new format, which will take anywhere from a few minutes to half an hour, depending on the speed of your machine.\r\n\r\nNote that the block database format also changed in version 0.8.0 and there is no automatic upgrade code from before version 0.8 to version 0.15.0 or later. Upgrading directly from 0.7.x and earlier without redownloading the blockchain is not supported. However, as usual, old wallet versions are still supported.\r\n\r\nCompatibility\r\n=============\r\n\r\nLitecoin Core is supported and extensively tested on operating systems using the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended to use Litecoin Core on unsupported systems.\r\n\r\nLitecoin Core should also work on most other Unix-like systems but is not as frequently tested on them.\r\n\r\nFrom 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is built using Qt 5.9.x, which doesn't support versions of macOS older than 10.10. Additionally, Litecoin Core does not yet change appearance when macOS \"dark mode\" is activated.\r\n\r\nIn addition to previously-supported CPU platforms, this release's pre-compiled distribution also provides binaries for the RISC-V platform.\r\n\r\nKnown issues\r\n============\r\n\r\nWallet GUI\r\n----------\r\n\r\nFor advanced users who have both (1) enabled coin control features, and (2) are using multiple wallets loaded at the same time: The coin control input selection dialog can erroneously retain wrong-wallet state when switching wallets using the dropdown menu. For now, it is recommended not to use coin control features with multiple wallets loaded.\r\n\r\nNotable changes\r\n===============\r\n\r\nMining\r\n------\r\n\r\n-   Calls to\u00a0`getblocktemplate`\u00a0will fail if the segwit rule is not specified. Calling\u00a0`getblocktemplate`\u00a0without segwit specified is almost certainly a misconfiguration since doing so results in lower rewards for the miner. Failed calls will produce an error message describing how to enable the segwit rule.\r\n\r\nConfiguration option changes\r\n----------------------------\r\n\r\n-   A warning is printed if an unrecognized section name is used in the configuration file. Recognized sections are\u00a0`[test]`,\u00a0`[main]`, and\u00a0`[regtest]`.\r\n-   Four new options are available for configuring the maximum number of messages that ZMQ will queue in memory (the \"high water mark\") before dropping additional messages. The default value is 1,000, the same as was used for previous releases. See the\u00a0[ZMQ documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/zmq.md#usage)\u00a0for details.\r\n-   The\u00a0`rpcallowip`\u00a0option can no longer be used to automatically listen on all network interfaces. Instead, the\u00a0`rpcbind`\u00a0parameter must be used to specify the IP addresses to listen on. Listening for RPC commands over a public network connection is insecure and should be disabled, so a warning is now printed if a user selects such a configuration. If you need to expose RPC in order to use a tool like Docker, ensure you only bind RPC to your localhost, e.g.\u00a0`docker run [...] -p 127.0.0.1:9332:9332`\u00a0(this is an extra\u00a0`:9332`\u00a0over the normal Docker port specification).\r\n-   The\u00a0`rpcpassword`\u00a0option now causes a startup error if the password set in the configuration file contains a hash character (#), as it's ambiguous whether the hash character is meant for the password or as a comment.\r\n-   The\u00a0`whitelistforcerelay`\u00a0option is used to relay transactions from whitelisted peers even when not accepted to the mempool. This option now defaults to being off, so that changes in policy and disconnect/ban behavior will not cause a node that is whitelisting another to be dropped by peers. Users can still explicitly enable this behavior with the command line option (and may want to consider\u00a0[contacting](mailto:contact@litecoin.org)\u00a0the Litecoin Core project to let us know about their use-case, as this feature could be deprecated in the future).\r\n\r\nWallet changes\r\n==============\r\n\r\nWhen creating a transaction with a fee above\u00a0`-maxtxfee`\u00a0(default 0.1 LTC), the RPC commands\u00a0`walletcreatefundedpsbt`\u00a0and\u00a0`fundrawtransaction`\u00a0will now fail instead of rounding down the fee. Beware that the\u00a0`feeRate`\u00a0argument is specified in LTC per kilobyte, not litoshi per byte.\r\n\r\nDocumentation\r\n=============\r\n\r\n-   A new short\u00a0[document](https://github.com/litecoin-project/litecoin/blob/master/doc/JSON-RPC-interface.md)\u00a0about the JSON-RPC interface describes cases where the results of an RPC might contain inconsistencies between data sourced from different subsystems, such as wallet state and mempool state. A note is added to the\u00a0[REST interface documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/REST-interface.md)\u00a0indicating that the same rules apply.\r\n-   Further information is added to the\u00a0[JSON-RPC documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/JSON-RPC-interface.md)\u00a0about how to secure this interface.\r\n-   A new\u00a0[document](https://github.com/litecoin-project/litecoin/blob/master/doc/litecoin-conf.md)\u00a0about the\u00a0`litecoin.conf`\u00a0file describes how to use it to configure Litecoin Core.\r\n-   A new document introduces Litecoin Core's BIP174\u00a0[Partially-Signed Litecoin Transactions (PSBT)](https://github.com/litecoin-project/litecoin/blob/master/doc/psbt.md)\u00a0interface, which is used to allow multiple programs to collaboratively work to create, sign, and broadcast new transactions. This is useful for offline (cold storage) wallets, multisig wallets, coinjoin implementations, and many other cases where two or more programs need to interact to generate a complete transaction.\r\n-   The\u00a0[output script descriptor](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md)\u00a0documentation has been updated with information about new features in this still-developing language for describing the output scripts that a wallet or other program wants to receive notifications for, such as which addresses it wants to know received payments. The language is currently used in multiple new and updated RPCs described in these release notes and is expected to be adapted to other RPCs and to the underlying wallet structure.\r\n\r\nBuild system changes\r\n====================\r\n\r\n-   A new\u00a0`--disable-bip70`\u00a0option may be passed to\u00a0`./configure`\u00a0to prevent Litecoin-Qt from being built with support for the BIP70 payment protocol or from linking libssl. As the payment protocol has exposed Litecoin Core to libssl vulnerabilities in the past, builders who don't need BIP70 support are encouraged to use this option to reduce their exposure to future vulnerabilities.\r\n-   The minimum required version of Qt (when building the GUI) has been increased from 5.2 to 5.5.1 (the\u00a0[depends system](https://github.com/litecoin-project/litecoin/blob/master/depends/README.md)\u00a0provides 5.9.7)\r\n\r\nNew RPCs\r\n========\r\n\r\n-   `getnodeaddresses`\u00a0returns peer addresses known to this node. It may be used to find nodes to connect to without using a DNS seeder.\r\n-   `listwalletdir`\u00a0returns a list of wallets in the wallet directory (either the default wallet directory or the directory configured by the\u00a0`-walletdir`\u00a0parameter).\r\n-   `getrpcinfo`\u00a0returns runtime details of the RPC server. At the moment, it returns an array of the currently active commands and how long they've been running.\r\n-   `deriveaddresses`\u00a0returns one or more addresses corresponding to an\u00a0[output descriptor](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md).\r\n-   `getdescriptorinfo`\u00a0accepts a descriptor and returns information about it, including its computed checksum.\r\n-   `joinpsbts`\u00a0merges multiple distinct PSBTs into a single PSBT. The multiple PSBTs must have different inputs. The resulting PSBT will contain every input and output from all of the PSBTs. Any signatures provided in any of the PSBTs will be dropped.\r\n-   `analyzepsbt`\u00a0examines a PSBT and provides information about what the PSBT contains and the next steps that need to be taken in order to complete the transaction. For each input of a PSBT,\u00a0`analyzepsbt`\u00a0provides information about what information is missing for that input, including whether a UTXO needs to be provided, what pubkeys still need to be provided, which scripts need to be provided, and what signatures are still needed. Every input will also list which role is needed to complete that input, and\u00a0`analyzepsbt`\u00a0will also list the next role in general needed to complete the PSBT.\u00a0`analyzepsbt`\u00a0will also provide the estimated fee rate and estimated virtual size of the completed transaction if it has enough information to do so.\r\n-   `utxoupdatepsbt`\u00a0searches the set of Unspent Transaction Outputs (UTXOs) to find the outputs being spent by the partial transaction. PSBTs need to have the UTXOs being spent to be provided because the signing algorithm requires information from the UTXO being spent. For segwit inputs, only the UTXO itself is necessary. For non-segwit outputs, the entire previous transaction is needed so that signers can be sure that they are signing the correct thing. Unfortunately, because the UTXO set only contains UTXOs and not full transactions,\u00a0`utxoupdatepsbt`\u00a0will only add the UTXO for segwit inputs.\r\n\r\nUpdated RPCs\r\n============\r\n\r\nNote: some low-level RPC changes mainly useful for testing are described in the Low-level Changes section below.\r\n\r\n-   `getpeerinfo`\u00a0now returns an additional\u00a0`minfeefilter`\u00a0field set to the peer's BIP133 fee filter. You can use this to detect that you have peers that are willing to accept transactions below the default minimum relay fee.\r\n-   The mempool RPCs, such as\u00a0`getrawmempool`\u00a0with\u00a0`verbose=true`, now return an additional \"bip125-replaceable\" value indicating whether the transaction (or its unconfirmed ancestors) opts-in to asking nodes and miners to replace it with a higher-feerate transaction spending any of the same inputs.\r\n-   `settxfee`\u00a0previously silently ignored attempts to set the fee below the allowed minimums. It now prints a warning. The special value of \"0\" may still be used to request the minimum value.\r\n-   `getaddressinfo`\u00a0now provides an\u00a0`ischange`\u00a0field indicating whether the wallet used the address in a change output.\r\n-   `importmulti`\u00a0has been updated to support P2WSH, P2WPKH, P2SH-P2WPKH, and P2SH-P2WSH. Requests for P2WSH and P2SH-P2WSH accept an additional\u00a0`witnessscript`\u00a0parameter.\r\n-   `importmulti`\u00a0now returns an additional\u00a0`warnings`\u00a0field for each request with an array of strings explaining when fields are being ignored or are inconsistent, if there are any.\r\n-   `getaddressinfo`\u00a0now returns an additional\u00a0`solvable`\u00a0boolean field when Litecoin Core knows enough about the address's scriptPubKey, optional redeemScript, and optional witnessScript in order for the wallet to be able to generate an unsigned input spending funds sent to that address.\r\n-   The\u00a0`getaddressinfo`,\u00a0`listunspent`, and\u00a0`scantxoutset`\u00a0RPCs now return an additional\u00a0`desc`\u00a0field that contains an output descriptor containing all key paths and signing information for the address (except for the private key). The\u00a0`desc`\u00a0field is only returned for\u00a0`getaddressinfo`\u00a0and\u00a0`listunspent`\u00a0when the address is solvable.\r\n-   `importprivkey`\u00a0will preserve previously-set labels for addresses or public keys corresponding to the private key being imported. For example, if you imported a watch-only address with the label \"cold wallet\" in earlier releases of Litecoin Core, subsequently importing the private key would default to resetting the address's label to the default empty-string label (\"\"). In this release, the previous label of \"cold wallet\" will be retained. If you optionally specify any label besides the default when calling\u00a0`importprivkey`, the new label will be applied to the address.\r\n-   See the\u00a0[Mining](https://github.com/litecoin-project/litecoin/blob/v0.18.1rc1/doc/release-notes-litecoin.md#mining)\u00a0section for changes to\u00a0`getblocktemplate`.\r\n-   `getmininginfo`\u00a0now omits\u00a0`currentblockweight`\u00a0and\u00a0`currentblocktx`\u00a0when a block was never assembled via RPC on this node.\r\n-   The\u00a0`getrawtransaction`\u00a0RPC & REST endpoints no longer check the unspent UTXO set for a transaction. The remaining behaviors are as follows: 1. If a blockhash is provided, check the corresponding block. 2. If no blockhash is provided, check the mempool. 3. If no blockhash is provided but txindex is enabled, also check txindex.\r\n-   `unloadwallet`\u00a0is now synchronous, meaning it will not return until the wallet is fully unloaded.\r\n-   `importmulti`\u00a0now supports importing of addresses from descriptors. A \"desc\" parameter can be provided instead of the \"scriptPubKey\" in a request, as well as an optional range for ranged descriptors to specify the start and end of the range to import. Descriptors with key origin information imported through\u00a0`importmulti`\u00a0will have their key origin information stored in the wallet for use with creating PSBTs. More information about descriptors can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md).\r\n-   `listunspent`\u00a0has been modified so that it also returns\u00a0`witnessScript`, the witness script in the case of a P2WSH or P2SH-P2WSH output.\r\n-   `createwallet`\u00a0now has an optional\u00a0`blank`\u00a0argument that can be used to create a blank wallet. Blank wallets do not have any keys or HD seed. They cannot be opened in software older than 0.18. Once a blank wallet has a HD seed set (by using\u00a0`sethdseed`) or private keys, scripts, addresses, and other watch only things have been imported, the wallet is no longer blank and can be opened in 0.17.x. Encrypting a blank wallet will also set a HD seed for it.\r\n\r\nDeprecated or removed RPCs\r\n==========================\r\n\r\n-   `signrawtransaction`\u00a0is removed after being deprecated and hidden behind a special configuration option in version 0.17.0.\r\n-   The 'account' API is removed after being deprecated in v0.17. The 'label' API was introduced in v0.17 as a replacement for accounts. See the\u00a0[release notes from v0.17](https://github.com/litecoin-project/litecoin/blob/master/doc/release-notes/release-notes-0.17.0.md#label-and-account-apis-for-wallet)\u00a0for a full description of the changes from the 'account' API to the 'label' API.\r\n-   `addwitnessaddress`\u00a0is removed after being deprecated in version 0.16.0.\r\n-   `generate`\u00a0is deprecated and will be fully removed in a subsequent major version. This RPC is only used for testing, but its implementation reached across multiple subsystems (wallet and mining), so it is being deprecated to simplify the wallet-node interface. Projects that are using\u00a0`generate`\u00a0for testing purposes should transition to using the\u00a0`generatetoaddress`\u00a0RPC, which does not require or use the wallet component. Calling\u00a0`generatetoaddress`\u00a0with an address returned by the\u00a0`getnewaddress`\u00a0RPC gives the same functionality as the old\u00a0`generate`\u00a0RPC. To continue using\u00a0`generate`\u00a0in this version, restart litecoind with the\u00a0`-deprecatedrpc=generate`\u00a0configuration option.\r\n-   Be reminded that parts of the\u00a0`validateaddress`\u00a0command have been deprecated and moved to\u00a0`getaddressinfo`. The following deprecated fields have moved to\u00a0`getaddressinfo`:\u00a0`ismine`,\u00a0`iswatchonly`,\u00a0`script`,\u00a0`hex`,\u00a0`pubkeys`,\u00a0`sigsrequired`,\u00a0`pubkey`,\u00a0`embedded`,\u00a0`iscompressed`,\u00a0`label`,\u00a0`timestamp`,\u00a0`hdkeypath`,\u00a0`hdmasterkeyid`.\r\n-   The\u00a0`addresses`\u00a0field has been removed from the\u00a0`validateaddress`\u00a0and\u00a0`getaddressinfo`\u00a0RPC methods. This field was confusing since it referred to public keys using their P2PKH address. Clients should use the\u00a0`embedded.address`\u00a0field for P2SH or P2WSH wrapped addresses, and\u00a0`pubkeys`\u00a0for inspecting multisig participants.\r\n\r\nREST changes\r\n============\r\n\r\n-   A new\u00a0`/rest/blockhashbyheight/`\u00a0endpoint is added for fetching the hash of the block in the current best blockchain based on its height (how many blocks it is after the Genesis Block).\r\n\r\nGraphical User Interface (GUI)\r\n==============================\r\n\r\n-   A new Window menu is added alongside the existing File, Settings, and Help menus. Several items from the other menus that opened new windows have been moved to this new Window menu.\r\n-   In the Send tab, the checkbox for \"pay only the required fee\" has been removed. Instead, the user can simply decrease the value in the Custom Feerate field all the way down to the node's configured minimum relay fee.\r\n-   In the Overview tab, the watch-only balance will be the only balance shown if the wallet was created using the\u00a0`createwallet`\u00a0RPC and the\u00a0`disable_private_keys`\u00a0parameter was set to true.\r\n-   The launch-on-startup option is no longer available on macOS if compiled with macosx min version greater than 10.11 (use CXXFLAGS=\"-mmacosx-version-min=10.11\" CFLAGS=\"-mmacosx-version-min=10.11\" for setting the deployment sdk version)\r\n\r\nTools\r\n=====\r\n\r\n-   A new\u00a0`litecoin-wallet`\u00a0tool is now distributed alongside Litecoin Core's other executables. Without needing to use any RPCs, this tool can currently create a new wallet file or display some basic information about an existing wallet, such as whether the wallet is encrypted, whether it uses an HD seed, how many transactions it contains, and how many address book entries it has.\r\n\r\nPlanned changes\r\n===============\r\n\r\nThis section describes planned changes to Litecoin Core that may affect other Litecoin software and services.\r\n\r\n-   Since version 0.16.0, Litecoin Core's built-in wallet has defaulted to generating P2SH-wrapped segwit addresses when users want to receive payments. These addresses are backwards compatible with all widely-used software. Starting with Litecoin Core 0.20, Litecoin Core will default to native segwit addresses (bech32) that provide additional fee savings and other benefits. Currently, many wallets and services already support sending to bech32 addresses, and if the Litecoin Core project sees enough additional adoption, it will instead default to bech32 receiving addresses in Litecoin Core 0.20. P2SH-wrapped segwit addresses will continue to be provided if the user requests them in the GUI or by RPC, and anyone who doesn't want the update will be able to configure their default address type. (Similarly, pioneering users who want to change their default now may set the\u00a0`addresstype=bech32`\u00a0configuration option in any Litecoin Core release from 0.16.0 up.)\r\n\r\nDeprecated P2P messages\r\n=======================\r\n\r\n-   BIP 61 reject messages are now deprecated. Reject messages have no use case on the P2P network and are only logged for debugging by most network nodes. Furthermore, they increase bandwidth and can be harmful for privacy and security. It has been possible to disable BIP 61 messages since v0.17 with the\u00a0`-enablebip61=0`\u00a0option. BIP 61 messages will be disabled by default in a future version, before being removed entirely.\r\n\r\nLow-level changes\r\n=================\r\n\r\nThis section describes RPC changes mainly useful for testing, mostly not relevant in production. The changes are mentioned for completeness.\r\n\r\nRPC\r\n===\r\n\r\n-   The\u00a0`submitblock`\u00a0RPC previously returned the reason a rejected block was invalid the first time it processed that block, but returned a generic \"duplicate\" rejection message on subsequent occasions it processed the same block. It now always returns the fundamental reason for rejecting an invalid block and only returns \"duplicate\" for valid blocks it has already accepted.\r\n-   A new\u00a0`submitheader`\u00a0RPC allows submitting block headers independently from their block. This is likely only useful for testing.\r\n-   The\u00a0`signrawtransactionwithkey`\u00a0and\u00a0`signrawtransactionwithwallet`\u00a0RPCs have been modified so that they also optionally accept a\u00a0`witnessScript`, the witness script in the case of a P2WSH or P2SH-P2WSH output. This is compatible with the change to\u00a0`listunspent`.\r\n-   For the\u00a0`walletprocesspsbt`\u00a0and\u00a0`walletcreatefundedpsbt`\u00a0RPCs, if the\u00a0`bip32derivs`\u00a0parameter is set to true but the key metadata for a public key has not been updated yet, then that key will have a derivation path as if it were just an independent key (i.e. no derivation path and its master fingerprint is itself).\r\n\r\nConfiguration\r\n=============\r\n\r\n-   The\u00a0`-usehd`\u00a0configuration option was removed in version 0.16. From that version onwards, all new wallets created are hierarchical deterministic wallets. This release makes specifying\u00a0`-usehd`\u00a0an invalid configuration option.\r\n\r\nNetwork\r\n=======\r\n\r\n-   This release allows peers that your node automatically disconnected for misbehavior (e.g. sending invalid data) to reconnect to your node if you have unused incoming connection slots. If your slots fill up, a misbehaving node will be disconnected to make room for nodes without a history of problems (unless the misbehaving node helps your node in some other way, such as by connecting to a part of the Internet from which you don't have many other peers). Previously, Litecoin Core banned the IP addresses of misbehaving peers for a period of time (default of 1 day); this was easily circumvented by attackers with multiple IP addresses. If you manually ban a peer, such as by using the\u00a0`setban`\u00a0RPC, all connections from that peer will still be rejected.\r\n\r\nWallet\r\n======\r\n\r\n-   The key metadata will need to be upgraded the first time that the HD seed is available. For unencrypted wallets this will occur on wallet loading. For encrypted wallets this will occur the first time the wallet is unlocked.\r\n-   Newly encrypted wallets will no longer require restarting the software. Instead such wallets will be completely unloaded and reloaded to achieve the same effect.\r\n-   A sub-project of Litecoin Core now provides Hardware Wallet Interaction (HWI) scripts that allow command-line users to use several popular hardware key management devices with Litecoin Core. See their\u00a0[project page](https://github.com/bitcoin-core/HWI#readme)\u00a0for details.\r\n\r\nSecurity\r\n========\r\n\r\n-   This release changes the Random Number Generator (RNG) used from OpenSSL to Litecoin Core's own implementation, although entropy gathered by Litecoin Core is fed out to OpenSSL and then read back in when the program needs strong randomness. This moves Litecoin Core a little closer to no longer needing to depend on OpenSSL, a dependency that has caused security issues in the past. The new implementation gathers entropy from multiple sources, including from hardware supporting the rdseed CPU instruction.\r\n\r\nChanges for particular platforms\r\n================================\r\n\r\n-   On macOS, Litecoin Core now opts out of application CPU throttling (\"app nap\") during initial blockchain download, when catching up from over 100 blocks behind the current chain tip, or when reindexing chain data. This helps prevent these operations from taking an excessively long time because the operating system is attempting to conserve power.\r\n\r\nDownload Binaries\r\n=================\r\n\r\nTo download, please visit the download page\u00a0[here](https://litecoin.org/). Alternatively, you can view the download folder\u00a0[here](https://download.litecoin.org/litecoin-0.18.1/).\r\n\r\nPlease use GPG to verify the integrity of the release binaries. This ensures that the binary you have downloaded has not been tampered with. Linux, MacOS and Win32 cygwin command line GPG instructions are available\u00a0[here](https://download.litecoin.org/README-HOWTO-GPG-VERIFY-TEAM-MEMBERS-KEY.txt). Please also note that we GPG sign the binaries as a convenience to you, the ultimate way to verify the integrity of the builds is to build them yourself using Gitian. Instructions on how to perform these builds, can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/master/doc/gitian-building.md).\r\n\r\nFor this release, the binaries have been signed with key identifier\u00a0[FE3348877809386C\u00a0](https://pgp.mit.edu/pks/lookup?op=get&search=0xFE3348877809386C)(thrasher's key).\r\n\r\nWARNING\r\n=======\r\n\r\nDespite this version being heavily tested, this version may still contain bugs. Always backup your wallet.dat file before upgrading. If you encounter any issues, please let us know by posting to the bug reporting section below.\r\n\r\nSource code & Build instructions\r\n================================\r\n\r\nThe master branch contains the latest commits to the next stable releases of Litecoin Core.\r\n\r\nhttps://github.com/litecoin-project/litecoin/commits/master\r\n\r\nBuild instructions for Linux can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-unix.md).\r\n\r\nBuild instructions for OSX can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-osx.md).\r\n\r\nBuilds instructions for Windows can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-windows.md).\r\n\r\nBug Reporting\r\n=============\r\n\r\nSubmit any issues you encounter here and one of the Litecoin developers will assist you.\r\n\r\nhttps://github.com/litecoin-project/litecoin/issues\r\n\r\nMailing Lists\r\n=============\r\n\r\nSign up for announcements only or development discussion.\r\n\r\nhttps://groups.google.com/forum/#!forum/litecoin-announce\r\nhttps://groups.google.com/forum/#!forum/litecoin-dev\r\n\r\nHashes for verification\r\n=======================\r\n\r\nThese are the SHA-256 hashes of the released files:\r\n\r\ne0bdd4aa81502551a0c5abcfaae52c8bbaf4a980548aa6c91053643d81924b51  litecoin-0.18.1-aarch64-linux-gnu.tar.gz59b73bc8f034208295634da56a175d74668b07613cf6484653cb467deafb1d52  litecoin-0.18.1-arm-linux-gnueabihf.tar.gz0a2788d58bd22c3754927e216bf18c64145b9fdc0d709f3f49ba3040b876a066  litecoin-0.18.1-i686-pc-linux-gnu.tar.gz4ce590ecbaecaced7253473bc574a2b70527c9aeb3a3ab33a843ea1c9caf0c86  litecoin-0.18.1-osx64.tar.gzb81d9101c6ecb38b7699cf3d05ab57df7922f40f23c8a3377750c335d7102266  litecoin-0.18.1-osx.dmge5585eaff887b9d3de9f14230db0375b858e5cccc571bdb909dfc337d5bd357c  litecoin-0.18.1-riscv64-linux-gnu.tar.gz6dfa71ccf059463f0a304f85ff1ca8b88039d63e93269d6f056ab24915be936d  litecoin-0.18.1.tar.gz778eac92953d82a3b2e0cdc925e7da9103edd0d9a9ffa151c3c7cc79b9814091  litecoin-0.18.1-win32-setup.exe39d02e463893c970f92ed5ffcb603a1a7b2e2dacdaea306e8526414af841d247  litecoin-0.18.1-win32.zipbd38a1d5d4ac1ca4246f9534032a369b0f3cd38fb2aa82c66010642fa72e65f7  litecoin-0.18.1-win64-setup.exe9ff1f552f8ed3f058a56332defa7c61cfb345848428d7b419182096eca2ac99a  litecoin-0.18.1-win64.zipca50936299e2c5a66b954c266dcaaeef9e91b2f5307069b9894048acf3eb5751  litecoin-0.18.1-x86_64-linux-gnu.tar.gz\r\n\r\nCredits\r\n=======\r\n\r\nThanks to everyone who directly contributed to this release:\r\n\r\n-   [The Bitcoin Core Developers](https://github.com/bitcoin/bitcoin/tree/master/doc/release-notes)\r\n-   Adrian Gallagher\r\n-   aunyks\r\n-   coblee\r\n-   cryptonexii\r\n-   EP1JUNE\r\n-   gabrieldov\r\n-   jmutkawoa\r\n-   Loshan\r\n-   Martin Smith\r\n-   NeMO84\r\n-   OlegKozhemiakin\r\n-   ppm0\r\n-   romanornr\r\n-   shaolinfry\r\n-   spl0i7\r\n-   stedwms\r\n-   ultragtx\r\n-   VKoskiv\r\n-   voidmain\r\n-   wbsmolen\r\n-   xinxi", "created_at": "2020-05-29T01:38:38Z", "project": "Litecoin (LTC)", "currency": "ltc", "alias": "litecoin", "repo": "litecoin-project/litecoin", "type": "utxo", "hosting": "github", "explorer": "https://chainz.cryptoid.info/ltc", "doc": "https://github.com/uphold/docker-litecoin-core", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/boss0406/cds-node", "repo_url": "https://github.com/boss0406/cds-node", "body": "", "created_at": "2020-05-18T08:00:00Z", "project": "Commercial Data Storage(CDS)", "currency": "cds", "alias": "cds", "repo": "boss0406/cds-node", "type": "fork eth", "hosting": "github", "explorer": "http://47.75.96.91", "doc": "https://github.com/boss0406/cds-node", "api": "https://openethereum.github.io/wiki/JSONRPC-eth-module.html", "add_time": "2020-05-18T08:00:00Z"}, {"name": "Release v2.0.5wax01", "tag_name": "v2.0.5wax01", "html_url": "https://github.com/worldwide-asset-exchange/wax-blockchain/releases/tag/v2.0.5wax01", "repo_url": "https://github.com/worldwide-asset-exchange/wax-blockchain", "body": "EOSIO 2.0.5 upgrade", "created_at": "2020-04-22T21:37:48Z", "project": "WAX (WAX)", "currency": "wax", "alias": "wax", "repo": "worldwide-asset-exchange/wax-blockchain", "type": "eos", "hosting": "github", "explorer": "https://wax.bloks.io", "doc": "https://waxsweden.org/apt-get-wax", "api": "https://developers.eos.io/eosio-nodeos/reference", "add_time": "2020-02-26T16:00:00Z"}, {"name": "v3.0.0", "tag_name": "v3.0.0", "html_url": "https://github.com/nebulasio/go-nebulas/releases/tag/v3.0.0", "repo_url": "https://github.com/nebulasio/go-nebulas", "body": "# Introduction\r\nIn go-nebulas v3.0.0 release, we release ***Nebulas Voyager*** version.\r\n\r\n# Change details\r\n## New features\r\nVoyager\u2019s core upgrade is the Proof of Devotion (PoD) consensus mechanism. The PoD mechanism is built on the basis of the contribution size from the community and is a novel method for decentralized collaboration.\r\n\r\nThe PoD mechanism comprises two components:\r\n\r\n* ***Consensus mechanism***: PoD delivers a fully decentralized blockchain relying on community managed nodes for mainnet operation, security and stability.\r\n* ***Governance mechanism***: The consensus nodes which produce the most blocks will be chosen as governance nodes and will decide if community proposals should become projects, funding and more. All governance votes will utilize on-chain voting.\r\n\r\n## Others\r\n* Adjustment of the event contract address record generated within smart contracts which modifies the binary hex of the smart contract address in topic.\r\n* Security upgrade of the mainnet pertaining to modifications of the blacklist management via smart contract.\r\n", "created_at": "2020-03-29T13:15:39Z", "project": "Nebulas (NAS)", "currency": "nas", "alias": "nebulas", "repo": "nebulasio/go-nebulas", "type": "nebulas", "hosting": "github", "explorer": "https://explorer.nebulas.io", "doc": "https://github.com/nebulasio/go-nebulas#building-from-docker", "api": "https://wiki.nebulas.io/en/latest/go-nebulas/tutorials/05-interacting-with-nebulas-by-rpc-api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v1.1.2.2_test", "html_url": "https://github.com/Cocos-BCX/cocos-mainnet/releases/tag/v1.1.2.2_test", "repo_url": "https://github.com/Cocos-BCX/cocos-mainnet", "body": "bug fixes\uff1a\r\nfix bug of call contract fee share operation.   \r\nadd functions:\r\n1.multiplatform compile support.\r\n2.add quit command in cli_wallet.\r\n3.add test modules.", "created_at": "2020-03-05T10:15:44Z", "project": "Cocos-BCX (COCOS)", "currency": "cocos", "alias": "cocos", "repo": "Cocos-BCX/cocos-mainnet", "type": "cocos", "hosting": "github", "explorer": "https://www.cocosabc.com", "doc": "https://github.com/Cocos-BCX/cocos-mainnet/wiki/Run-With-Docker", "api": "https://cn-dev.cocosbcx.io/docs/cocos-bcx-chain-api-doc", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Beta3.0.3", "tag_name": "Beta3.0.3", "html_url": "https://github.com/HcashOrg/hcOMNI/releases/tag/Beta3.0.3", "repo_url": "https://github.com/HcashOrg/hcOMNI", "body": "", "created_at": "2020-02-17T04:49:18Z", "project": "hcOMNI (hcOMNI)", "currency": "hcomni", "alias": "hcomni", "repo": "HcashOrg/hcOMNI", "type": "hc", "hosting": "github", "explorer": "https://hcomni-explorer.h.cash", "doc": "https://github.com/HcashOrg/hcOMNI/blob/master/README.md", "api": "https://github.com/OmniLayer/omnicore/blob/develop/src/omnicore/doc/rpc-api.md#json-rpc-api", "add_time": "2020-03-27T00:00:00Z"}, {"name": "Mainnet v1.1", "tag_name": "v1.1", "html_url": "https://github.com/stegos/stegos/releases/tag/v1.1", "repo_url": "https://github.com/stegos/stegos", "body": "This is a hotfix release for [Mainnet v1.0](https://github.com/stegos/stegos/releases/tag/v1.0). \r\n**Upgrading to Hotfix 1 is highly recommended.**\r\n\r\n### Changes since [Mainnet v1.0](https://github.com/stegos/stegos/releases/tag/v1.0):\r\n\r\n- Added `stake all` command, for staking all available payment utxos.\r\n- Implemented resending of restake transacitons, that increase node resilience.\r\n- Improved logs, remove downgraded technical errors to info.\r\n- Added `show validators` command to show current active validators group.\r\n- Fix panic in snowball.\r\n- Add `accounts_info` as an alias for `list_accounts`\r\n- Implemented API call to get list of connected nodes.\r\n- Make payment always use fixed fee for two outputs.\r\n- Refactored transaction tracking.\r\n- Clarifies error messages.\r\n- Updated AES crate, and fixed a bug that cause a panic on system that support AES-NI instruction set, but didn't support AVX2.\r\n- Fixed panic on unseal created account at single epoch.\r\n- Removed virtual public addresses from CLI.\r\n\r\n### Getting Started\r\n\r\nSee [https://docs.stegos.com](https://docs.stegos.com)\r\n\r\n### Feedback\r\n\r\nPlease join us on [Telegram Chat](https://t.me/stegos4privacy) to let us know your thoughts. Subscribe to the official [Telegram Channel](https://t.me/stegos4privacy_official) for the latest news.\r\n\r\n", "created_at": "2019-12-25T11:37:58Z", "project": "Stegos (STG)", "currency": "stg", "alias": "stegos", "repo": "stegos/stegos", "type": "utxo", "hosting": "github", "explorer": "http://explorer.stegos.com/mainnet", "doc": "https://github.com/stegos/stegos/wiki/Building-from-Source", "api": "https://github.com/stegos/stegos/wiki/WebSocket-API", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/FIBOS-Community/fibos-nodes", "repo_url": "https://github.com/FIBOS-Community/fibos-nodes", "body": "", "created_at": "2019-12-18T15:00:00Z", "project": "FIBOS (FO)", "currency": "fo", "alias": "fibos", "repo": "FIBOS-Community/fibos-nodes", "type": "eos", "hosting": "github", "explorer": "https://fibscan.io", "doc": "https://dev.fo/zh-cn/guide/installation.html", "api": "https://dev.fo/zh-cn/api/rpc/index.html", "add_time": "2019-12-18T15:00:00Z"}, {"name": "", "tag_name": "v0.10.0", "html_url": "https://api.github.com/repos/mdukey/mdukey/commits/498f89525d8521cb241eca38646a5bf1b81b96be", "repo_url": "https://github.com/mdukey/mdukey", "body": "update doc", "created_at": "2019-12-09T14:03:27Z", "project": "MduKey (MDU)", "currency": "mdu", "alias": "mdukey", "repo": "mdukey/mdukey", "type": "cosmos", "hosting": "github", "explorer": "https://scan.mdukey.org", "doc": "https://github.com/mdukey/mdukey/tree/master/doc/cn", "api": "https://cosmos.network/rpc/master", "add_time": "2019-12-23T04:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/coinexchain/dex-manual", "repo_url": "https://github.com/coinexchain/dex-manual", "body": "", "created_at": "2019-12-01T00:00:00Z", "project": "CoinEx Token (CET)", "currency": "cet", "alias": "coinex", "repo": "coinexchain/dex-manual", "type": "cosmos", "hosting": "github", "explorer": "https://explorer.coinex.net", "doc": "https://github.com/coinexchain/devops/blob/master/README_zh.md", "api": "https://dex-api.coinex.org/swagger", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/rolong/tesk", "repo_url": "https://github.com/rolong/tesk", "body": "", "created_at": "2019-12-01T00:00:00Z", "project": "SeekChain (SEEK)", "currency": "seek", "alias": "seekchain", "repo": "rolong/tesk", "type": "fork eth", "hosting": "github", "explorer": "http://explorer.seekchain.org", "doc": "https://note.youdao.com/ynoteshare1/index.html?id=81c78ebe08299651d7bd171dbfbe65ba&type=note", "api": "https://openethereum.github.io/wiki/JSONRPC-eth-module.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v0.19.0.1", "html_url": "https://api.github.com/repos/Darknet-Pollux/bitcoin/commits/1bc9988993ee84bc814e5a7f33cc90f670a19f6a", "repo_url": "https://github.com/Darknet-Gemini/bitcoin", "body": "doc: Generate manpages for 0.19.0.1\n\nTree-SHA512: d53a2bfa5bc589e7130cf8cd1627083ad7c72a197cbd80754c9dcf78e3775021fbd6426c5762f5f3e52e4b23ed06387c0be224914e0f98d14f3f7e51ee66c809", "created_at": "2019-11-18T09:46:57Z", "project": "BIW (BIW)", "currency": "biw", "alias": "biw", "repo": "Darknet-Gemini/bitcoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.bitw.im/blocks", "doc": "https://github.com/Darknet-Gemini/bitcoin", "api": "https://github.com/Darknet-Gemini/bitcoin/blob/master/doc/JSON-RPC-interface.md", "add_time": "2020-10-20T09:00:00Z"}, {"name": "Dogecoin Core 1.14.2", "tag_name": "v1.14.2", "html_url": "https://github.com/dogecoin/dogecoin/releases/tag/v1.14.2", "repo_url": "https://github.com/dogecoin/dogecoin", "body": "All users are encouraged to upgrade to this version, it includes an important bugfix to 1.14.0, and enables support for `OP_CHECKLOCKTIMEVERIFY` compared to pre-1.14.0.\r\n\r\nThis is a bugfix release which:\r\n\r\n* Reverts a change of behaviour in the `getauxblock` command. The `target` field was renamed to `_target` in Namecoin and this change should not have appeared in Dogecoin, for compatibility with previous mining pool configurations. This has now been corrected.\r\n* Fix description of supermajority based forks in `getblockchaininfo` - the full block version number was used instead of just the last byte, which made it appear forks were triggered early.\r\n* Change references to \"Bitcoin\" to \"Dogecoin\" - these weren't user visible, but are done for consistency.\r\n* Corrects the handling of so-called dust outputs in regards to calculating fees. This fixes an issue where a change output smaller than 1 DOGE would create a transaction that was not going to be relayed.\r\n\r\nNote: We have skipped 1.14.1 as the last bug and its fix were found after 1.14.1 was tagged already.", "created_at": "2019-11-03T18:49:09Z", "project": "Dogecoin (DOGE)", "currency": "doge", "alias": "dogecoin", "repo": "dogecoin/dogecoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/doge", "explorer1": "https://sochain.com/doge", "doc": "https://github.com/dogecoin/dogecoin", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "latest HX release(mainnet) ", "tag_name": "v1.3.1", "html_url": "https://github.com/HcashOrg/HyperExchange/releases/tag/v1.3.1", "repo_url": "https://github.com/HcashOrg/HyperExchange", "body": "1. fix crash existing in citizen node\r\n2. reduce the cost of disk for hx node\r\n3. fix display of my accounts\r\n\r\npls add --replay-blockchain when first launch hx_node", "created_at": "2019-09-27T02:41:36Z", "project": "HyperExchange (HX)", "currency": "hx", "alias": "hyperexchange", "repo": "HcashOrg/HyperExchange", "type": "hc", "hosting": "github", "explorer": "http://explorer.hx.cash", "doc": "http://docs.hx.cash/zh/wallets/hx-docker-deploy.html", "api": "http://docs.hx.cash/zh/dev/rpc-reference/rpc-introduce.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "latest", "html_url": "https://github.com/RubyChainNet/ruby/commit/cf52e767dea215f06e71be19edab4be397a8bf0a", "repo_url": "https://github.com/RubyChainNet/ruby", "body": "Update README.md", "created_at": "2019-02-22T02:46:11Z", "project": "RubyChain (RUB)", "currency": "ruby", "alias": "rub", "repo": "RubyChainNet/ruby", "type": "ruby", "hosting": "github", "explorer": "https://ne.rubychain.org/#/index?language=zh", "doc": "https://github.com/RubyChainNet/ruby/blob/1b50d574260a5d41624b12015c7fe24e5703cd8b/README.md", "api": "https://rubychain.org/Develop-doc-v1.0-cn.html#/?id=%e5%8f%af%e7%94%a8api%e6%8c%87%e4%bb%a4", "add_time": "2020-02-26T16:00:00Z"}]}