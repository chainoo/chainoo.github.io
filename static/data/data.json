{"updated_at": "2021-05-15T15:41:33Z", "total": 85, "data": [{"name": "Mainnet - v1.6.9", "tag_name": "v1.6.9", "html_url": "https://github.com/solana-labs/solana/releases/tag/v1.6.9", "repo_url": "https://github.com/solana-labs/solana", "body": "**This is a stable release suitable for use on Mainnet Beta**\r\n\r\n#### Changes\r\n* `solana-validator` improvements\r\n    * (RPC nodes) Removes bloat for account secondary indexes, and allow index keys to be explicitly excluded/included\r\n    * Gossip optimizations\r\n    * Moves block-time caching earlier to improve availability of this data\r\n    * Expands dashboard information for `solana-test-validator`\r\n* `solana` command-line improvements \r\n    * `solana-keygen recover` now supports bip32 HD\r\n* Sdk improvements\r\n    * Improves C sdk\r\n    * Adds `get_instance_packed_len` for variable-size types\r\n    * Adds Keccak256 syscall feature\r\n* Documentation improvements\r\n\r\n#### BREAKING CHANGES\r\n- The recently added `ask:` signer-source with bip32 support (v1.6.7) renamed to `prompt:`. With no query string, `prompt:` derives the solana bip44 base key, `m/44'/501'`", "created_at": "2021-05-15T00:10:02Z", "project": "Solana (SOL)", "currency": "sol", "alias": "solana", "repo": "solana-labs/solana", "type": "solana", "hosting": "github", "explorer": "https://explorer.solana.com/", "explorer1": "https://solanabeach.io", "doc": "https://docs.solana.com/integrations/exchange", "api": "https://docs.solana.com/apps/jsonrpc-api", "add_time": "2020-06-17T03:00:00Z"}, {"name": "v1.5.0", "tag_name": "v1.5.0", "html_url": "https://github.com/vechain/thor/releases/tag/v1.5.0", "repo_url": "https://github.com/vechain/thor", "body": "This release will activate the hardfork named `ETH_IST`, in order to maintain compatibility with the latest Ethereum  virtual machine.\r\n\r\n***All nodes are required to be upgraded ASAP.***\r\n\r\nThe hardfork `ETH_IST` activation time:\r\n* Testnet: at block # 9146700 ~ Thu, 20 May 2021 08:00:00 GMT\r\n* Mainnet: at block # 9254300 ~ Mon, 07 Jun 2021 08:00:00 GMT\r\n\r\n---\r\n\r\nChanges:\r\n* add `blake2F` precompiled contract\r\n* add `OP_CHAINID` & `OP_SELFBALANCE` opcodes\r\n* fix `ecrecover` precompiled contract to not modify input data\r\n* use BIP39 mnemonic for solo accounts", "created_at": "2021-05-14T07:37:47Z", "project": "VeChain (VET)", "currency": "vet", "alias": "vechain", "repo": "vechain/thor", "type": "vechain", "hosting": "github", "explorer": "https://insight.vecha.in", "doc": "https://github.com/vechain/thor#docker", "api": "https://docs.vechain.org/thor/get-started/api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Apricot Phase 2 - Patch 3", "tag_name": "v1.4.3", "html_url": "https://github.com/ava-labs/avalanchego/releases/tag/v1.4.3", "repo_url": "https://github.com/ava-labs/gecko", "body": "This update is backwards compatible. It is optional, but encouraged. The patch includes bug fixes, updated uptime monitoring, and performance improvements.\r\n\r\n- Fixed benched message handling that could cause a node to be unable to progress during bootstrapping. This was typically experienced when the node would fail to transition to normal execution as it was finishing bootstrapping.\r\n- Fixed a non-deterministic bug in the C-Chain codebase that could cause nodes that receive a lot of transaction broadcast requests to temporarily stop producing blocks until they processes a block produced by another node.\r\n- Restricted the number of version messages to be sent to a peer to one.\r\n- Removed legacy handshake messages that were deprecated in Apricot Phase 2.\r\n- Marked nodes that have been benched as being offline for uptime calculations.\r\n- Updated the validator set to be more performant during validator set changes.\r\n- Updated the networking to only attempt to re-connect to a peer on disconnect if they are currently a validator.", "created_at": "2021-05-13T19:46:03Z", "project": "Avalanche (AVAX)", "currency": "avax", "alias": "ava", "repo": "ava-labs/gecko", "type": "avax", "hosting": "github", "explorer": "https://explorer.avax.network", "doc": "https://docs.avax.network/build/getting-started", "api": "https://docs.avax.network/build/tools/ortelius", "add_time": "2020-08-24T05:00:00Z"}, {"name": "Polkadot v0.9.1", "tag_name": "v0.9.1", "html_url": "https://github.com/paritytech/polkadot/releases/tag/v0.9.1", "repo_url": "https://github.com/paritytech/polkadot", "body": "Upgrade priority: **Low** (upgrade at your convenience) \r\nNative runtimes:\r\n\r\n- Polkadot: **9010**\r\n- Kusama: **9010**\r\n- Westend: **9010**\r\n\r\nThis release was tested against the following versions of `rustc`. Other versions may work.\r\n\r\n- rustc 1.51.0 (2fd73fabe 2021-03-23)\r\n- rustc 1.53.0-nightly (7f4afdf02 2021-04-22)\r\n\r\nWASM runtimes built with [srtool](https://github.com/paritytech/srtool) using `rustc 1.52.0-nightly (d6eaea1c8 2021-03-14)`.\r\n\r\nProposal hashes:\r\n* `polkadot_runtime-v9010.compact.wasm - 0x1b80c6c48d3b8692aabdb77a0a60c8dcb0f4ef7892b9734240cda82d0a8e1dbf`\r\n* `kusama_runtime-v9010.compact.wasm - 0x95626a74640376c9a7c8fd64485c8edc111d6e830a4bca81d52ab0a5229ecd0f`\r\n\r\n## Changes\r\n\r\n* More secure `Signed` implementation (#2963)\r\n* Initial integration of Gilts pallet (Kusama) (#2587)\r\n\r\n## Client\r\n\r\n* Add a JSON-RPC request for reserved nodes (paritytech/substrate#8704)\r\n* Change to use the same subcommand syntax as subkey (paritytech/substrate#8678)\r\n* subkey: display SS58 encoding of public key (paritytech/substrate#8674)\r\n* RPC to trace execution of specified block (paritytech/substrate#7780)\r\n\r\n## Runtime\r\n\r\n* \u2705 `trivial` Enable Para Registration on Kusama (#3014)\r\n* \u2705 `audited` Add Auctions and Crowdloans to Kusama and Westend (#2999)\r\n* \u2705 `trivial` Add arithmetic dispatch errors. (paritytech/substrate#8726)\r\n* \u2705 `trivial` primitives: remove random_seed from BlockBuilder API (paritytech/substrate#8718)\r\n* \u2705 `trivial` Make custom on runtime upgrade prior to pallet ones (paritytech/substrate#8687)\r\n", "created_at": "2021-05-12T16:11:03Z", "project": "Kusama (KSM)", "currency": "ksm", "alias": "kusama", "repo": "paritytech/polkadot", "type": "polkadot", "hosting": "github", "explorer": "https://kusama.subscan.io", "doc": "https://github.com/paritytech/polkadot/blob/master/doc/docker.md", "api": "https://polkadot.js.org/api/substrate/rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Polkadot v0.9.1", "tag_name": "v0.9.1", "html_url": "https://github.com/paritytech/polkadot/releases/tag/v0.9.1", "repo_url": "https://github.com/paritytech/polkadot", "body": "Upgrade priority: **Low** (upgrade at your convenience) \r\nNative runtimes:\r\n\r\n- Polkadot: **9010**\r\n- Kusama: **9010**\r\n- Westend: **9010**\r\n\r\nThis release was tested against the following versions of `rustc`. Other versions may work.\r\n\r\n- rustc 1.51.0 (2fd73fabe 2021-03-23)\r\n- rustc 1.53.0-nightly (7f4afdf02 2021-04-22)\r\n\r\nWASM runtimes built with [srtool](https://github.com/paritytech/srtool) using `rustc 1.52.0-nightly (d6eaea1c8 2021-03-14)`.\r\n\r\nProposal hashes:\r\n* `polkadot_runtime-v9010.compact.wasm - 0x1b80c6c48d3b8692aabdb77a0a60c8dcb0f4ef7892b9734240cda82d0a8e1dbf`\r\n* `kusama_runtime-v9010.compact.wasm - 0x95626a74640376c9a7c8fd64485c8edc111d6e830a4bca81d52ab0a5229ecd0f`\r\n\r\n## Changes\r\n\r\n* More secure `Signed` implementation (#2963)\r\n* Initial integration of Gilts pallet (Kusama) (#2587)\r\n\r\n## Client\r\n\r\n* Add a JSON-RPC request for reserved nodes (paritytech/substrate#8704)\r\n* Change to use the same subcommand syntax as subkey (paritytech/substrate#8678)\r\n* subkey: display SS58 encoding of public key (paritytech/substrate#8674)\r\n* RPC to trace execution of specified block (paritytech/substrate#7780)\r\n\r\n## Runtime\r\n\r\n* \u2705 `trivial` Enable Para Registration on Kusama (#3014)\r\n* \u2705 `audited` Add Auctions and Crowdloans to Kusama and Westend (#2999)\r\n* \u2705 `trivial` Add arithmetic dispatch errors. (paritytech/substrate#8726)\r\n* \u2705 `trivial` primitives: remove random_seed from BlockBuilder API (paritytech/substrate#8718)\r\n* \u2705 `trivial` Make custom on runtime upgrade prior to pallet ones (paritytech/substrate#8687)\r\n", "created_at": "2021-05-12T16:11:03Z", "project": "Dot (DOT)", "currency": "dot", "alias": "polkadot", "repo": "paritytech/polkadot", "type": "polkadot", "hosting": "github", "explorer": "https://polkadot.subscan.io", "explorer1": "https://polkascan.io/polkadot", "doc": "https://wiki.polkadot.network/docs/en/maintain-sync", "api": "https://wiki.polkadot.network/docs/en/build-node-interaction#polkadot-rpc", "add_time": "2020-07-29T08:00:00Z"}, {"name": "v1.0.7-ht.3", "tag_name": "v1.0.7-ht.3", "html_url": "https://github.com/binance-chain/bsc/releases/tag/v1.0.7-ht.3", "repo_url": "https://github.com/binance-chain/bsc", "body": "This is a hot fix release to fix the reorg routine stuck issue.", "created_at": "2021-05-10T16:45:50Z", "project": "Binance Smart Chain (BSC)", "currency": "bsc", "alias": "bsc", "repo": "binance-chain/bsc", "type": "eth", "hosting": "github", "explorer": "https://bscscan.com", "doc": "https://docs.binance.org/smart-chain/developer/fullnode.html", "api": "https://documenter.getpostman.com/view/4117254/ethereum-json-rpc/RVu7CT5J?version=latest", "add_time": "2020-09-17T09:00:00Z"}, {"name": "v1.1.2", "tag_name": "v1.1.2", "html_url": "https://github.com/casper-network/casper-node/releases/tag/v1.1.2", "repo_url": "https://github.com/CasperLabs/casper-node", "body": "Small bugfix release addressing non-proposal of nodes after restart.", "created_at": "2021-05-10T14:48:20Z", "project": "Casper (CSPR)", "currency": "cspr", "alias": "cspr", "repo": "CasperLabs/casper-node", "type": "chia", "hosting": "github", "explorer": "https://clarity.make.services/#/blocks", "doc": "https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-of-rust-contract-sdk.html", "api": "https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-of-rust-contract-sdk.html", "add_time": "2021-04-21T08:00:00Z"}, {"name": "Stake (v1.3.0) - Hard Fork - Mandatory update", "tag_name": "v1.3.0", "html_url": "https://github.com/filestar-project/lotus/releases/tag/v1.3.0", "repo_url": "https://github.com/filestar-project/lotus", "body": "## v1.3.0\r\nThis is a mandatory release of Lotus that upgrades the network to version 8, which introduces  the implementation of [SIP-0002-Stake](https://github.com/filestar-project/sip/issues/4). \r\n\r\nThe network will upgrade at height **584460**, which is **2021-05-18T10:30:00 UTC+8**.\r\n\r\n## Changes\r\n* UpgradeStake (https://github.com/filestar-project/lotus/pull/20)\r\n    * add command `lotus stake info`\r\n    * add command `lotus stake deposit [amount]`\r\n    * add command `lotus stake list-locked-principal`\r\n    * add command `lotus stake list-vesting`\r\n    * add command `lotus stake withdraw [source] [amount]`\r\n* add command `lotus-miner proving check` (https://github.com/filestar-project/lotus/pull/22)\r\n* add command `lotus-miner list-vesting` (https://github.com/filestar-project/lotus/commit/51dc5477e4c242e7d6fadda300f29c8c084ab052)\r\n", "created_at": "2021-05-10T09:12:42Z", "project": "FileStar (STAR)", "currency": "star", "alias": "star", "repo": "filestar-project/lotus", "type": "ipfs", "hosting": "github", "explorer": "https://filestar.info/zh", "doc": "https://github.com/filestar-project/docs/wiki/%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9", "api": "https://lotu.sh/en+api-methods", "add_time": "2020-11-10T11:00:00Z"}, {"name": "Conflux v1.1.4", "tag_name": "v1.1.4", "html_url": "https://github.com/Conflux-Chain/conflux-rust/releases/tag/v1.1.4", "repo_url": "https://github.com/Conflux-Chain/conflux-rust", "body": "**Incompatible Changes**: Some error messages stored in receipts/traces are changed. This will affect the return message format of some RPCs. Please read this for details: https://github.com/Conflux-Chain/CIPs/issues/70\r\n \r\n## Improvements\r\n\r\n### RPC Improvements\r\n- Add a new RPC `cfx_getAccountPendingTransactions` to get pending transactions of a given account.\r\n- Make VM tracer records reasons for a fail execution. \r\n- Make `cfx_estimateGasAndCollateral` return an error stack in case an error happens in sub-call.\r\n- Use random miner address in virtual calls (`cfx_call` and `cfx_estimateGasAndCollateral`) \r\n    instead of a special null address.\r\n\r\n### Configuration Improvements\r\n- Allow setting maximum WebSocket response payload size using `jsonrpc_ws_max_payload_bytes`. The default is 30MB.\r\n\r\n## Bug fixes\r\n- Fix a bug that causes repacking useless transactions.\r\n- Fix a bug that causes the configuration `sync_state_starting_epoch` not effective on archive nodes.\r\n- Fix a bug that may make `cfx_getStatus` return unexpected error.\r\n", "created_at": "2021-05-10T02:43:50Z", "project": "Conflux (CFX)", "currency": "cfx", "alias": "cfx", "repo": "Conflux-Chain/conflux-rust", "type": "eth", "hosting": "github", "explorer": "https://confluxscan.io", "doc": "https://developer.conflux-chain.org/docs/conflux-doc/docs/installation", "api": "https://developer.conflux-chain.org/docs/conflux-doc/docs/json_rpc", "add_time": "2020-11-05T11:00:00Z"}, {"name": "1.1.5", "tag_name": "1.1.5", "html_url": "https://github.com/Chia-Network/chia-blockchain/releases/tag/1.1.5", "repo_url": "https://github.com/Chia-Network/chia-blockchain", "body": "## 1.1.5 Chia Blockchain 2021-05-09\r\n\r\n### Fixed\r\n\r\n- We were not checking for negative values in the uint64 constructor. Therefore coins with negative values were added to the mempool. These blocks passed validation, but they did not get added into the blockchain due to negative values not serializing in uint64. Farmers making these blocks would make blocks that did not make it into or advance the chain, so the blockchain slowed down starting at block 255518 around 6:35AM PDT. The fix adds a check in the mempool and block validation, and does not disconnect peers who send these invalid blocks (any peer 1.1.4 or older), making this update not mandatory but is recommended. Users not updating might see their blocks get rejected from other peers.", "created_at": "2021-05-09T16:37:51Z", "project": "Chia Network (XCH)", "currency": "xch", "alias": "xch", "repo": "Chia-Network/chia-blockchain", "type": "chia", "hosting": "github", "explorer": "https://www.chiaexplorer.com/blockchain/blocks", "doc": "https://github.com/Chia-Network/chia-blockchain/wiki/INSTALL", "api": "https://github.com/Chia-Network/chia-blockchain/wiki/RPC-Interfaces", "add_time": "2021-04-21T02:00:00Z"}, {"name": "Celo-Blockchain Release 1.3.2-stable", "tag_name": "v1.3.2", "html_url": "https://github.com/celo-org/celo-blockchain/releases/tag/v1.3.2", "repo_url": "https://github.com/celo-org/celo-blockchain", "body": "This is a security release which updates the Go version used to compile celo-blockchain to v1.16.4, which is a security patch released yesterday, fixing a possible panic in `net/http` which could be triggered by a malicious server.  See [the Go v1.16.4 announcement](https://groups.google.com/g/golang-announce/c/cu9SP4eSXMc/m/vBLImzQOAgAJ) for more details.\r\n\r\nAll node operators should upgrade to this version.\r\n\r\nIf you are upgrading from versions older than v1.3.1, please see also the [v1.3.0](https://github.com/celo-org/celo-blockchain/releases/tag/v1.3.0) and [v1.3.1](https://github.com/celo-org/celo-blockchain/releases/tag/v1.3.1) release notes as well.\r\n\r\n### Docker Images\r\n\r\n* geth: us.gcr.io/celo-org/geth:1.3.2\r\n* geth-all: us.gcr.io/celo-org/geth-all:1.3.2\r\n\r\n", "created_at": "2021-05-07T14:33:06Z", "project": "Celo (CELO)", "currency": "celo", "alias": "celo", "repo": "celo-org/celo-blockchain", "type": "ethereum", "hosting": "github", "explorer": "https://explorer.celo.org", "doc": "https://docs.celo.org/getting-started/mainnet/running-a-full-node-in-mainnet", "api": "https://eth.wiki/json-rpc/API", "add_time": "2020-07-07T07:00:00Z"}, {"name": "Release - FIO v2.0.1", "tag_name": "v2.0.1", "html_url": "https://github.com/fioprotocol/fio/releases/tag/v2.0.1", "repo_url": "https://github.com/fioprotocol/fio", "body": "# Hotfix\r\n\r\n(#281) Fix boost path error on ubuntu and mac builds", "created_at": "2021-05-05T20:39:54Z", "project": "FIO (FIO)", "currency": "fio", "alias": "fio", "repo": "fioprotocol/fio", "type": "eos", "hosting": "github", "explorer": "https://fio.bloks.io", "explorer1": "https://monitor.fioprotocol.io", "doc": "https://developers.fioprotocol.io/fio-chain/history", "api": "https://developers.fioprotocol.io/api/api-spec", "add_time": "2020-07-16T02:00:00Z"}, {"name": "Cardano Node 1.27.0", "tag_name": "1.27.0", "html_url": "https://github.com/input-output-hk/cardano-node/releases/tag/1.27.0", "repo_url": "https://github.com/input-output-hk/cardano-node", "body": "Node version 1.27.0 provides important new functionality, including supporting new CLI commands that have been requested by stake pools, providing garbage collection metrics.\r\nIt includes the performance fixes for the epoch boundary calculation that were released in node version [1.26.2](https://github.com/input-output-hk/cardano-node/releases/tag/1.26.2), plus a number of bug fixes and code improvements.\r\nIt also includes many fundamental changes that are needed to prepare for forthcoming feature releases (notably Plutus scripts in the Alonzo era).\r\nNote that this release includes breaking changes to the API and CLI commands, and that compilation using GHC version 8.6.5 is no longer supported.\r\n\r\n### API refactoring to move scripts into the txbody (#2547)\r\nThere are some breaking changes:\r\n- You must specify auxiliary scripts with --auxiliary-script-file instead of --script-file\r\n- Scripts witnessing txins, certificates, withdrawals and minting must be paired with the thing they are witnessing.\r\nE.g:\r\n```\r\n--certificate-file  $certfile --certificate-script-file $scriptfile\r\n--tx-out $txout --minting-script-file $scriptfile\r\n--withdrawal $withdrawal --withdrawal-script-file $scriptfile\r\n--tx-in $txin --txin-script-file $scriptfile\r\n```\r\n- Scripts are no longer specified at the tx signing stage. They are specified at the txbody stage.\r\n\r\n## Node changes\r\n\r\n- Add an additional GC heap metric to RTS. (#2592)\r\n- Add details about registering relays on-chain to SPO documentation. (#2591)\r\n- Improved installation documentation. (#2624)\r\n- Preparatory support for Voltaire. (#2498)\r\n- Add a docker image option for downloading cardano-node. (#2632)\r\n\r\n## Consensus changes\r\n\r\n- Some preparation for upcoming work on Voltaire. ([#2978](https://github.com/input-output-hk/ouroboros-network/pull/2978))\r\n- Introduce an option to configure the snapshot interval. This will primarily be used by downstream teams for testing and benchmarking. ([#2966](https://github.com/input-output-hk/ouroboros-network/pull/2966)), ([#3092](https://github.com/input-output-hk/ouroboros-network/pull/3092))\r\n- Preparatory work for the implementation of Ouroboros Genesis. ([#3002](https://github.com/input-output-hk/ouroboros-network/pull/3002))\r\n- Add a peer label to chain sync client traces, allowing us to view which peer supplied which header and when. ([#3091](https://github.com/input-output-hk/ouroboros-network/pull/3091))\r\n- Provide the ledger with the ability to perform slot to time conversion. This will be needed for Plutus scripts in the upcoming Alonzo release. ([#3036](https://github.com/input-output-hk/ouroboros-network/pull/3036)), ([#3098](https://github.com/input-output-hk/ouroboros-network/pull/3098))\r\n\r\n## Ledger changes\r\n\r\n- Work on implementing the upcoming Alonzo era. ([#2192](https://github.com/input-output-hk/cardano-ledger-specs/pull/2192)), ([#2198](https://github.com/input-output-hk/cardano-ledger-specs/pull/2198)), ([#2200](https://github.com/input-output-hk/cardano-ledger-specs/pull/2200)), ([#2204](https://github.com/input-output-hk/cardano-ledger-specs/pull/2204)), ([#2210](https://github.com/input-output-hk/cardano-ledger-specs/pull/2210)), ([#2211](https://github.com/input-output-hk/cardano-ledger-specs/pull/2211)), ([#2212](https://github.com/input-output-hk/cardano-ledger-specs/pull/2212)), ([#2214](https://github.com/input-output-hk/cardano-ledger-specs/pull/2214)), ([#2215](https://github.com/input-output-hk/cardano-ledger-specs/pull/2215)), ([#2216](https://github.com/input-output-hk/cardano-ledger-specs/pull/2216)), ([#2218](https://github.com/input-output-hk/cardano-ledger-specs/pull/2218)), ([#2220](https://github.com/input-output-hk/cardano-ledger-specs/pull/2220)), ([#2221](https://github.com/input-output-hk/cardano-ledger-specs/pull/2221)), ([#2222](https://github.com/input-output-hk/cardano-ledger-specs/pull/2222)), ([#2225](https://github.com/input-output-hk/cardano-ledger-specs/pull/2225)), ([#2226](https://github.com/input-output-hk/cardano-ledger-specs/pull/2226)), ([#2227](https://github.com/input-output-hk/cardano-ledger-specs/pull/2227)), ([#2229](https://github.com/input-output-hk/cardano-ledger-specs/pull/2229)), ([#2231](https://github.com/input-output-hk/cardano-ledger-specs/pull/2231)), ([#2235](https://github.com/input-output-hk/cardano-ledger-specs/pull/2235)), ([#2237](https://github.com/input-output-hk/cardano-ledger-specs/pull/2237)), ([#2242](https://github.com/input-output-hk/cardano-ledger-specs/pull/2242)), ([#2243](https://github.com/input-output-hk/cardano-ledger-specs/pull/2243)), ([#2251](https://github.com/input-output-hk/cardano-ledger-specs/pull/2251)), ([#2256](https://github.com/input-output-hk/cardano-ledger-specs/pull/2256)), ([#2260](https://github.com/input-output-hk/cardano-ledger-specs/pull/2260)), ([#2264](https://github.com/input-output-hk/cardano-ledger-specs/pull/2264))\r\n- Released the CDDL spec for Alonzo. ([#2228](https://github.com/input-output-hk/cardano-ledger-specs/pull/2228))\r\n- Add an optional network ID field to the transaction body. This will only come into use in the Alonzo era. ([#2219](https://github.com/input-output-hk/cardano-ledger-specs/pull/2219)), ([#2254](https://github.com/input-output-hk/cardano-ledger-specs/pull/2254))\r\n- Define a cardano-ledger-core package containing era-independent primitives. ([#2207](https://github.com/input-output-hk/cardano-ledger-specs/pull/2207))\r\n- Some work to reduce the extra CPU load at an epoch boundary, and reduce the resulting \"pause\" in normal operation. ([#2240](https://github.com/input-output-hk/cardano-ledger-specs/pull/2240)), ([#2241](https://github.com/input-output-hk/cardano-ledger-specs/pull/2241)), ([#2250](https://github.com/input-output-hk/cardano-ledger-specs/pull/2250)), ([#2262](https://github.com/input-output-hk/cardano-ledger-specs/pull/2262))\r\n- Added formal definitions for much of the crypto used to the Shelley spec. ([#2236](https://github.com/input-output-hk/cardano-ledger-specs/pull/2236)), ([#2252](https://github.com/input-output-hk/cardano-ledger-specs/pull/2252))\r\n- Expose AdaPots for use in downstream projects. ([#2208](https://github.com/input-output-hk/cardano-ledger-specs/pull/2208))\r\n- Some preparation for upcoming work on Voltaire. (#2135)([#2135](https://github.com/input-output-hk/cardano-ledger-specs/pull/2135))\r\n\r\n## Network changes\r\n\r\n- Introduce new representation for local root peers. This is in preparation for P2P support. ([#3006](https://github.com/input-output-hk/ouroboros-network/pull/3006))\r\n- Add a new KeepAlive codec that produces a valid CBOR encoding. ([#3062](https://github.com/input-output-hk/ouroboros-network/pull/3062))\r\n\r\n## Cardano-cli changes\r\n- The query tip now also returns the era (e.g. Shelley, Allegra, Alonzo). (#2561, #2562, #2598)\r\n- The address build command now incorporates the functionality of the script address build command, which is now deprecated. (#2486, #2587)\r\n- Add additional commands for creating MIR certificates to the CLI. This supports the ability to transfer funds to the treasury for Catalyst projects. (#2503)\r\n- The transaction view command now additionally shows detailed of minted non-native tokens. (#2550)\r\n- Add a new command which computes the minimum ADA value/deposit for a multi-asset value. (#2612)\r\n- Add two new query commands:\r\n   - Query stake-snapshot allows querying the three stake snapshots for a given stake pool.\r\n   - Query pool-params returns the current and future parameters, as well as the retiring information. (#2560)\r\n- Preparatory support for Alonzo. (#2547)\r\n- Updated the CLI reference documentation. (#2665)\r\n\r\n## Cardano-api changes\r\n- Add initial support for the ledger state and folding over blocks to the API. (#2633)\r\n\r\n## Deprecated Features\r\n- Removed the deprecated 'KThxBye' message from the TxSubmission protocol. ([#2238](https://github.com/input-output-hk/ouroboros-network/pull/2238))\r\n- Removed support for Byron addresses using the Bech32 encoding. The only supported way to use Byron-era addresses is through a file, using the text envelope format. (#2605)\r\n\r\n## Fixed Issues\r\n- Fixes to the ShelleyMA formal specification. ([#2181](https://github.com/input-output-hk/cardano-ledger-specs/pull/2181))\r\n- Fix a bug in reward update application which could have resulted in the wrong amount of funds being added to the treasury. ([#2238](https://github.com/input-output-hk/cardano-ledger-specs/pull/2238))\r\n\r\n## Documentation\r\n- [Cardano Node documentation](https://docs.cardano.org/projects/cardano-node/)\r\n- [Cardano CLI](https://github.com/input-output-hk/cardano-node/blob/1.27.0/cardano-cli/README.md)\r\n- [Internal API docs for ledger, consensus and network](https://input-output-hk.github.io/ouroboros-network/)\r\n- [Configuration files](https://docs.cardano.org/projects/cardano-node/en/latest/stake-pool-operations/getConfigFiles_AND_Connect.html)\r\n\r\n## Platforms\r\n- Linux 64-bit (Ubuntu 18.04 LTS, 20.04 LTS; Mint 19.3, 20; Debian 10.3)\r\n- Windows 64-bit (8.1, 10)\r\n- MacOS 10.13, 10.14, 10.15\r\n- [Docker image](https://hub.docker.com/r/inputoutput/cardano-node)\r\n- [Hydra binaries](https://hydra.iohk.io/build/6262993#tabs-constituents)\r\n\r\n## Supported roles\r\nPlatform | Block Production | Relay | Client (Desktop)\r\n-- | -- | -- | --\r\nLinux | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: \r\nWindows | :x: | :x: | :heavy_check_mark: \r\nMacOS | :x: | :x: | :heavy_check_mark: \r\n\r\n## Minimum System Requirements\r\n- An Intel or AMD x86 processor with two or more cores, at 1.6GHz or faster (2GHz or faster for a stake pool or relay)\r\n- 8GB of RAM \r\n- 10GB of free storage (20GB for a stake pool)\r\n\r\n## Sign off\r\n<!-- Signatures of people responsible for the release -->\r\nRole | Approval\r\n-- | --\r\nTechnical Lead | :heavy_check_mark: \r\nQA Engineer | :heavy_check_mark:\r\nOps | :heavy_check_mark: \r\nRelease Manager | :heavy_check_mark:", "created_at": "2021-05-05T11:39:31Z", "project": "Cardano (ADA)", "currency": "ada", "alias": "cardano", "repo": "input-output-hk/cardano-node", "type": "utxo", "hosting": "github", "explorer": "https://cardanoexplorer.com", "doc": "https://github.com/input-output-hk/cardano-sl/blob/develop/docs/how-to/build-cardano-sl-and-daedalus-from-source-code.md", "api": "https://docs.cardano.org/technical/wallet/api/v1", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Maroon Sea (v1.10.3)", "tag_name": "v1.10.3", "html_url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.10.3", "repo_url": "https://github.com/ethereum/go-ethereum", "body": "Geth v1.10.3 is a maintenance release, containing bug fixes and performance improvements.\r\n\r\nThe performance of the snapshot system has been a big focus in this release cycle.\r\nGenerating a snapshot after a snap sync is approximately 10 times faster.\r\n\r\n#### Geth command changes\r\n\r\n- Several race conditions in database access are resolved, reducing the potential of database corruption ([#22739](https://github.com/ethereum/go-ethereum/pull/22739), [#22728](https://github.com/ethereum/go-ethereum/pull/22728))\r\n- Large numbers in log messages now have thousands separators ([#22665](https://github.com/ethereum/go-ethereum/pull/22665), [#22679](https://github.com/ethereum/go-ethereum/pull/22679))\r\n- Geth no longer warns about database upgrades when starting with an empty database ([#22803](https://github.com/ethereum/go-ethereum/pull/22803))\r\n- The new `geth db freezer-index` debugging command prints the contents of a freezer table ([#22633](https://github.com/ethereum/go-ethereum/pull/22633))\r\n- `geth --dev --datadir ...` works again ([#22738](https://github.com/ethereum/go-ethereum/pull/22738))\r\n- Geth now includes the experimental `--catalyst` mode for eth2 merge testing ([#22641](https://github.com/ethereum/go-ethereum/pull/22641), [#22697](https://github.com/ethereum/go-ethereum/pull/22697), [#22770](https://github.com/ethereum/go-ethereum/pull/22770))\r\n- Puppeth now supports using ssh-agent for authentication ([#22634](https://github.com/ethereum/go-ethereum/pull/22634))\r\n\r\n#### Go library changes\r\n\r\n- State snapshot generator performance is much improved in this release ([#22667](https://github.com/ethereum/go-ethereum/pull/22667), [#22470](https://github.com/ethereum/go-ethereum/pull/22470), [#22504](https://github.com/ethereum/go-ethereum/pull/22504))\r\n- It is no longer possible to upgrade snapshot databases generated by pre-Berlin geth ([#22663](https://github.com/ethereum/go-ethereum/pull/22663))\r\n- The RPC client now returns non-2xx HTTP responses as `rpc.HTTPError` ([#22677](https://github.com/ethereum/go-ethereum/pull/22677))\r\n- The ethash engine now performs less database lookups when verifying uncle headers ([#21467](https://github.com/ethereum/go-ethereum/pull/21467))\r\n- `trie.StackTrie` has been refactored to improve API semantics. StackTrie methods previously took ownership of key/value byte slices passed to it, which was unintuitive for calling code ([#22673](https://github.com/ethereum/go-ethereum/pull/22673), [#22686](https://github.com/ethereum/go-ethereum/pull/22686), [#22685](https://github.com/ethereum/go-ethereum/pull/22685))\r\n\r\n#### RPC/GraphQL API changes\r\n\r\n- The gas price oracle deals much better with blocks containing transactions of very low price. Such transactions are typically generated by miners using MEV techniques ([#22722](https://github.com/ethereum/go-ethereum/pull/22722))\r\n- `eth_hashrate` works again ([#22765](https://github.com/ethereum/go-ethereum/pull/22765))\r\n- `debug_traceCall` now supports state overrides like `eth_call` ([#22245](https://github.com/ethereum/go-ethereum/pull/22245))\r\n- EVM Tracing now reports correct gas costs for EIP-2929 state access ([#22702](https://github.com/ethereum/go-ethereum/pull/22702))\r\n- Clef and the external signer account backend now support signing of EIP-2930 access list transactions ([#22585](https://github.com/ethereum/go-ethereum/pull/22585))\r\n\r\n#### Networking\r\n\r\n- Support for eth/64 has been removed. The minimum protocol version is now eth/65 ([#22636](https://github.com/ethereum/go-ethereum/pull/22636))\r\n- The core of snap sync has been re-architected to allow for dynamic request sizes ([#22668](https://github.com/ethereum/go-ethereum/pull/22668), [#22777](https://github.com/ethereum/go-ethereum/pull/22777))\r\n- Several other correctness issues in the snap sync client are resolved ([#22678](https://github.com/ethereum/go-ethereum/pull/22678), [#22789](https://github.com/ethereum/go-ethereum/pull/22789), [#22760](https://github.com/ethereum/go-ethereum/pull/22760), [#22762](https://github.com/ethereum/go-ethereum/pull/22762), [#22761](https://github.com/ethereum/go-ethereum/pull/22761))\r\n- DNS discovery for the snap protocol now uses the eth protocol node list. The snap-specific node list will be retired later. This is possible because more than 75% of all eth nodes support serving snap ([#22808](https://github.com/ethereum/go-ethereum/pull/22808))\r\n- For eth and snap, the protocol handlers now report additional metrics about response latency ([#22608](https://github.com/ethereum/go-ethereum/pull/22608), [#22751](https://github.com/ethereum/go-ethereum/pull/22751), [#22753](https://github.com/ethereum/go-ethereum/pull/22753)). A Grafana dashboard incorporating the new metrics is available [here](https://gist.github.com/karalabe/1e26f9ea5c842fb118584edadc454e18).\r\n- Several new tests have been added in the cross-client eth protocol test suite. The tests are now more reliable and run as part of pull request CI on Travis ([#22698](https://github.com/ethereum/go-ethereum/pull/22698), [#22630](https://github.com/ethereum/go-ethereum/pull/22630), [#22757](https://github.com/ethereum/go-ethereum/pull/22757), [#22749](https://github.com/ethereum/go-ethereum/pull/22749), [#22754](https://github.com/ethereum/go-ethereum/pull/22754), [#22801](https://github.com/ethereum/go-ethereum/pull/22801))\r\n- The discv5 message handler now reflects IPv4-in-IPv6 addresses correctly when handling PING ([#22703](https://github.com/ethereum/go-ethereum/pull/22703))\r\n- The DNS node list tools in cmd/devp2p now support setting a size limit for node lists. This was added because the list of mainnet snap protocol nodes overflowed our AWS Route53 account ([#22694](https://github.com/ethereum/go-ethereum/pull/22694), [#22695](https://github.com/ethereum/go-ethereum/pull/22695))\r\n\r\n#### Build\r\n\r\n- The Windows build environment has been cleaned up and updated to use GCC 10 ([#22811](https://github.com/ethereum/go-ethereum/pull/22811), [#22788](https://github.com/ethereum/go-ethereum/pull/22788), [#22804](https://github.com/ethereum/go-ethereum/pull/22804), [#22821](https://github.com/ethereum/go-ethereum/pull/22821))\r\n- The crypto/bn256 and crypto/bls12381 packages are now fuzz-tested against gnark-crypto ([#22755](https://github.com/ethereum/go-ethereum/pull/22755))\r\n- go-ethereum now builds correctly on OpenBSD/arm64 ([#22693](https://github.com/ethereum/go-ethereum/pull/22693))\r\n\r\nFor a full rundown of the changes please consult the Geth 1.10.3 [release milestone](https://github.com/ethereum/go-ethereum/milestone/115?closed=1).\r\n\r\n---\r\n\r\nAs with all our previous releases, you can find the:\r\n\r\n- Pre-built binaries for all platforms on our [downloads page](https://geth.ethereum.org/downloads/).\r\n- Docker images published under [`ethereum/client-go`](https://hub.docker.com/r/ethereum/client-go).\r\n- Ubuntu packages in our [Launchpad PPA repository](https://launchpad.net/~ethereum/+archive/ubuntu/ethereum).\r\n- OSX packages in our [Homebrew Tap repository](https://github.com/ethereum/homebrew-ethereum).\r\n", "created_at": "2021-05-05T11:20:06Z", "project": "Ethereum (ETH)", "currency": "eth", "alias": "ethereum", "repo": "ethereum/go-ethereum", "type": "ethereum", "hosting": "github", "explorer": "https://cn.etherscan.com", "doc": "https://geth.ethereum.org/docs/install-and-build/installing-geth#install-on-ubuntu-via-ppas", "api": "https://eth.wiki/json-rpc/API", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Neo CLI v3.0.0-rc2", "tag_name": "v3.0.0-rc2", "html_url": "https://github.com/neo-project/neo-node/releases/tag/v3.0.0-rc2", "repo_url": "https://github.com/neo-project/neo-node", "body": "- rc2 is based on .NET 5.0 SDK, please install it from https://dotnet.microsoft.com/download/dotnet/5.0\r\n- It's a formal version which is only for rc2 Testnet. \r\n- Pay attention: We are using **a unique magic** for this version as `844378958`, which is differernt from the default.\r\n\r\n## **ChangeLog:**\r\n\r\n### Added\r\n- ([#771](https://github.com/neo-project/neo-node/pull/771/)) Add update\r\n\r\n### Changed\r\n- ([#766](https://github.com/neo-project/neo-node/pull/766)) Add network to ContractParametersContext\r\n- ([#722](https://github.com/neo-project/neo-node/pull/772)) Optimize code\r\n\r\n### Fixed\r\n- ([#769](https://github.com/neo-project/neo-node/pull/769/)) Fix default signer in OnInvokeCommand\r\n\r\n\r\nFile Hashes|\r\n------------|\r\nFile: neo-cli-portable.zip<br />SHA1: 052EECE395A4AFB68AF8DB182D3B259067628EB1<br />SHA256: A07A93FD53C391AE134B0C56779EA264523350A26F28212D13D09C2F85FE5A20|\r\nFile: neo-cli-win-x64.zip<br />SHA1: D9E91BBFC6B7503A90C4A8C678B6485A2AB91194<br />SHA256: 755ABEF7A9F025BC25CE4487759AD9C0EB2BC8F871724F865CDEF591DB0BFBC9|\r\nFile: neo-cli-linux-x64.zip<br />SHA1: E59E9674C1DE716B4DFEB2FBC4C829FB1A02F062<br />SHA256: C127CEDE4D0FC056E34DB0379DB8F4CC7029B8A69E6C6BE8807C11370F73CE77|\r\nFile: neo-cli-osx-x64.zip<br />SHA1: DCA0CAE855F821F5ADE92879527CE6BC274E7426<br />SHA256: 32FBC071A6668FCA92198599A3F23364B91FF9AE3F782A0D1E33D3B124E49322|", "created_at": "2021-05-01T11:15:51Z", "project": "Neo (NEO)", "currency": "neo", "alias": "neo", "repo": "neo-project/neo-node", "type": "neo", "hosting": "github", "explorer": "https://neoscan.io", "explorer1": "https://neotracker.io", "explorer2": "https://explorer.o3.network", "doc": "https://docs.neo.org/docs/zh-cn/node/cli/setup.html", "api": "https://docs.neo.org/docs/zh-cn/reference/rpc/latest-version/api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "0.23.3", "tag_name": "v0.23.3", "html_url": "https://github.com/Bitcoin-ABC/bitcoin-abc/releases/tag/v0.23.3", "repo_url": "https://github.com/bitcoin-ABC/bitcoin-abc", "body": "# Bitcoin ABC 0.23.3 Release Notes\r\n\r\nBitcoin ABC version 0.23.3 is now available from:\r\n\r\n  <https://download.bitcoinabc.org/0.23.3/>\r\n\r\nThis release includes the following features and fixes:\r\n - All the RPC help is now available even is the wallet is disabled\r\n - Improvements to the experimental avalanche feature\r\n", "created_at": "2021-04-30T19:29:36Z", "project": "Bitcoin Cash (BCH)", "currency": "bch", "alias": "bchn", "repo": "bitcoin-ABC/bitcoin-abc", "repo1": "https://gitlab.com/bitcoin-cash-node/bitcoin-cash-node", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bch", "explorer1": "https://blockchair.com/bitcoin-cash", "doc": "https://docs.bitcoincashnode.org/doc", "api": "https://docs.bitcoincashnode.org/doc/json-rpc/", "api1": "https://www.bitcoinabc.org/doc/0.22.6/rpc/blockchain/getblock", "add_time": "2019-12-01T00:00:00Z"}, {"name": "0.23.3", "tag_name": "v0.23.3", "html_url": "https://github.com/Bitcoin-ABC/bitcoin-abc/releases/tag/v0.23.3", "repo_url": "https://github.com/bitcoin-ABC/bitcoin-abc", "body": "# Bitcoin ABC 0.23.3 Release Notes\r\n\r\nBitcoin ABC version 0.23.3 is now available from:\r\n\r\n  <https://download.bitcoinabc.org/0.23.3/>\r\n\r\nThis release includes the following features and fixes:\r\n - All the RPC help is now available even is the wallet is disabled\r\n - Improvements to the experimental avalanche feature\r\n", "created_at": "2021-04-30T19:29:36Z", "project": "Bitcoin Cash ABC (BCHA)", "currency": "bcha", "alias": "bcha", "repo": "bitcoin-ABC/bitcoin-abc", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bha", "explorer1": "https://blockchair.com/bitcoin-abc", "doc": "https://www.bitcoinabc.org/releases/", "api": "https://www.bitcoinabc.org/doc/0.22.6/rpc/blockchain/getblock", "add_time": "2020-11-16T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/hoosmartchain/hoo-smartchain", "repo_url": "https://github.com/hoosmartchain/hoo-smartchain", "body": "", "created_at": "2021-04-30T08:00:00Z", "project": "Hoo Smart Chain (HSC)", "currency": "hsc", "alias": "hsc", "repo": "hoosmartchain/hoo-smartchain", "type": "eth", "hosting": "github", "explorer": "https://mainnet.hscscan.com", "doc": "https://docs.hoosmartchain.com/#/dev/install", "api": "https://eth.wiki/json-rpc/api", "add_time": "2021-04-30T08:00:00Z"}, {"name": "Bitcoin Core 0.21.1", "tag_name": "v0.21.1", "html_url": "https://github.com/bitcoin/bitcoin/releases/tag/v0.21.1", "repo_url": "https://github.com/bitcoin/bitcoin", "body": "Bitcoin Core version 0.21.1 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.21.1/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.21.1.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.\r\n", "created_at": "2021-04-29T19:41:07Z", "project": "Bitcoin (BTC)", "currency": "btc", "alias": "bitcoin", "repo": "bitcoin/bitcoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/btc", "explorer1": "https://btc.com", "explorer2": "https://blockchair.com/bitcoin", "explorer3": "https://blockchain.coinmarketcap.com/zh/chain/bitcoin", "explorer4": "https://sochain.com", "doc": "https://github.com/4ops/docker-bitcoin-core", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Chainweb Mainnet 2.7", "tag_name": "2.7", "html_url": "https://github.com/kadena-io/chainweb-node/releases/tag/2.7", "repo_url": "https://github.com/kadena-io/chainweb-node", "body": "This version replaces all previous versions. Any prior version will stop working on 2021-05-06T00:00:00Z. Node administrators must upgrade to this version before that date.\r\n\r\nThis version will stop working on 2021-06-17T00:00:00Z.\r\n\r\n### Changes:\r\n\r\n*   Improve P2P networking configuration. (#1174)\r\n    *   Re-add builtin bootstrap nodes. This also means that default bootstrap nodes will  be used as long as `--ignore-boostrap-nodes` (or the respective configuration file setting) is not enabled.\r\n    *   Add `X-Peer-Addr` response header that allows nodes to auto-discover their external network configuration.\r\n    *   Enable chainweb-node to auto-configure the hostname when the hostname is set to '0.0.0.0'. This eliminates the need to use a (centralized) third party service for that.\r\n    *   Validate P2P configuration on startup.\r\n    *   Validate peer configuration on startup.\r\n    *   Check that a chainweb-node can connect with a configurable portion of the known-peers and bootstrap nodes at startup. The portion can be configured via the `--bootstrap-reachability` option or the `chainweb.p2p.bootstrapReachability` setting. The value is a number between 0 and 1. If it is 0 the reachability test is disabled.\r\n\r\n*   Remove deprecated mining coordination code. (#1177)\r\n    *   Removes support for public mining.\r\n    *   Fix two race conditions in the mining API that may have slightly increased the number blocks that got orphaned before being included on the chain.\r\n\r\n*   Internal infrastructure to support bridging KDA to other networks (#1210)\r\n\r\n*   New OpenAPI 3.0 specification of the chainweb-node API. The API documentation is maintained in the git repository https://github.com/kadena-io/chainweb-openapi. It is published at https://api.chainweb.com/openapi.\r\n\r\nSee the [changelog](https://github.com/kadena-io/chainweb-node/blob/master/CHANGELOG.md#27-2021-04-29) for more information.\r\n\r\n### SHA256 Hashes:\r\n\r\n```\r\nd5abb5ff928702ab0af1b145af5d8fe5bd256c60e56cf32d1f1f26c31075f3b0  chainweb-2.7.ghc-8.10.4.ubuntu-18.04.a777484.tar.gz\r\n2d8566cfccd66454cb28c78d77373e9fc15ad8fbdbdb54bb0bbfe87b0e84e1f8  chainweb-2.7.ghc-8.10.4.ubuntu-20.04.a777484.tar.gz\r\nf452cddf2176852c06181a29263ce7c7559d14036887fd3ed8cb00191b1dfe2d  chainweb-2.7.ghc-8.10.4.macOS-latest.a777484.tar.gz\r\n```\r\n\r\n### Nix store paths:\r\n\r\nLinux: `/nix/store/mamfh0lg0xz22zpkr9hd4w92bsly8acp-chainweb-2.7`\r\nMac: `/nix/store/qr03ni6d5z9xv7cx3mnfwba8vizfz14k-chainweb-2.7`\r\n\r\n### Docker:\r\n\r\n[End-user image](https://hub.docker.com/r/kadena/chainweb-node): `docker pull kadena/chainweb-node:2.7`\r\n[Binary-only Ubuntu-20.04](https://github.com/orgs/kadena-io/packages/container/package/chainweb-node%2Fubuntu): `docker pull ghcr.io/kadena-io/chainweb-node/ubuntu:2.7`\r\n[Binary-only Alpine](https://github.com/orgs/kadena-io/packages/container/package/chainweb-node%2Falpine): `docker pull ghcr.io/kadena-io/chainweb-node/alpine:2.7`", "created_at": "2021-04-28T23:06:08Z", "project": "Kadena (KDA)", "currency": "kda", "alias": "kadena", "repo": "kadena-io/chainweb-node", "type": "polkadot", "hosting": "github", "explorer": "https://explorer.chainweb.com/mainnet", "doc": "https://medium.com/kadenacoin/how-to-operate-a-kadena-node-kda-7844622ed5b4", "api": "https://kadena-io.github.io/kadena-docs/rest-api-examples", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Algorand 2.5.6", "tag_name": "v2.5.6-stable", "html_url": "https://github.com/algorand/go-algorand/releases/tag/v2.5.6-stable", "repo_url": "https://github.com/algorand/go-algorand", "body": "![GitHub Logo](https://raw.githubusercontent.com/algorand/go-algorand/master/release/release-banner.jpg)\r\n\r\n**This release will require a protocol upgrade.**\r\nThis release contains a consensus protocol upgrade, which implements the following spec:\r\nhttps://github.com/algorandfoundation/specs/tree/d050b3cade6d5c664df8bd729bf219f179812595\r\n\r\n**Please note that the consensus upgrade window for this release is 60,000 rounds, instead of 140,000.** This means that once approved, the upgrade will take effect in a shorter time frame than a week.\r\n\r\n## Changes\r\n\r\n1. General\r\n    - Bug Fix - Fix accessing int64 atomic variables on arm32 which was causing a panic on startup on ARM32\r\n1. Ledger\r\n    - Bug Fixes\r\n        - Ensure local delta does not have entries with empty key-value stores\r\n        - Prevent storing empty accounts in DB after opting out from an app\r\n        - DB data migration for empty accounts\r\n        - compatibility mode for account index calculation in eval delta\r\n\r\n## Additional Resources\r\n* [Algorand Forum](https://forum.algorand.org)\r\n* [Developer Documentation](https://developer.algorand.org)\r\n", "created_at": "2021-04-28T16:32:28Z", "project": "Algorand (ALGO)", "currency": "algo", "alias": "algorand", "repo": "algorand/go-algorand", "type": "utxo", "hosting": "github", "explorer": "https://algoexplorer.io", "doc": "https://developer.algorand.org/docs/run-a-node/setup/install", "api": "https://developer.algorand.org/docs/reference/rest-apis/algod", "add_time": "2019-12-01T00:00:00Z"}, {"name": "GreatVoyage-v4.2.0(Plato)", "tag_name": "GreatVoyage-v4.2.0", "html_url": "https://github.com/tronprotocol/java-tron/releases/tag/GreatVoyage-v4.2.0", "repo_url": "https://github.com/tronprotocol/java-tron", "body": "## Notices\r\nForced upgrade\r\n## New Features\r\n### Core\r\n- [TIP-207](https://github.com/tronprotocol/tips/blob/master/tip-207.md) Optimize the resource model where freezing TRX can only obtain one of the three resources, namely bandwidth, energy, and TRON power. #3726\r\n### TVM\r\n- [TIP-157](https://github.com/tronprotocol/tips/blob/master/tip-157.md) Add freeze instructions in TVM. #3728\r\n### Changes\r\n- Optimize the block synchronization. #3732\r\n---\r\n*The beginning is the most important part of the work.*\r\n<p align=\"right\"> --- Plato</p>", "created_at": "2021-04-27T09:37:16Z", "project": "TRON (TRX)", "currency": "trx", "alias": "tron", "repo": "tronprotocol/java-tron", "type": "tron", "hosting": "github", "explorer": "https://tronscan.org", "doc": "https://tronprotocol.github.io/documentation-zh/developers/deployment", "api": "https://tronprotocol.github.io/documentation-zh/api/http", "add_time": "2019-12-20T00:00:00Z"}, {"name": "v1.8.0", "tag_name": "v1.8.0", "html_url": "https://github.com/filecoin-project/lotus/releases/tag/v1.8.0", "repo_url": "https://github.com/filecoin-project/lotus", "body": "# 1.8.0 / 2021-04-27\r\n\r\nThis is a mandatory release of Lotus that upgrades the network to version 12, which introduces various performance improvements to the cron processing of the power actor. The network will upgrade at height 712320, which is 2021-04-29T06:00:00Z.\r\n\r\nThe calibration network will upgrade at height 193789.\r\n\r\n## Changes \r\n\r\n- v4 specs-actors integration, nv12 migration (https://github.com/filecoin-project/lotus/pull/6116)", "created_at": "2021-04-27T07:01:34Z", "project": "Filecoin (FIL)", "currency": "fil", "alias": "fil", "repo": "filecoin-project/lotus", "type": "ipfs", "hosting": "github", "explorer1": "https://filscout.io/zh", "explorer": "https://filfox.info/zh", "doc": "https://lotu.sh/en+install-lotus-ubuntu", "api": "https://lotu.sh/en+api-methods", "add_time": "2020-09-11T09:52:00Z"}, {"name": "Release v1.6.1", "tag_name": "v1.6.1", "html_url": "https://github.com/klaytn/klaytn/releases/tag/v1.6.1", "repo_url": "https://github.com/klaytn/klaytn", "body": "# v1.6.1 Release Notes\r\n\r\n## New Features\r\n- Introduced execution deadline and max item limit for klay_getLogs and klay_getFilterLogs APIs (#903)\r\n- Introduced a metric to record hashLocked status (#932)\r\n- Added Staking Information API (governance.getStakingInfo) (#929)\r\n- Introduced an option to limit concurrency limitation of HTTP-RPC server (rpc.concurrencylimit) (#922)\r\n\r\n## Improvements\r\n- Added a condition sending a COMMIT message for resolve hash lock issue (#888)\r\n- Prefetch\r\n  - Fixed the prefech logic for multiple txs of the same sender in a block (#911)\r\n  - Enable TX prefetcher for multiple blocks (#916)\r\n  - Move prefetcher execution as early as possible (#918)\r\n  - Fixed the race condition of transaction access (#941)\r\n\r\n## Fixes\r\n- Fixed invalid validator list in extraData of block headers (#891)\r\n\r\n## Miscellaneous\r\n- Renamed an API, setMaxSubscriptionPerConn to setMaxSubscriptionPerWSConn (#897)\r\n- Renamed hardfork name, Incompatible1 to IstanbulCompatible  docs update needed (#901)\r\n\r\n## Binaries\r\n<li>Linux: <a href=http://packages.klaytn.net/klaytn/v1.6.1/kcn-v1.6.1-0-linux-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kpn-v1.6.1-0-linux-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/ken-v1.6.1-0-linux-amd64.tar.gz>ken</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kscn-v1.6.1-0-linux-amd64.tar.gz>kscn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kspn-v1.6.1-0-linux-amd64.tar.gz>kspn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/ksen-v1.6.1-0-linux-amd64.tar.gz>ksen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kbn-v1.6.1-0-linux-amd64.tar.gz>kbn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kgen-v1.6.1-0-linux-amd64.tar.gz>kgen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/homi-v1.6.1-0-linux-amd64.tar.gz>homi</a> </li><li>Darwin: <a href=http://packages.klaytn.net/klaytn/v1.6.1/kcn-v1.6.1-0-darwin-10.10-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kpn-v1.6.1-0-darwin-10.10-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/ken-v1.6.1-0-darwin-10.10-amd64.tar.gz>ken</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kscn-v1.6.1-0-darwin-10.10-amd64.tar.gz>kscn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kspn-v1.6.1-0-darwin-10.10-amd64.tar.gz>kspn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/ksen-v1.6.1-0-darwin-10.10-amd64.tar.gz>ksen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kbn-v1.6.1-0-darwin-10.10-amd64.tar.gz>kbn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kgen-v1.6.1-0-darwin-10.10-amd64.tar.gz>kgen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/homi-v1.6.1-0-darwin-10.10-amd64.tar.gz>homi</a> </li><li>Baobab-linux: <a href=http://packages.klaytn.net/klaytn/v1.6.1/kcn-baobab-v1.6.1-0-linux-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kpn-baobab-v1.6.1-0-linux-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/ken-baobab-v1.6.1-0-linux-amd64.tar.gz>ken</a> </li><li>Baobab-darwin: <a href=http://packages.klaytn.net/klaytn/v1.6.1/kcn-baobab-v1.6.1-0-darwin-10.10-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/kpn-baobab-v1.6.1-0-darwin-10.10-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.1/ken-baobab-v1.6.1-0-darwin-10.10-amd64.tar.gz>ken</a> ", "created_at": "2021-04-26T07:31:11Z", "project": "Klaytn (KLAY)", "currency": "klay", "alias": "klaytn", "repo": "klaytn/klaytn", "type": "eth", "hosting": "github", "explorer": "https://scope.klaytn.com", "doc": "https://docs.klaytn.com/node/endpoint-node/installation-guide/installation-guide", "api": "https://docs.klaytn.com/node/endpoint-node/json-rpc-apis", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Witnet-rust 1.2.1 \u2014 Fork Fix", "tag_name": "1.2.1", "html_url": "https://github.com/witnet/witnet-rust/releases/tag/1.2.1", "repo_url": "https://github.com/witnet/witnet-rust", "body": "```\r\nVersion: 1.2.1\r\nRelease type: minor\r\nCriticality: CRITICAL\r\nConsensus: non-breaking\r\nBackwards compatibility: non-breaking\r\n```\r\nThis is a CRITICAL UPGRADE. Please read the release notes for further instructions: https://medium.com/witnet/433717b5a7f6", "created_at": "2021-04-24T11:29:11Z", "project": "Witnet (WIT)", "currency": "wit", "alias": "wit", "repo": "witnet/witnet-rust", "type": "witnet", "hosting": "github", "explorer": "https://witnet.network", "doc": "https://docs.witnet.io/try/run-a-node/", "api": "https://docs.witnet.io/developer/wallet-api/", "add_time": "2021-01-15T06:00:00Z"}, {"name": "v1.0.0", "tag_name": "v1.0.0", "html_url": "https://github.com/PlatONnetwork/PlatON-Go/releases/tag/v1.0.0", "repo_url": "https://github.com/PlatONnetwork/PlatON-Go", "body": "This release is the first major release of PlatON-Go and the initial live-net version of the mainnet, it marks an important milestone for PlatON network.\r\nWe have implemented all features described in the [PlatON Economic Bluepaper](https://www.platon.network/pdf/en/PlatON_Blue_Paper_on_Economics_EN.pdf) and made some targeted optimizations based on [`Alaya`](https://www.alaya.network/)(including bug fixes):\r\n- Alternative validators qty `201`, validators qty `43`\r\n- Minimum staking amount `100,000` lat\r\n- Maximum number of consensus rounds tolerated for no-proposing blocks `20`\r\n- Slashing: number of locked epochs when no-proposing block `56`\r\n- Slashing: no-proposing block will be slashed lats latequivalent to `2500` block rewards\r\n- Number of locked epochs when unstaking `168`\r\n- Chain ID `100`\r\n- Fixed the bug of dockerfile mismatching #1537 \r\n- Fixed OOM issue caused by `platon_blockhash` function of wasm contract #1622 \r\n- Filled in `genesis block timestamp` and `genesis block manifesto`", "created_at": "2021-04-24T07:04:02Z", "project": "Alaya (ATP)", "currency": "atp", "alias": "atp", "repo": "PlatONnetwork/PlatON-Go", "type": "platon", "hosting": "github", "explorer": "https://scan.alaya.network", "doc": "https://devdocs.alaya.network/alaya-devdocs/zh-CN/Install_Node/", "api": "https://devdocs.alaya.network/alaya-devdocs/zh-CN/Json_Rpc/", "add_time": "2020-11-06T11:00:00Z"}, {"name": "v17.0.0", "tag_name": "v17.0.0", "html_url": "https://github.com/stellar/stellar-core/releases/tag/v17.0.0", "repo_url": "https://github.com/stellar/stellar-core", "body": "# Release notes:\r\n\r\nThis release enables protocol 17 support:\r\n- [CAP-0035 \u201cClawback\u201d](https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md)\r\n\r\n## Stability improvements\r\n\r\n- [Log root account address when starting new ledger](https://github.com/stellar/stellar-core/pull/3015)\r\n- [Fixes to Herder externalize path](https://github.com/stellar/stellar-core/pull/3014)\r\n- [Switch to C++ 17](https://github.com/stellar/stellar-core/pull/3013)\r\n- [Use random hashes for temp filenames](https://github.com/stellar/stellar-core/pull/3012), this fixes issues when names contains spaces\r\n- [fix confusing error message when NODE_HOME_DOMAIN is not set](https://github.com/stellar/stellar-core/pull/2987)\r\n- [Change overlay version to 17](https://github.com/stellar/stellar-core/pull/3020), also drops peers that are too old\r\n\r\n## New features\r\n- [Introduce a mode to delay streaming meta by one ledger](https://github.com/stellar/stellar-core/pull/2982), this makes it possible to configure core in an ultra-paranoid mode.\r\n- [normalize meta when using printXDR subcommand](https://github.com/stellar/stellar-core/pull/3001), this makes it easier to compare meta between systems\r\n\r\n## Breaking changes\r\n\r\nNone\r\n", "created_at": "2021-04-22T21:50:16Z", "project": "Stellar (XLM)", "currency": "xlm", "alias": "stellar", "repo": "stellar/stellar-core", "type": "stellar", "hosting": "github", "explorer": "https://steexp.com", "doc": "https://github.com/stellar/stellar-core/blob/master/INSTALL.md", "api": "https://developers.stellar.org/api/introduction", "add_time": "2019-12-20T00:00:00Z"}, {"name": "0.9.0", "tag_name": "0.9.0", "html_url": "https://github.com/near/nearup/releases/tag/0.9.0", "repo_url": "https://github.com/near/nearup", "body": "", "created_at": "2021-04-22T17:02:55Z", "project": "NEAR (NEAR)", "currency": "near", "alias": "near", "repo": "near/nearup", "type": "near", "hosting": "github", "explorer": "https://explorer.near.org", "doc": "https://docs.near.org/docs/roles/validator/hardware", "api": "https://docs.near.org/docs/api/rpc", "add_time": "2020-10-10T09:00:00Z"}, {"name": "ckb 0.41.0 (d3a609a 2021-04-22)", "tag_name": "v0.41.0", "html_url": "https://github.com/nervosnetwork/ckb/releases/tag/v0.41.0", "repo_url": "https://github.com/nervosnetwork/ckb", "body": "This version is compatible with v0.25.0 and above. However, it is recommended to upgrade the node, since we will only release security patches based on the latest release.\r\n\r\nSee [how to connect to various chains](https://github.com/nervosnetwork/ckb/wiki/Chains) in Wiki.\r\n\r\n* The dev chain sets `permanent_difficulty_in_dummy` by default and will generate a random genesis hash by default. See #2503 for details.\r\n* Now the command `ckb run` will not run database migration automatically when it is time consuming, see #2571 for details.\r\n\r\n### Downloads\r\n\r\n| OS        | Arch | Runtime Dependencies      | Package               | Sign               |\r\n| --------- | ---- | ------------------------- | --------------------- | ------------------ |\r\n| macOS     | x64  | macOS 10.12 or above | [zip][macos-zip]      | [PGP][macos-pgp]   |\r\n| Linux     | x64  | glibc, libstdc++          | [tarball][linux-zip]  | [PGP][linux-pgp]   |\r\n| CentOS    | x64  | glibc, libstdc++, openssl | [tarball][centos-zip] | [PGP][centos-pgp]  |\r\n| Windows\\* | x64  | VC++ Redistributable      | [zip][windows-zip]    | [PGP][windows-pgp] |\r\n| Docker    |      |                           | [dockerhub][]         |                    |\r\n\r\n> \\* Windows support is experimental.\r\n\r\nThe `.asc` files are signatures. It is wise and more secure to check out for the files [integrity](https://github.com/nervosnetwork/ckb/blob/develop/docs/integrity-check.md).\r\n\r\n[macos-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-apple-darwin.zip\r\n[macos-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-apple-darwin.zip.asc\r\n[linux-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-unknown-linux-gnu.tar.gz\r\n[linux-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-unknown-linux-gnu.tar.gz.asc\r\n[centos-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-unknown-centos-gnu.tar.gz\r\n[centos-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-unknown-centos-gnu.tar.gz.asc\r\n[windows-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-pc-windows-msvc.zip\r\n[windows-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.41.0/ckb_v0.41.0_x86_64-pc-windows-msvc.zip.asc\r\n[dockerhub]: https://hub.docker.com/r/nervos/ckb/tags\r\n\r\n<details><summary>Changes since v0.40.0</summary>\r\n\r\n### Features\r\n\r\n* #2503: Customize chain spec for dev chains and update few preset params (@yangby-cryptape)\r\n\r\n    - Set `permanent_difficulty_in_dummy` to `true` as default for dev chains.\r\n    - Allow users to create different dev chains by customizing genesis message.\r\n      And they could also create same chain in different directories or machines by setting a same genesis message.\r\n    - Allow users to create different dev chains by customizing genesis timestamp.\r\n      If no timestamp is provided, use current timestamp.\r\n    - Display genesis hash after CKB direcotry created.\r\n\r\n* #2571: Request the approval for database migrations (@yangby-cryptape)\r\n* #2604: Allow miner http basic authorization (@driftluo)\r\n* #2569: Add rpc `generate_block_with_template` to IntegrationTest rpc module (@quake)\r\n\r\n    This PR adds `generate_block_with_template` rpc, so that dApps can get block template from `get_block_template` rpc, and then add or remove tx / proposal / uncle data in block template, and finally submit it via this rpc to control the newly generated block data.\r\n\r\n### Bug Fixes\r\n\r\n* #2556: Resolve peer store dump issue (@quake)\r\n\r\n### Improvements\r\n\r\n* #2525: Manually trigger compaction after freeze (@zhangsoledad)\r\n\r\n    * **Drawbacks**: Even we use `DeleteRange` apply to delete the range of keys, seems Rocksdb still hasn't implemented the feature of using seek() to skip until the end of range delete end yet.\r\n    Rocksdb iter seek slows down dramatically when there are many deletes.\r\n    * **Workaround**: Manually call `CompactRange()` for the range to delete,  this approach can solve the problem.\r\n\r\n* #2595: Set `prepare_for_bulk_load` option for migration (@zhangsoledad)\r\n* #2611: Smaller block status map during IBD (@yangby-cryptape)\r\n\r\n</details>\r\n", "created_at": "2021-04-22T09:00:20Z", "project": "Nervos Network (CKB)", "currency": "ckb", "alias": "nervos", "repo": "nervosnetwork/ckb", "type": "ckb", "hosting": "github", "explorer": "https://explorer.nervos.org", "doc": "https://docs.nervos.org/getting-started/run-node.html", "api": "https://github.com/nervosnetwork/ckb/blob/master/rpc/README.md", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release 2.0.11.0.0", "tag_name": "2.0.11.0.0", "html_url": "https://github.com/blockstack/stacks-blockchain/releases/tag/2.0.11.0.0", "repo_url": "https://github.com/blockstack/stacks-blockchain", "body": "The chainstate directory has been restructured in this release. It is not compatible with prior chainstate directories. Therefore, if you are upgrading from 2.0.10.x.x or earlier versions of `stacks-node`, you will need to resync from a fresh chainstate.\r\n\r\n## Added\r\n\r\n- `/drop_mempool_tx` endpoint to notify event observers when a mempool\r\n  transaction has been removed the mempool.\r\n- `\"reward_slot_holders\"` field to the `new_burn_block` event\r\n- CTRL-C handler for safe shutdown of `stacks-node`\r\n- Log transactions in local db table via setting env `STACKS_TRANSACTION_LOG=1`\r\n- New prometheus metrics for mempool transaction processing times and\r\n  outstanding mempool transactions\r\n- New RPC endpoint with path `/v2/traits/contractAddr/contractName/traitContractName\r\n  /traitContractAddr/traitName` to determine whether a given trait is implemented \r\n  within the specified contract (either explicitly or implicitly).\r\n- Re-activate the Atlas network for propagating and storing transaction\r\n  attachments. This re-enables off-chain BNS name storage.\r\n- Re-activate microblock mining.\r\n\r\n## Changed\r\n\r\n- Improved chainstate directory layout\r\n- Improved node boot up time\r\n- Better handling of flash blocks\r\n- The `/v2/pox` RPC endpoint was updated to include more useful\r\n  information about the current and next PoX cycles. For details, see\r\n  `docs/rpc-endpoints.md`\r\n  \r\n## Fixed \r\n\r\n- Fixed faulty logic in the mempool that was still treating the transaction fee\r\n  as a fee rate, which prevented replace-by-fee from working as expected.\r\n", "created_at": "2021-04-21T20:29:06Z", "project": "Blockstack (STX)", "currency": "stx", "alias": "blockstack", "repo": "blockstack/stacks-blockchain", "type": "utxo", "hosting": "github", "explorer": "https://explorer.stacks.co/?chain=mainnet", "doc": "https://docs.blockstack.org/understand-stacks/running-mainnet-node", "api": "https://blockstack.github.io/stacks-blockchain-api/", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Added mainnet bootnodes 6-10", "tag_name": "v3.0.3", "html_url": "https://github.com/DataHighway-DHX/node/releases/tag/v3.0.3", "repo_url": "https://github.com/DataHighway-DHX/node", "body": "incl. westlake defintion", "created_at": "2021-04-21T16:44:23Z", "project": "Hoo Smart Chain (DHX)", "currency": "dhx", "alias": "dhx", "repo": "DataHighway-DHX/node", "type": "dot", "hosting": "github", "explorer": "https://datahighway.subscan.io", "doc": "https://dev.datahighway.com/docs/en/tutorials/tutorials-nodes-validator-setup", "api": "https://dev.datahighway.com/docs/en/api/rust-reference-docs", "add_time": "2021-05-11T02:00:00Z"}, {"name": "EOSIO v2.0.12 Release Notes", "tag_name": "v2.0.12", "html_url": "https://github.com/EOSIO/eos/releases/tag/v2.0.12", "repo_url": "https://github.com/EOSIO/eos", "body": "This release contains security updates and miscellaneous fixes.\r\n\r\n## Security updates\r\n\r\n### Consolidated Security Updates for v2.0.12 ([#10264](https://github.com/EOSIO/eos/pull/10264))\r\n- Apply three-strikes rule to all transaction failures\r\n- Apply unconditional subjective CPU check along with some additional logging\r\n- Provide options to enable subjective CPU billing for P2P and API transactions ,and provide an option to disable it for individual accounts\r\n\r\nThis release expands upon the subjective CPU billing introduced in ([v2.0.10](https://github.com/EOSIO/eos/tree/v2.0.10)). Subjective billing (disabled by default) can now be applied to transactions that come in from either P2P connections, API requests, or both. By setting `disable-subjective-billing` to `false` both P2P and API transactions will have subjective CPU billing applied. Using `disable-subjective-p2p-billing` and/or `disable-subjective-api-billing` will allow subjective CPU billing to be enabled/disabled for P2P transactions or API transactions respectively. Another option , `disable-subjective-account-billing = <account>`, is used to selectively disable subjective CPU billing for certain accounts while applying subjective CPU billing to all other accounts.\r\n\r\n`cleos get account` is enhanced to report `subjective cpu bandwidth`, which contains used subjective CPU billing in microseconds for a particular account on a given node.\r\n\r\nNote: These security updates are relevant to all nodes on EOSIO blockchain networks.\r\n\r\n\r\n## Other changes\r\n- ([#10155](https://github.com/EOSIO/eos/pull/10155)) [2.0.x] Improve timeouts occurring on Anka builds.\r\n- ([#10171](https://github.com/EOSIO/eos/pull/10171)) Wlb/ctest generalization for parameter tests 2.0.x\r\n- ([#10233](https://github.com/EOSIO/eos/pull/10233)) Support Running Version Tests on Fresh OS Installs\r\n- ([#10244](https://github.com/EOSIO/eos/pull/10244))  migrate boost downloads from BinTray to JFrog Artifactory - 2.0\r\n- ([#10250](https://github.com/EOSIO/eos/pull/10250)) Rel 2.0.x: Subjective CPU billing cleos enhancement and adding subjective_cpu_bill to /v1/chain/get_account result\r\n## Documentation\r\n- ([#10186](https://github.com/EOSIO/eos/pull/10186)) Add EOSIO 2.0.11 release notes to dev portal - 2.0\r\n\r\n\r\n_Disclaimer: All repositories and other materials are provided subject to this [IMPORTANT](https://github.com/EOSIO/eos/blob/58b270379e846ce6633d7a9e6a4f80dd880521a8/IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice._", "created_at": "2021-04-19T19:31:09Z", "project": "EOSIO (EOS)", "currency": "eos", "alias": "eos", "repo": "EOSIO/eos", "type": "eos", "hosting": "github", "explorer": "https://bloks.io", "doc": "https://developers.eos.io/manuals/eos/latest/nodeos/index", "api": "https://developers.eos.io/manuals/eos/latest/nodeos/rpc_apis/index", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Pending Transaction Fix", "tag_name": "1.1.86", "html_url": "https://github.com/helium/blockchain-etl/releases/tag/1.1.86", "repo_url": "https://github.com/helium/blockchain-etl", "body": "This release fixes a pending transaction race condition where the transaction would clear while the blockchain was already doing retries. This could cause pending transactions to clear but subsequently be marked as failed. \r\n\r\nThis is now fixed by ensuing that once a transaction reaches the cleared state it can not be marked as failed. ", "created_at": "2021-04-19T16:21:44Z", "project": "Helium (HNT)", "currency": "hnt", "alias": "helium", "repo": "helium/blockchain-etl", "type": "hnt", "hosting": "github", "explorer": "https://explorer.helium.com", "doc": "https://developer.helium.com/blockchain/setting-up-an-api-full-node", "api": "https://developer.helium.com/blockchain/api", "add_time": "2020-04-04T22:00:00Z"}, {"name": "4.4.0", "tag_name": "v4.4.0", "html_url": "https://github.com/zcash/zcash/releases/tag/v4.4.0", "repo_url": "https://github.com/zcash/zcash", "body": "Notable changes\r\n===============\r\n\r\nPrometheus metrics\r\n------------------\r\n\r\n`zcashd` can now be configured to optionally expose an HTTP server that acts as a Prometheus scrape endpoint. The server will respond to `GET` requests on any request path.\r\n\r\nTo enable the endpoint, add `-prometheusport=<port>` to your `zcashd` configuration (either in `zcash.conf` or on the command line). After restarting `zcashd` you can then test the endpoint by querying it with e.g. `curl http://127.0.0.1:<port>`.\r\n\r\nThe feature includes IP-level access control rules, the default being to allow connections only from localhost. Users of this feature should be aware of the threat from DNS rebinding attacks and not rely on these access control rules for security. The allowed IPs can be expanded with `-metricsallowip=<ip>`, which can specify IPs or subnets.\r\n\r\nNote that HTTPS is not supported, and therefore connections to the endpoint are not encrypted or authenticated. Access to the endpoint, including through DNS rebinding attacks, should be assumed to compromise the privacy of node operations, by the provided metrics and/or by timing side channels and so for now: **You should NOT use this feature while private keys are loaded in zcashd.**\r\n\r\nThe specific metrics names may change in subsequent releases, in particular to improve interoperability with `zebrad`.\r\n", "created_at": "2021-04-15T08:52:56Z", "project": "Zcash (ZEC)", "currency": "zec", "alias": "zcash", "repo": "zcash/zcash", "type": "utxo", "hosting": "github", "explorer": "https://explorer.zcha.in", "explorer1": "https://zcash.tokenview.com", "doc": "https://zcash.readthedocs.io/en/latest/rtd_pages/zcashd.html", "api": "https://zcash-rpc.github.io", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v0.9.6", "tag_name": "v0.9.6", "html_url": "https://github.com/darwinia-network/darwinia/releases/tag/v0.9.6", "repo_url": "https://github.com/darwinia-network/darwinia", "body": "\n### Darwinia 0.9.6\n|  Chain   | Runtime Spec Version |\n| :------: | :------------------: |\n| Darwinia |          23          |\n|   Crab   |          42          |\n\n### Boot Flag\n\n#### Darwinia\n**Run with `--chain darwinia` or leave it empty to participate in Darwinia.**\n**\u4f7f\u7528 `--chain darwinia` \u6216\u4e0d\u586b\u5199\uff0c\u53c2\u4e0e\u5230 Darwinia \u7f51\u7edc\u3002**\n\n#### Crab\n**Run with `--chain crab` to participate in Crab.**\n**\u4f7f\u7528 `--chain crab` \uff0c\u53c2\u4e0e\u5230 Crab \u7f51\u7edc\u3002**\n\n### Resource\n\n#### Binary\n|               |  Arch   | glibc (at least) | llvm (at least) | pre-build |\n| :-----------: | :-----: | :--------------: | :-------------: | :-------: |\n| General Linux | x86_64  |       2.17       |       3.8       |     \u2714\ufe0e     |\n|  RaspberryPi  | aarch64 |       2.23       |       3.8       |     \u2714\ufe0e     |\n\n#### Docker\n```docker\ndocker pull quay.io/darwinia-network/darwinia:v0.9.6\n```\n\n### Change Log\n\n#### Update(s)\n- Substrate Updates [C 468](https://github.com/darwinia-network/darwinia-common/pull/468), [C 499](https://github.com/darwinia-network/darwinia-common/pull/499)\n- Only For Darwinia Developers [T 4](https://github.com/darwinia-network/substrate-update-tracking/issues/4)\n#### Fix(es)\n- None\n#### Migration(s)\n- `darwinia_elections_phragmen::migrations_2_0_0` [C 525](https://github.com/darwinia-network/darwinia-common/pull/525)\n\n---\n\n#### Darwinia Custom\n##### Runtime\n- None\n##### Migration(s)\n- None\n\n---\n\n#### Crab Custom\n##### Runtime\n- Disable Ropsten Bridge\n##### Migration(s)\n- Move `ethbk` account's balances to multisig account #633\n", "created_at": "2021-04-12T16:09:09Z", "project": "Darwinia (CRING)", "currency": "cring", "alias": "darwinia", "repo": "darwinia-network/darwinia", "type": "polkadot", "hosting": "github", "explorer": "https://crab.subscan.io", "doc": "https://github.com/paritytech/polkadot/blob/master/doc/docker.md", "doc1": "https://docs.google.com/document/d/1z0MF60OEe-kGvTW8ggFoDg_BWt6ZMPJGrDl0Jp_HSeE/edit", "api": "https://polkadot.js.org/api/substrate/rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Bitcoin SV version 1.0.7.1 Release Notes", "tag_name": "v1.0.7.1", "html_url": "https://github.com/bitcoin-sv/bitcoin-sv/releases/tag/v1.0.7.1", "repo_url": "https://github.com/bitcoin-sv/bitcoin-sv", "body": "Version 1.0.7.1 is a critical upgrade to version 1.0.7.\r\n\r\n## List of changes since 1.0.7\r\n* Performance hardening changes to ensure performance remains stable under adverse network conditions.", "created_at": "2021-04-09T15:28:45Z", "project": "Bitcoin SV (BSV)", "currency": "bsv", "alias": "bitcoin-sv", "repo": "bitcoin-sv/bitcoin-sv", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bsv", "doc": "https://github.com/4ops/docker-bitcoin-sv", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v4.2.1", "tag_name": "v4.2.1", "html_url": "https://github.com/cosmos/gaia/releases/tag/v4.2.1", "repo_url": "https://github.com/cosmos/gaia", "body": "# Gaia v4.2.1 Release Notes\r\n\r\nA critical security vulnerability was identified in Tendermint Core, which impacts Tendermint Lite Client.\r\n\r\nThis release fixes the identified security vulnerability.\r\n\r\n```\r\nApp: gaiad\r\nVersion: v4.2.1\r\nCommit: dbd8a6fb522c571debf958837f9113c56d418f6b\r\nFiles:\r\n 29d219b0b120b3188bd7cd7249fc96b9  gaiad-v4.2.1-darwin-amd64\r\n 80338d9f0e55ea8f6c93f2ec7d4e18d6  gaiad-v4.2.1-linux-amd64\r\n 9bc77a512acca673ca1769ae67b4d6c7  gaiad-v4.2.1-linux-arm64\r\n c84387860f52178e2bffee08897564bb  gaiad-v4.2.1-windows-amd64.exe\r\n c25cca8ccceec06a6fabae90f671fab1  gaiad-v4.2.1.tar.gz\r\nChecksums-Sha256:\r\n 05e5b9064bac4e71f0162c4c3c3bff55def22ca016d34205a5520fef89fd2776  gaiad-v4.2.1-darwin-amd64\r\n ccda422cbda29c723aaf27653bcf0f6412e138eec33fba2b49de131f9ffbe2d2  gaiad-v4.2.1-linux-amd64\r\n 95f89e8213cb758d12e1b0b631285938de822d04d2e25f399e99c0b798173cfd  gaiad-v4.2.1-linux-arm64\r\n 7ef98f0041f1573f0a8601abad4a14b1c163f47481c7ba1954fd81ed423a6408  gaiad-v4.2.1-windows-amd64.exe\r\n 422883ba43c96a6ea5ef9512d39321dd1356633c6a9505517b9c651788df4a7f  gaiad-v4.2.1.tar.gz\r\n```\r\n\r\n", "created_at": "2021-04-08T21:45:07Z", "project": "Cosmos (ATOM)", "currency": "atom", "alias": "cosmos", "repo": "cosmos/gaia", "type": "cosmos", "hosting": "github", "explorer": "https://www.mintscan.io", "doc": "https://hub.cosmos.network/master/gaia-tutorials/installation.html", "api": "https://cosmos.network/rpc/master", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Omni Core v0.10.0", "tag_name": "v0.10.0", "html_url": "https://github.com/OmniLayer/omnicore/releases/tag/v0.10.0", "repo_url": "https://github.com/OmniLayer/omnicore", "body": "v0.10.0 is a major release and updates the underlying version of Bitcoin Core from 0.18.1 to 0.20.1. This comes with a significant number of changes. In this version recovering from a hard shutdown or crash was also greatly improved.\r\n\r\nWhile this release is not mandatory and doesn't change the consensus rules of the Omni Layer protocol, an upgrade is nevertheless recommended.\r\n\r\n**Due to the upgrade from Bitcoin Core 0.18.1 to 0.20.1, this version incooperates many changes, so please take your time to read through all release notes carefully.**\r\n\r\nUpgrading from 0.9.0, 0.8.2, 0.8.1 or 0.8.0 does not require a rescan and can be done very fast without interruption.\r\n\r\nPlease report bugs using the issue tracker on GitHub:\r\n\r\n  https://github.com/OmniLayer/omnicore/issues\r\n\r\n\r\nTable of contents\r\n=================\r\n\r\n- [Omni Core v0.10.0](#omni-core-v082)\r\n- [Upgrading and downgrading](#upgrading-and-downgrading)\r\n  - [How to upgrade](#how-to-upgrade)\r\n  - [Downgrading](#downgrading)\r\n  - [Compatibility with Bitcoin Core](#compatibility-with-bitcoin-core)\r\n- [Improvements](#improvements)\r\n  - [Built on top of Bitcoin Core 0.20.1](#built-on-top-of-bitcoin-core-0201)\r\n  - [Improved coin selection, when sending Omni Layer transactions](#improved-coin-selection-when-sending-omni-layer-transactions)\r\n  - [Better recovery from hard shutdowns or crashes](#better-recovery-from-hard-shutdowns-or-crashes)\r\n  - [Additional testing](#additional-testing)\r\n- [Change log](#change-log)\r\n- [Credits](#credits)\r\n\r\n\r\nUpgrading and downgrading\r\n=========================\r\n\r\nHow to upgrade\r\n--------------\r\n\r\nIf you are running Bitcoin Core or an older version of Omni Core, shut it down. Wait until it has completely shut down, then copy the new version of `omnicored`, `omnicore-cli` and `omnicore-qt`. On Microsoft Windows the setup routine can be used to automate these steps.\r\n\r\nWhen upgrading from an older version than 0.8.0, the database of Omni Core is reconstructed, which can easily consume several hours. During the first startup historical Omni Layer transactions are reprocessed and Omni Core will not be usable for several hours up to more than a day. The progress of the initial scan is reported on the console, the GUI and written to the `debug.log`. The scan may be interrupted and can be resumed.\r\n\r\nUpgrading from 0.9.0, 0.8.2, 0.8.1 or 0.8.0 does not require a rescan and can be done very fast without interruption.\r\n\r\nDowngrading\r\n-----------\r\n\r\nDowngrading to an Omni Core version prior to 0.8.0 is not supported.\r\n\r\nCompatibility with Bitcoin Core\r\n-------------------------------\r\n\r\nOmni Core is based on Bitcoin Core 0.20.1 and can be used as replacement for Bitcoin Core. Switching between Omni Core and Bitcoin Core may be supported.\r\n\r\nHowever, it is not advised to upgrade or downgrade to versions other than Bitcoin Core 0.18. When switching to Omni Core, it may be necessary to reprocess Omni Layer transactions.\r\n\r\n\r\nImprovements\r\n============\r\n\r\nBuilt on top of Bitcoin Core 0.20.1\r\n-----------------------------------\r\n\r\nThe underlying base of Omni Core was upgraded from Bitcoin Core 0.18.1 to Bitcoin Core 0.20.1.\r\n\r\nPlease read the following release notes for further details very carefully:\r\n\r\n- [Release notes for Bitcoin Core 0.19.0](https://github.com/bitcoin/bitcoin/blob/v0.20.1/doc/release-notes/release-notes-0.19.0.1.md)\r\n- [Release notes for Bitcoin Core 0.19.1](https://github.com/bitcoin/bitcoin/blob/v0.20.1/doc/release-notes/release-notes-0.19.1.md)\r\n- [Release notes for Bitcoin Core 0.20.0](https://github.com/bitcoin/bitcoin/blob/v0.20.0/doc/release-notes.md)\r\n- [Release notes for Bitcoin Core 0.20.1](https://github.com/bitcoin/bitcoin/blob/v0.20.1/doc/release-notes.md)\r\n\r\n\r\nImproved coin selection, when sending Omni Layer transactions\r\n------------------------------------------------------------\r\n\r\nWhen creating and sending Omni Layer transactions, a certain transaction fee must be paid in Bitcoin.\r\n\r\nDuring transaction creation, the amount of fee needed is estimated. In the past, this estimation was rather genereous, resulting in a failure during transaction creation, even when enough Bitcoin were available to create a transaction. In this release, the fee estimation was optimized.\r\n\r\n\r\nBetter recovery from hard shutdowns or crashes\r\n----------------------------------------------\r\n\r\nAfter a hard shutdown, kill or crash, Omni Core sometimes lost it's database, because it was not properly saved and became corrupted. Restoring from an old state was not possible, which resulted in a very time consuming process of reparsing old transactions.\r\n\r\nWith this release, Omni Core is able to properly recover from an older state, without the need of a very time consuming reprocessing of old transactions.\r\n\r\n\r\nAdditional testing\r\n----------------\r\n\r\nMore tests were added to Omni Core.\r\n\r\n\r\nChange log\r\n==========\r\n\r\nThe following list includes relevant pull requests merged into this release:\r\n\r\n```\r\n- #1186 Bitcoin 0.20.1\r\n- #1191 [tests] check free DEx behaviour against DEx spec\r\n- #1193 Omni overview updates\r\n- #1194 Add Free DEx and fee cache tests\r\n- #1197 Integrate Bitcoin Core 0.20 patches\r\n- #1198 Additional changes missing from 0.20 merge\r\n- #1199 Qt disable wallet change in main window\r\n- #1200 Update version to 0.9.99 to indicate development\r\n- #1201 Reduce amount selected for use in transactions\r\n- #1210 cli tool: add Content-Type application/json\r\n- #1213 If watermark not in block index load from state files\r\n- #1214 Bump version and tests to 0.10\r\n- #1215 Add release notes for Omni Core 0.10\r\n- #1219 Trim Gitian build targets\r\n```\r\n\r\n\r\nCredits\r\n=======\r\n\r\nThanks to everyone who contributed to this release, especially to Peter Bushnell.", "created_at": "2021-04-08T17:34:41Z", "project": "Omni (OMNI)", "currency": "usdt", "alias": "omni", "repo": "OmniLayer/omnicore", "type": "utxo", "hosting": "github", "explorer": "https://www.omniexplorer.info", "doc": "https://github.com/mpugach/docker_omnicored", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Oxygen Orion, Major Point Release 2", "tag_name": "v0.17.2.0", "html_url": "https://github.com/monero-project/monero/releases/tag/v0.17.2.0", "repo_url": "https://github.com/monero-project/monero", "body": "# Overview\r\n\r\nThis is the v0.17.2.0 point release of the Monero software. This release contains bug fixes and daemon stability improvements.\r\n\r\nSome highlights of this point release are:\r\n\r\n- Only print blocked nodes once with --enable-dns-blocklist (#7295)\r\n- Fix Mac serialization compatibility issues (#7350)\r\n- Fix potential crash with Trezor (#7336)\r\n- Fix daemon crash with --db-sync-mode fastest (#7362)\r\n- Daemon stability improvements (#7309, #7390, #7459, #7615, #7621)\r\n- Bump OpenSSL dependency to 1.1.1k (#7637)\r\n- Minor bug fixes\r\n\r\n# Contributors for this Release\r\n\r\nThis release was the direct result of 9 people who worked, largely unpaid and altruistically, to put out 39 commits containing 1146 new lines of code. We'd like to thank them very much for their time and effort. In no particular order they are:\r\n\r\n- luigi1111\r\n- ndorf\r\n- moneromooo\r\n- anon\r\n- selsta\r\n- mj-xmr\r\n- sech1\r\n- hyc\r\n- ph4r05\r\n\r\n# Official Download Links\r\n\r\n[Windows, 64-bit](https://downloads.getmonero.org/cli/monero-win-x64-v0.17.2.0.zip)\r\n[Windows, 32-bit](https://downloads.getmonero.org/cli/monero-win-x86-v0.17.2.0.zip)\r\n[macOS, 64-bit](https://downloads.getmonero.org/cli/monero-mac-x64-v0.17.2.0.tar.bz2)\r\n[Linux, 64-bit](https://downloads.getmonero.org/cli/monero-linux-x64-v0.17.2.0.tar.bz2)\r\n[Linux, 32-bit](https://downloads.getmonero.org/cli/monero-linux-x86-v0.17.2.0.tar.bz2)\r\n[Linux, armv7](https://downloads.getmonero.org/cli/monero-linux-armv7-v0.17.2.0.tar.bz2)\r\n[Linux, armv8](https://downloads.getmonero.org/cli/monero-linux-armv8-v0.17.2.0.tar.bz2)\r\n[Android, armv7](https://downloads.getmonero.org/cli/monero-android-armv7-v0.17.2.0.tar.bz2)\r\n[Android, armv8](https://downloads.getmonero.org/cli/monero-android-armv8-v0.17.2.0.tar.bz2)\r\n[FreeBSD, 64-bit](https://downloads.getmonero.org/cli/monero-freebsd-x64-v0.17.2.0.tar.bz2)\r\n\r\n# Download Hashes\r\n\r\nIf you would like to verify that you have downloaded the correct file, please use the following SHA256 hashes:\r\n\r\n```\r\nmonero-win-x64-v0.17.2.0.zip, 71e531a0f799c80e3f6319888bd5b85a737091b9bd5d66366cae036163857caf\r\nmonero-win-x86-v0.17.2.0.zip, c772070ebdfe9e0d6abda5073808e648e69f8c35f8010e66b80f45a6bdb01792\r\nmonero-mac-x64-v0.17.2.0.tar.bz2, 2e95dc107ab0dab36f5544bec040180264256e45407c383cfb45cfe328fe42e0\r\nmonero-linux-x64-v0.17.2.0.tar.bz2, 59e16c53b2aff8d9ab7a8ba3279ee826ac1f2480fbb98e79a149e6be23dd9086\r\nmonero-linux-x86-v0.17.2.0.tar.bz2, e8a39be486549908c10524d851a006c21c30b1a49142586aff0a17e7c4d46077\r\nmonero-linux-armv8-v0.17.2.0.tar.bz2, a004fad5348549e2f1610380775353f19db7cbca0cbe4acbfab87832c484da62\r\nmonero-linux-armv7-v0.17.2.0.tar.bz2, b5986d6dfbddee14e32b28305dd0dc6352c18b632f569227f2c7265ef7dc5081\r\nmonero-android-armv8-v0.17.2.0.tar.bz2, b8a353f02feaee9aae3d279c043ea33a32413a298d8b6122d00a65508f15169d\r\nmonero-android-armv7-v0.17.2.0.tar.bz2, 815341f7d46f75a8905f8b51932e1034a7f6b1669757ff48224632d08339d1bf\r\nmonero-freebsd-x64-v0.17.2.0.tar.bz2, 34ef5702a050298f48ccea7db992137bc98c8e6eba45ecd90b47ce0a4b7bf0f8\r\n```\r\n\r\nA GPG-signed list of the hashes is at [https://getmonero.org/downloads/hashes.txt](https://getmonero.org/downloads/hashes.txt) and should be treated as canonical, with the signature checked against the appropriate GPG key in the source code (in /utils/gpg_keys). To ensure that the files you download are those originally posted by the maintainers, you should both check that the hashes of your files match those on the signed list, and that the signature on the list is valid.", "created_at": "2021-04-07T23:07:22Z", "project": "Monero (XMR)", "currency": "xmr", "alias": "monero", "repo": "monero-project/monero", "type": "monero", "hosting": "github", "explorer": "http://moneroblocks.info", "doc": "https://web.getmonero.org/zh-cn/resources/user-guides/vps_run_node.html", "api": "https://web.getmonero.org/resources/developer-guides/daemon-rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Kava-7 Release", "tag_name": "v0.14.1", "html_url": "https://github.com/Kava-Labs/kava/releases/tag/v0.14.1", "repo_url": "https://github.com/Kava-Labs/kava", "body": "This is the release of the proposed software for kava-7. Unless a higher version of v0.14 is released, this should be considered the proposed software for the kava-7 mainnet upgrade on April 8th, 2021 at 15:00 UTC. For further information about the upgrade, see the [migration doc](https://github.com/Kava-Labs/kava/blob/master/migrate/v0_14/migrate.md).", "created_at": "2021-04-05T15:12:41Z", "project": "Kava (KAVA)", "currency": "kava", "alias": "kava", "repo": "Kava-Labs/kava", "type": "cosmos", "hosting": "github", "explorer": "https://kava.mintscan.io", "explorer1": "https://kava.bigdipper.live", "doc": "https://docs.kava.io/#installation", "doc1": "https://mp.weixin.qq.com/s/HFj7bYqQ7FrjR_89jj-QWQ", "api": "https://rpc.kava.io", "add_time": "2020-03-03T12:00:00Z"}, {"name": "dcrd v1.6.2", "tag_name": "release-v1.6.2", "html_url": "https://github.com/decred/dcrd/releases/tag/release-v1.6.2", "repo_url": "https://github.com/decred/dcrd", "body": "# dcrd v1.6.2\r\n\r\nThis is a patch release of dcrd to introduce a quality of life change for lightweight clients, such as SPV wallets, by not sending them a certain class of announcements that only full nodes are equiped to handle.\r\n\r\n## Changelog\r\n\r\nThis patch release consists of 2 commits from 1 contributor which total to 3 files changed, 55 additional lines of code, and 31 deleted lines of code.\r\n\r\nAll commits since the last release may be viewed on GitHub [here](https://github.com/decred/dcrd/compare/release-v1.6.1...release-v1.6.2).\r\n\r\n### Protocol and network:\r\n\r\n- server: Only send fast block anns to full nodes ([decred/dcrd#2609](https://github.com/decred/dcrd/pull/2609))\r\n\r\n### Misc:\r\n\r\n- release: Bump for 1.6.2 ([decred/dcrd#2629](https://github.com/decred/dcrd/pull/2629))\r\n\r\n### Code Contributors (alphabetical order):\r\n\r\n- Dave Collins", "created_at": "2021-03-30T17:57:07Z", "project": "Decred (DCR)", "currency": "dcr", "alias": "decred", "repo": "decred/dcrd", "type": "utxo", "hosting": "github", "explorer": "https://mainnet.decred.org", "explorer1": "https://dcrdata.decred.org/", "doc": "https://docs.decred.org/advanced/full-node", "api": "https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v2.0.23", "html_url": "https://github.com/HorizenOfficial/zen/releases/tag/v2.0.23", "repo_url": "https://github.com/HorizenOfficial/zen", "body": "Binaries\r\n=========\r\nWindows and macOS binaries are signed with a valid certificate,\r\nsee included instructions.txt for Win/Mac command line wallets.\r\n\r\nInstall\r\n=========\r\nDebian package dependencies:\r\n\r\n```\r\nDepends amd64: libc6 (>= 2.18), libgcc1 (>= 1:4.2), libgomp1 (>= 4.9), libstdc++6 (>= 5.2)\r\nDepends arm64: libc6 (>= 2.25), libgcc1 (>= 1:4.2), libgomp1 (>= 4.9), libstdc++6 (>= 7)\r\n```\r\n\r\n\r\nNotable changes\r\n===============\r\n\r\n* `-reindexfast` - Rebuild block chain index from current blk000??.dat files on startup, skipping expensive checks for blocks below checkpoints. Faster sync speed by skipping expensive checks for blocks below checkpoints. #350\r\n* Improve tracking of penalized chains by adding optional argument --with-penalties=true/false to 'getchaintips' RPC call #348\r\n* Added tests for block halving #342\r\n* Update OpenSSL dependency #365 #374\r\n* Modify contrib/linearize to work with zend #362", "created_at": "2021-03-26T15:00:28Z", "project": "Horizen (ZEN)", "currency": "zen", "alias": "zen", "repo": "HorizenOfficial/zen", "type": "utxo", "hosting": "github", "explorer": "https://explorer.zensystem.io", "explorer1": "https://zen.tokenview.com", "doc": "https://github.com/HorizenOfficial/zen-node-docker", "api": "https://docs.horizen.io/en/latest/reference/index.html", "add_time": "2020-11-30T12:00:00Z"}, {"name": "", "tag_name": "release@1.0.14l", "html_url": "https://github.com/yottachain/YTDataNode/commit/230eb5806d96efc314cc94c5e4847d177300e409", "repo_url": "https://github.com/yottachain/YTDataNode", "body": "Merge branch 'p2p-test' into release", "created_at": "2021-03-19T07:42:35Z", "project": "YOTTA (YTA)", "currency": "yta", "alias": "yta", "repo": "yottachain/YTDataNode", "type": "eos", "hosting": "github", "explorer": "https://yottascan.io/zh/overview", "doc": "https://www.yottachain.io/zh/developer/", "api": "https://static.yottachain.net/download/YTA%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%20.pdf", "add_time": "2020-11-04T04:00:00Z"}, {"name": "Mainnet FastLane v0.20.2 - Hard Fork - 32 seconds blocks - Improvements and Bug fixes", "tag_name": "mainnet-fastlane-v0.20.2", "html_url": "https://github.com/qtumproject/qtum/releases/tag/mainnet-fastlane-v0.20.2", "repo_url": "https://github.com/qtumproject/qtum", "body": "* v0.20.2 \u2013 Hard Fork - **Mandatory Update before block 845000** (806600 in testnet) \u2013 32 seconds blocks - Improvements and Bug fixes\r\n\t* Implement [QIP 26](https://github.com/qtumproject/qips/issues/26): Reduce block time to 32 seconds.\r\n\t* Update the EVM to include Istanbul and Muir Glacier updates: [EIP 152](https://eips.ethereum.org/EIPS/eip-152), [EIP 1108](https://eips.ethereum.org/EIPS/eip-1108), [EIP 1344](https://eips.ethereum.org/EIPS/eip-1344), [EIP 1884](https://eips.ethereum.org/EIPS/eip-1884), [EIP 2028](https://eips.ethereum.org/EIPS/eip-2028), [EIP 2200](https://eips.ethereum.org/EIPS/eip-2200), [EIP 2384](https://eips.ethereum.org/EIPS/eip-2384).\r\n\t* New highly efficient Staker with multithread support.\r\n\t* Speed up GUI wallet startup time.\r\n\t* Improve GUI responsiveness when dealing with large wallets.\r\n\t* Add `listconf` rpc call to list active configuration options for `qtumd`/`qtum-qt`.\r\n\t* Add `forceinitialblocksdownloadmode` rpc call to force start a node in initial blocks download mode.\r\n\t* Add bloom filter, state and utxo roots to `gettransactionreceipt` rpc call.\r\n\t* Fix a focus bug that affected the amount textbox (issue #878).\r\n\t* Fix possible PoS bnTarget overflow in some rare cases.\r\n\t* Fix a bug that caused the wallet not to revert coinstake in some cases.\r\n\t* Fix a bug in call contract GUI when decoding ABI from newer solidity versions.\r\n\t* Remove obsolete Qmix link in Qt wallet.\r\n\t* Fix build with boost 1.75\r\n\t* Fix mac deploy for osx 11\r\n\t* Add debug information when certain transaction types get rejected.\r\n\t* Delete forked block indexes from disk when using `-cleanblockindex`.\r\n\t* Fix GUI wallet staking icon flicker in some cases.\r\n\t* Set EVM chainID for Qtum to 0x51\r\n\r\nHash validation\r\n----------------\r\n\r\nIf you would like to validate that the binaries you download are exactly the same as those provided and built by the Qtum team, then you can compare your binaries to the following sha256sum hashes:\r\n\r\n```\r\n51a1fb2726b6ce99b15743bbe2db81fd1d1352ca2473d07d10625a2fea48c36d  qtum-0.20.2-aarch64-linux-gnu-debug.tar.gz\r\nabf6b42e43b365224f6ace6a934c907fef564b4d7a00304bcd0b36a38689653d  qtum-0.20.2-aarch64-linux-gnu.tar.gz\r\n47a60f4c98e384bdd9280e60b04afd22652b25c343f496b5e867cf674b9e3f60  qtum-0.20.2-arm-linux-gnueabihf-debug.tar.gz\r\na0f56b7abff5e2b15ac46e1c1b25bb39b6f0371dca162ccf5058ff8ac6e5273a  qtum-0.20.2-arm-linux-gnueabihf.tar.gz\r\n86eadc10d4ff4328b9bb18630fe8a04b7108f2f45bbb0e9f96dfa98467e6ec31  qtum-0.20.2-riscv64-linux-gnu-debug.tar.gz\r\n7193882e6696dfc83e755a1c832853f6703120ef869175e9bc9a4ffbbc594249  qtum-0.20.2-riscv64-linux-gnu.tar.gz\r\n6e0efa9d2958c8d6f32ba01a2466c8358e616a7d3a5e1969749d14470e6d631b  qtum-0.20.2-x86_64-linux-gnu-debug.tar.gz\r\n52d746f2fb827c43cd8e1784a29ad6d21b843141b85002a49a3822ceebe8651d  qtum-0.20.2-x86_64-linux-gnu.tar.gz\r\n099a4f094e6eb50db9b849a824df3407daadcca9713c5a941557f791759b5ad8  qtum-core-linux-0.20-res.yml\r\n\r\na9a6c2db1c7cf7cf476f5b0d914e92c842003f030c4377483812812120f53b6e  qtum-0.20.2-win-unsigned.tar.gz\r\ndfeeee80c4d5798b56a8ccaf8cb8826ab926247f6f29db3ef4c29637386e1f91  qtum-0.20.2-win64-debug.zip\r\n3071466f94f474a28ed0f324ffef67c5f58d1eb38541a2aec030547246234670  qtum-0.20.2-win64-setup-unsigned.exe\r\nbdd3afc7e1339f7accbad1a4269deacecbceed4b92870436475266126f261ff0  qtum-0.20.2-win64.zip\r\n06a5b844a7735d38e71f372e110b817b9e915e22323d4bf3cdf4f0726c235e72  qtum-core-win-0.20-res.yml\r\n\r\n4d789ef04de65a86bb640aa658dd441fcc296fbf08ef6fd471ec06de767e93da  qtum-0.20.2-osx-unsigned.dmg\r\nee10b55a1248019e4a62b928ff4bee9388d099a7b538b5634c5893cb6505826b  qtum-0.20.2-osx-unsigned.tar.gz\r\n14538ea562ae3e8fcfb8b7ae265fd4a74c0d041384da2c62b1a0ef6d9b82cc64  qtum-0.20.2-osx64.tar.gz\r\n59d8a676c8ba71c404e3f8bbaabde6098ca53b96c069f8ce41310f8f322afbab  qtum-core-osx-0.20-res.yml\r\n\r\ne5b8a5d5152613f24b7a3e6474e7672345ec2d57cd52957ff3f9c2716cfc49f3  src/qtum-0.20.2.tar.gz\r\n\r\n```", "created_at": "2021-03-18T22:05:26Z", "project": "Qtum (QTUM)", "currency": "qtum", "alias": "qtum", "repo": "qtumproject/qtum", "type": "utxo", "hosting": "github", "explorer": "https://qtum.info", "explorer1": "https://explorer.qtum.org", "doc": "https://docs.qtum.site/zh/Launch-Qtum-with-Docker.html", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release 2.4.1.0", "tag_name": "N.2.4.1.0", "html_url": "https://github.com/ArweaveTeam/arweave/releases/tag/N.2.4.1.0", "repo_url": "https://github.com/ArweaveTeam/arweave", "body": "The release's main goal is to improve the efficiency of the new SPoRA miner.\r\n\r\nThe changes include:\r\n\r\n- blob storage for chunks optimized for random reads tailored specifically to the miner;\r\n- the recall byte computation - the only mining operation on the Erlang side that takes ~100 us per chunk - is re-implemented in C;\r\n- Erlang VM tuning;\r\n- a more streamlined and configurable mining server.\r\n\r\n### Upgrade note\r\n\r\nThere is no automatic migration to the new storage, only the new data is written there. You can still mine with existing data; however, you need to sync from scratch to achieve the largest performance gain. If you run the new version with existing storage, run it with `enable search_in_rocksdb_when_mining`.\r\n\r\nSee [the new version of the mining guide](https://docs.arweave.org/info/mining/mining-guide) for more details on tuning the node. Also, the new storage contains sparse files - you need to account for it if you copy your data from one place to another. You can find more information about it in the guide.\r\n\r\n### Other improvements\r\n\r\n- Transaction processing performance is improved a bit in response to increased transaction volumes.\r\n- The `rocksdb` and `chunk_storage` folders can reside on their own disks now, and the node would still track the amount of available space. These folders contain all the data required during mining. E.g., a fast nvme SSD drive can be mounted to these folders while the rest of the data may be on a cheaper HDD disk.\r\n- A few issues with the peering logic are fixed (no more `ar_bridge_update_peers_process_is_stuck` logs).\r\n- An improvement in the block propagation logic is made where nodes re-send a block to some of the best peers who did not know the previous block at the time of the first attempt, usually when two successive blocks are mined close in time. Previously, those peers had to ask for the missing blocks themselves.\r\n- Serving HTML over `/tx/[id]/data.html` and `/[id]` can be optionally disabled via the `disable serve_html_data` command line setting.\r\n- The joining procedure is made more reliable to make it easier to join when the recent blocks are big.\r\n- The broken `disk_space` setting is fixed.\r\n\r\n### Upgrade instructions\r\n\r\nN.2.4.1.0 comes with the prebuilt binaries for the Linux and Darwin x86_64 platforms.\r\n\r\nDownload the corresponding archive and unpack it:\r\n\r\n```\r\ntar -xzf arweave-2.4.1.0.linux-x86_64.tar.gz\r\n```\r\n\r\nIt makes sense to unpack it inside a dedicated directory. You can always move this directory around, but the miner may not work if you move only some of the files. The weave data would, by default, be stored in this directory, too, but it can be overridden using the data_dir command-line argument.\r\nThe archive contents look like this:\r\n\r\n```\r\nbin/  data/  erts-10.3/  lib/  releases/\r\n```\r\n\r\nTo run the miner, execute ./bin/start <arguments>. See the mining guide for more details.\r\nIf your OS/platform architecture is not in the list, check README for how to build the miner from sources.\r\n\r\nIf you want to run the miner from the existing Git folder, execute the following command to upgrade:\r\n\r\n```\r\ngit fetch --all --tags && git checkout -f N.2.4.1.0\r\n```\r\n\r\nYou can now run the miner using the arweave-server script.\r\n\r\n### Support\r\n\r\nFor more details on how to run a mining node, please see our mining guide - https://docs.arweave.org/info/mining/mining-guide. If you have any issues upgrading or would like to know more about the release, feel free to reach out to us in the #mining channel on Discord Arweave Dev Talk server (https://discord.gg/DjAFMJc) or email us at team@arweave.org.", "created_at": "2021-03-18T15:07:09Z", "project": "Arweave (AR)", "currency": "ar", "alias": "arweave", "repo": "ArweaveTeam/arweave", "type": "ar", "hosting": "github", "explorer": "https://viewblock.io/arweave", "doc": "https://www.arweave.org/mine/start", "api": "https://docs.arweave.org/developers/server/http-api", "add_time": "2020-05-12T10:00:00Z"}, {"name": "v2.2.0(Bin) v1.13.0(Lib)", "tag_name": "v2.2.0", "html_url": "https://github.com/ontio/ontology/releases/tag/v2.2.0", "repo_url": "https://github.com/ontio/ontology", "body": "currently running on **mainnet**.\r\n\r\n### Notices\r\n**All nodes need upgrade**.\r\n\r\n### New Features\r\n* add GraphQL api \r\n* destroyed contract is recorded, and can not be redeployed.\r\n\r\n### Improvement and Bug fix\r\n* add wasm debug info (#1295)\r\n* try to actively fetch proposal msg if endorse msg received first.(#1292)\r\n* fix getConsensusedCommittedBlockNum (#1284)\r\n* Add testmode check in initNodeInfo (#1275)\r\n\r\n### Breaking Changes\r\n\r\n\r\n### md5sum\r\nFile| md5sum\r\n------------ | -------------\r\nontology-darwin-amd64 | 4a5046a8abd0c4c16b93684f045177b9\r\nontology-linux-amd64 | 386eb9b90ebfd50ef089081b046dbf45\r\ntool-linux.zip | 6c4c503db1e95a6478afca26f515343f\r\ntool-darwin.zip | 4a3784a822b677b88ad7e75991e02de8\r\n\r\n\r\n### Change Log Since v2.1.0\r\n* tracking destroyed contract (#1299)\r\n* add wasm debug info (#1295)\r\n* try to actively fetch proposal msg if endorse msg received first.(#1292)\r\n* add Governance doc (#1294)\r\n* add wasm debug info (#1293)\r\n* fix getConsensusedCommittedBlockNum (#1284)\r\n* implement graphql api (#1274)\r\n* provide more error info (#1280)\r\n* update docker file (#1278)\r\n* fix static check lint issue (#1277)\r\n* Add testmode check in initNodeInfo (#1275)\r\n* add sign hash based on chain id for transaction (#1273)\r\n", "created_at": "2021-03-18T02:21:26Z", "project": "Ontology (ONT)", "currency": "ont", "alias": "ontology", "repo": "ontio/ontology", "type": "ontology", "hosting": "github", "explorer": "https://explorer.ont.io", "doc": "https://docs.ont.io/ontology-node/node-deployment", "api": "https://docs.ont.io/developer-tools/api/http-api/restful", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v0.19.1.10", "tag_name": "v0.19.1.10", "html_url": "https://github.com/ghost-coin/ghost-core/releases/tag/v0.19.1.10", "repo_url": "https://github.com/ghost-coin/ghost-core", "body": "Emergency HF (ring-ct vulnerability)\r\n\r\nHashes:\r\n```\r\nee92b26a3473c0b67e7dd476b4d71f3b0eb68a17e9c63785128f3de1cca5de24  ghost-0.19.1.10.tar.gz\r\nf33f0d5a92026e7683612d771268043e1001903229bfd43ed67b4e2f54cb0056  ghost-0.19.1.10-win32.zip\r\na5d42f83e459500bdb6859023253213a7a079abac0574042c8a5495c7c4a8f94  ghost-0.19.1.10-win64.zip\r\n277f565a5d97a5e907fc4b828e136fc41557192181fdae7d7baa541d38abf6dc  ghost-0.19.1.10-osx64.tar.gz\r\n0190e4f619cbfd61a9b104a2ec6de1694486907c4179ee4cb281e4d7a016843d  ghost-0.19.1.10-x86_64-linux-gnu.tgz\r\nd368197ce7e40cafc68b641dd8b2c79e806212ace8d2974e1ce892a9bfab8c8c  ghost-0.19.1.10-arm-linux-gnueabihf.tar.gz\r\n```", "created_at": "2021-03-01T09:11:55Z", "project": "Ghost (GHOST)", "currency": "ghost", "alias": "ghost", "repo": "ghost-coin/ghost-core", "type": "utxo", "hosting": "github", "explorer": "https://ghostscan.io", "explorer1": "https://www.ghostin.io", "doc": "https://github.com/ghost-coin/ghost-core/tree/master/doc", "api": "https://github.com/ghost-coin/ghost-core/blob/master/doc/REST-interface.md", "add_time": "2020-08-18T10:00:00Z"}, {"name": "Dogecoin Core 1.14.3", "tag_name": "v1.14.3", "html_url": "https://github.com/dogecoin/dogecoin/releases/tag/v1.14.3", "repo_url": "https://github.com/dogecoin/dogecoin", "body": "This is a new minor update that includes important performance improvements. It is a strongly recommended update for everyone.\r\n\r\n*This release can be installed over an existing 1.14 installation seamlessly, without the need for uninstallation, re-indexation or re-download.* Simply shut down your running Dogecoin-QT or dogecoind, perform the installation and restart your node.\r\n\r\nImprove synchronization speed\r\n----------------------------\r\n\r\nSignificantly improves the speed at which a node can upload blocks, by removing expensive integrity checks that were performed each time a block is sent to another node. When a block is received and during rescans of the locally stored blockchain, the checks are still performed.\r\n\r\nReduce default mempool expiry time\r\n----------------------------------\r\n\r\nReduces the default time that transactions are cached in the mempool from 336 hours to 24 hours. This default setting can be overridden with the `-mempoolexpiry` parameter by individual node operators to a value (expressed in hours) that makes the most sense for the use cases the node serves.\r\n\r\nOther changes and improvements\r\n----------------------------------\r\n\r\n* Increase block download timeouts\r\n* Add size_on_disk, prune_target_size, automatic_pruning to getblockchaininfo\r\n* Add query options to listunspent RPC call\r\n* Set BIP65 softfork heights in chainparams.cpp.\r\n* Update package links for OSX cross compilation.\r\n* Change IPC prefix from `bitcoin:` to `dogecoin:`.\r\n* Locale independent sorting.\r\n* Corrections to Italian translation.\r\n* Refresh main and test network checkpoints and seeds.\r\n* Do not print an error on connection timeouts through proxy.\r\n* Numerous fixes to automated tests.\r\n* Numerous fixes to documentation.\r\n", "created_at": "2021-02-28T17:39:36Z", "project": "Dogecoin (DOGE)", "currency": "doge", "alias": "dogecoin", "repo": "dogecoin/dogecoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/doge", "explorer1": "https://sochain.com/doge", "doc": "https://github.com/dogecoin/dogecoin", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release v2.0.9", "tag_name": "v2.0.9", "html_url": "https://github.com/chainx-org/ChainX/releases/tag/v2.0.9", "repo_url": "https://github.com/chainx-org/ChainX", "body": "\r\nUpgrade priority:\r\n\r\n- [x] **Medium** (upgrade at your earliest convenience)\r\n- [ ] **High** (upgrade ASAP)\r\n\r\nWASM runtime built with [srtool](https://hub.docker.com/r/chainxorg/srtool) using `rustc 1.48.0-nightly (381b445ff 2020-09-29)`.\r\n\r\nchainx runtime proposal hash: `0xa919dc70d5d3f61365065adf46ad67181424c537e79db4128fc378f39d9bb30d`.\r\n\r\nNative runtime version: **10**\r\n\r\n#### Changes\r\n\r\n##### Runtime\r\n\r\n- Integrate Proxy module (https://github.com/chainx-org/ChainX/pull/478)\r\n\r\n##### Others\r\n\r\nN/A\r\n\r\n", "created_at": "2021-02-25T04:46:52Z", "project": "ChainX (PCX)", "currency": "pcx", "alias": "chainx", "repo": "chainx-org/ChainX", "type": "polkadot", "hosting": "github", "explorer": "https://scan-v2.chainx.org", "doc": "https://doc.chainx.org/#/zh-en/run-a-Chainx-node", "api": "https://github.com/chainx-org/ChainX/wiki/RPC", "add_time": "2019-12-01T00:00:00Z"}, {"name": "rippled (XRP Ledger server) Version 1.7.0", "tag_name": "1.7.0", "html_url": "https://github.com/ripple/rippled/releases/tag/1.7.0", "repo_url": "https://github.com/ripple/rippled", "body": "Ripple has released version 1.7.0 of rippled, the reference server implementation of the XRP Ledger protocol. This release significantly improves memory usage, introduces a protocol amendment to allow out-of-order transaction execution with Tickets, and brings several other features and improvements.\r\n\r\n**Upgrading (SPECIAL ACTION REQUIRED)**\r\nIf you use the precompiled binaries of rippled that Ripple publishes for supported platforms, please note that Ripple has renewed the GPG key used to sign these packages. If you are upgrading from a previous install, you must download and trust the renewed key. Automatic upgrades will not work until you have re-trusted the key.\r\n\r\n**Red Hat Enterprise Linux / CentOS**\r\n\r\n_(These instructions have been updated.)_ First, re-add the repository to get the updated key.\r\n\r\n```\r\ncat << REPOFILE | sudo tee /etc/yum.repos.d/ripple.repo \r\n[ripple-stable]\r\nname=XRP Ledger Packages\r\nenabled=1\r\ngpgcheck=0\r\nrepo_gpgcheck=1\r\nbaseurl=https://repos.ripple.com/repos/rippled-rpm/stable\r\ngpgkey=https://repos.ripple.com/repos/rippled-rpm/stable/repodata/repomd.xml.key\r\nREPOFILE\r\n```\r\n\r\nThen perform a manual upgrade. When prompted, confirm that the key's fingerprint matches the following example, then press y to accept the updated key:\r\n\r\n```\r\n$ sudo yum install rippled\r\nLoaded plugins: fastestmirror\r\nLoading mirror speeds from cached hostfile\r\n* base: mirror.web-ster.com\r\n* epel: mirrors.syringanetworks.net\r\n* extras: ftp.osuosl.org\r\n* updates: mirrors.vcea.wsu.edu\r\nripple-nightly/signature \r\n|  650 B  00:00:00    \r\nRetrieving key from https://repos.ripple.com/repos/rippled-rpm/nightly/repodata/repomd.xml.key\r\nImporting GPG key 0xCCAFD9A2:\r\nUserid     : \"TechOps Team at Ripple <techops+rippled@ripple.com>\"\r\nFingerprint: c001 0ec2 05b3 5a33 10dc 90de 395f 97ff ccaf d9a2\r\nFrom       : https://repos.ripple.com/repos/rippled-rpm/nightly/repodata/repomd.xml.key\r\nIs this ok [y/N]: y\r\n```\r\n\r\n**Ubuntu / Debian**\r\nDownload and trust the updated public key, then perform a manual upgrade as follows:\r\n\r\n```\r\nwget -q -O - \"https://repos.ripple.com/repos/api/gpg/key/public\" | \\\r\n    sudo apt-key add -\r\nsudo apt -y update\r\nsudo apt -y install rippled\r\n```\r\n\r\n**New and Improved Features**\r\n\r\n* Rework deferred node logic and async fetch behavior: This change significantly improves ledger sync and fetch times while reducing memory consumption. (https://blog.ripplex.io/how-ripples-c-team-cut-rippleds-memory-footprint-down-to-size/)\r\n* New Ticket feature: Tickets are a mechanism to prepare and send certain transactions outside of the normal sequence order. This version reworks and completes the implementation for Tickets after more than 6 years of development. This feature is now open for voting as the newly-introduced TicketBatch amendment, which replaces the previously-proposed Tickets amendment. The specification for this change can be found at: xrp-community/standards-drafts#16\r\n* Add Reporting Mode: The server can be compiled to operate in a new mode that serves API requests for validated ledger data without connecting directly to the peer-to-peer network. (The server needs a gRPC connection to another server that is on the peer-to-peer network.) Reporting Mode servers can share access to ledger data via Apache Cassandra and PostgreSQL to more efficiently serve API requests while peer-to-peer servers specialize in broadcasting and processing transactions. (#3609)\r\n* Optimize relaying of validation and proposal messages: Servers typically receive multiple copies of any given message from directly connected peers; in particular, consensus proposal and validation messages are often relayed with extremely high redundancy. For servers with several peers, this can cause redundant work. This commit introduces experimental code that attempts to optimize the relaying of proposals and validations by allowing servers to instruct their peers to \"squelch\" delivery of selected proposals and validations. This change is considered experimental at this time and is disabled by default because the functioning of the consensus network depends on messages propagating with high reliability through the constantly-changing peer-to-peer network. Server operators who wish to test the optimized code can enable it in their server config file.\r\n* Report server domain to other servers: Server operators now have the option to configure a domain name to be associated with their servers. The value is communicated to other servers and is also reported via the server_info API. The value is meant for third-party applications and tools to group servers together. For example, a tool that visualizes the network's topology can show how many servers are operated by different stakeholders. An operator can claim any domain, so tools should use the xrp-ledger.toml file to confirm that the domain also claims ownership of the servers.\r\n* Improve handling of peers that aren't synced: When evaluating the fitness and usefulness of an outbound peer, the code would incorrectly calculate the amount of time that the peer spent in a non-useful state. This release fixes the calculation and makes the timeout values configurable by server operators. Two new options are introduced in the 'overlay' stanza of the config file.\r\n* Persist API-configured voting settings: Previously, the amendments that a server would vote in support of or against could be configured both via the configuration file and via the \"feature\" API method. Changes made in the configuration file were only loaded at server startup; changes made via the command line take effect immediately but were not persisted across restarts. Starting with this release, changes made via the API are saved to the wallet.db database file so that they persist even if the server is restarted. Amendment voting in the config file is deprecated. The first time the server starts with v1.7.0 or higher, it reads any amendment voting settings in the config file and saves the settings to the database; on later restarts the server prints a warning message and ignores the [amendments] and [veto_amendments] stanzas of the config file. Going forward, use the feature method to view and configure amendment votes. If you want to use the config file to configure amendment votes, add a line to the [rpc_startup] stanza such as the following: [rpc_startup] { \"command\": \"feature\", \"feature\": \"FlowSortStrands\", \"vetoed\": true }\r\n* Support UNLs with future effective dates: Updates the format for the recommended validator list file format, allowing publishers to pre-publish the next recommended UNL while the current one is still valid. The server is still backwards compatible with the previous format, but the new format removes some uncertainty during the transition from one list to the next. Also, starting with this release, the server locks down and reports an error if it has no valid validator list. You can clear the error by loading a validator list from a file or by configuring a different UNL and restarting; the error also goes away on its own if the server is able to obtain a trusted validator list from the network (for example, after an network outage resolves itself).\r\n* Improve manifest relaying: Servers now propagate change messages for validators' ephemeral public keys (\"manifests\") on a best-effort basis, to make manifests more available throughout the peer-to-peer network. Previously, the server would only relay manifests from validators it trusts locally, which made it difficult to detect and track validators that are not broadly trusted.\r\n* Implement ledger forward replay feature: The server can now sync up to the network by \"playing forward\" transactions from a previously saved ledger until it catches up to the network. Compared with the default behavior of fetching the latest state and working backwards, forward replay can save time and bandwidth by reconstructing previous ledgers' state data rather than downloading the pre-calculated results from the network. As an added bonus, forward replay confirms that the rest of the network followed the same transaction processing rules as the local server when processing the intervening ledgers. This feature is considered experimental this time and can be enabled with an option in the config file.\r\n* Make the transaction job queue limit adjustable: The server uses a job queue to manage tasks, with limits on how many jobs of a particular type can be queued. The previously hard-coded limit associated with transactions is now configurable. Server operators can increase the number of transactions their server is able to queue, which may be useful if your server has a large memory capacity or you expect an influx of transactions. (https://github.com/ripple/rippled/issues/3556)\r\n* Add public_key to the Validator List method response: The Validator List method can be used to request a recommended validator list from a rippled instance. The response now includes the public key of the requested list. (https://github.com/ripple/rippled/issues/3392)\r\n* Server operators can now configure maximum inbound and outbound peers separately: The new peers_in_max and peers_out_max config options allow server operators to independently control the maximum number of inbound and outbound peers the server allows. [70c4ecc]\r\n* Improvements to shard downloading: Previously the download_shard command could only load shards over HTTPS. Compressed shards can now also be downloaded over plain HTTP. The server fully checks the data for integrity and consistency, so the encryption is not strictly necessary. When initiating multiple shard downloads, the server now returns an error if there is not enough space to store all the shards currently being downloaded.\r\n* The manifest command is now public: The manifest API method returns public information about a given validator. The required permissions have been changed so it is now part of the public API.\r\n\r\n**Bug Fixes**\r\n\r\n* Implement sticky DNS resolution for validator list retrieval: When attempting to load a validator list from a configured site, attempt to reuse the last IP that was successfully used if that IP is still present in the DNS response. (https://github.com/ripple/rippled/issues/3494).\r\n* Improve handling of RPC ledger_index argument: You can now provide the ledger_index as a numeric string. This allows you to copy and use the numeric string ledger_index value returned by certain RPC commands. Previously you could only send native JSON numbers or shortcut strings such as \"validated\" in the ledger_index field. (https://github.com/ripple/rippled/issues/3533)\r\n* Fix improper promotion of bool on return [6968da1]\r\n* Fix ledger sequence on copynode [ef53197]\r\n* Fix parsing of node public keys in manifest CLI: The previous code attempts to validate the provided node public key using a function that assumes that the encoded public key is for an account. This causes the parsing to fail. This commit fixes #3317 (https://github.com/ripple/rippled/issues/3317) by letting the caller specify the type of the public key being checked.\r\n* Fix idle peer timer: Fixes a bug where a function to remove idle peers was called every second instead of every 4 seconds. #3754 (https://github.com/ripple/rippled/issues/3754)\r\n* Add database counters: Fix bug where DatabaseRotateImp::getBackend and ::sync utilized the writable backend without a lock. ::getBackend was replaced with ::getCounters.\r\n* Improve online_delete configuration and DB tuning [6e9051e]\r\n* Improve handling of burst writes in NuDB database ( https://github.com/ripple/rippled/pull/3662 )\r\n* Fix excessive logging after disabling history shards. Previously if you configured the server with a shard store, then disabled it, the server output excessive warning messages about the shard limit being exceeded.\r\n* Fixed some issues with negotiating link compression. ( https://github.com/ripple/rippled/pull/3705 )\r\n* Fixed a potential thread deadlock with history sharding. ( https://github.com/ripple/rippled/pull/3683 )\r\n* Various fixes to typos and comments, refactoring, and build system improvements", "created_at": "2021-02-23T20:51:24Z", "project": "XRP (XRP)", "currency": "xrp", "alias": "ripple", "repo": "ripple/rippled", "type": "utxo", "hosting": "github", "explorer": "https://xrpscan.com", "doc": "https://xrpl.org/install-rippled-on-ubuntu.html", "api": "https://xrpl.org/rippled-api.html", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Mindfish (v1.11.22)", "tag_name": "v1.11.22", "html_url": "https://github.com/etclabscore/core-geth/releases/tag/v1.11.22", "repo_url": "https://github.com/etclabscore/core-geth", "body": "- __Merge__ [ethereum/go-ethereum@v1.9.25](https://github.com/ethereum/go-ethereum/releases/tag/v1.9.25) (#272)\r\n- __Change__ default `extraData` prefix for mined blocks to `CoreGeth` (from `geth`) (#310)\r\n\r\n---\r\n\r\n- Docker images published under [`etclabscore/core-geth`](https://hub.docker.com/r/etclabscore/core-geth/builds).", "created_at": "2021-02-16T10:48:01Z", "project": "Ethereum Classic (ETC)", "currency": "etc", "alias": "ethereum-classic", "repo": "etclabscore/core-geth", "type": "ethereum", "hosting": "github", "explorer1": "https://expedition.dev/?network=mainnet", "explorer": "https://etc.tokenview.com/cn", "explorer2": "https://etcblockexplorer.com", "doc": "https://etclabscore.github.io/core-geth/getting-started/installation/", "api": "https://etclabscore.github.io/core-geth/apis/jsonrpc-apis/", "add_time": "2019-12-01T00:00:00Z"}, {"name": "RSK Papyrus Release v2.2.0", "tag_name": "PAPYRUS-2.2.0", "html_url": "https://github.com/rsksmart/rskj/releases/tag/PAPYRUS-2.2.0", "repo_url": "https://github.com/rsksmart/rskj", "body": "This release contains relevant improvements from community feedback. Thanks to all **RSK buidlers** for your contributions!\r\n\r\nThis is a summary of the changes included in this version:\r\n\r\n- Add *Content-Type* field in JSON RPC responses (#1390)\r\n- Consider minimum gas price in *eth_gasPrice* method (#1389)\r\n- On-the-fly block blooms cache for faster events retrieval (#1384)\r\n- Fix *v* value in JSON RPC transaction result (#1382)\r\n\r\nYou can find a complete list of the changes introduced in [Papyrus 2.2.0 milestone](https://github.com/rsksmart/rskj/milestone/23).\r\n\r\nSHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):\r\nf7cb1e6c5568332d047c602a5b2c464c41688336b824d92ef3a40b89a8f55b60  rskj-core-2.2.0-PAPYRUS-all.jar", "created_at": "2021-01-28T18:13:41Z", "project": "DeFi (RIF)", "currency": "rif", "alias": "rskj", "repo": "rsksmart/rskj", "type": "eth", "hosting": "github", "explorer": "https://explorer.rsk.co", "doc": "https://developers.rsk.co/rsk/node/install", "api": "https://developers.rsk.co/develop/json-rpc-api", "add_time": "2020-05-19T03:00:00Z"}, {"name": "Release v0.8.2", "tag_name": "v0.8.2", "html_url": "https://github.com/binance-chain/node-binary/releases/tag/v0.8.2", "repo_url": "https://github.com/binance-chain/node-binary", "body": "This is a new release for Binance Chain mainnet\r\n\r\n*Jan 26th 2021*\r\n\r\n**Bugfix**\r\n\r\n* Fix issue with handling errors of `mirror` and `sync`\r\n\r\n", "created_at": "2021-01-26T10:20:13Z", "project": "Binance Coin (BNB)", "currency": "bnb", "alias": "binance", "repo": "binance-chain/node-binary", "type": "cosmos", "hosting": "github", "explorer": "https://explorer.binance.org", "doc": "https://docs.binance.org/fullnode.html", "api": "https://docs.binance.org/rpc-swagger/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release 2.1.1", "tag_name": "Release2.1.1", "html_url": "https://github.com/HcashOrg/hcd/releases/tag/Release2.1.1", "repo_url": "https://github.com/HcashOrg/hcd", "body": "modify testnet2 magic", "created_at": "2021-01-12T09:45:03Z", "project": "HyperCash (HC)", "currency": "hc", "alias": "hypercash", "repo": "HcashOrg/hcd", "type": "hc", "hosting": "github", "explorer": "https://hc-explorer.h.cash", "doc": "https://wiki.h.cash/getting-started/user-guides/hcd-setup", "api": "https://wiki.h.cash/wallet/hcwalletAPI", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v0.11.0", "html_url": "https://github.com/crustio/crust/commit/f629f2ddf66a3933a990618a000a93a6fcf4cbee", "repo_url": "https://github.com/crustio/crust", "body": "Happy New Year \ud83c\udf89 (#391)", "created_at": "2021-01-08T02:28:04Z", "project": "CRUST (CRU)", "currency": "cru", "alias": "cru", "repo": "crustio/crust", "type": "ipfs", "hosting": "github", "explorer": "http://explorer.crust.network", "doc": "https://mp.weixin.qq.com/s/nIfwHfkiauQQ7t2mJv0c3Q", "api": "https://github.com/crustio/crust-api/blob/master/docs/API.md", "add_time": "2020-09-17T09:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/aowclub/AOWchain", "repo_url": "https://github.com/aowclub/AOWchain", "body": "", "created_at": "2020-12-28T02:00:00Z", "project": "ORION (ORI)", "currency": "ori", "alias": "ori", "repo": "aowclub/AOWchain", "type": "polkadot", "hosting": "github", "explorer": "https://userscan.orionchain.org", "doc": "https://orionchain.oss-cn-beijing.aliyuncs.com/orion_build_guide.pdf", "api": "https://polkadot.js.org/docs/", "add_time": "2020-12-28T02:00:00Z"}, {"name": "v1.1.1", "tag_name": "v1.1.1", "html_url": "https://github.com/Bytom/bytom/releases/tag/v1.1.1", "repo_url": "https://github.com/Bytom/bytom", "body": "## Bytom version 1.1.1 is now available.\r\n\r\n## Checksums\r\nFile | Checksum(md5)\r\n------------ | -------------\r\nbytom-1.1.1-darwin_386.tgz | 6bfb90889f501235c2fbbe0cff65b6a8\r\nbytom-1.1.1-darwin_amd64.tgz | 1bc84379bc443db23c1f7e40375e7e0a\r\nbytom-1.1.1-linux_386.tgz | 91b249d24191cfc44a01bde1ad17ae19\r\nbytom-1.1.1-linux_amd64.tgz | ed38044864c4eee2a370e90c80faf38e\r\nbytom-1.1.1-windows_386.zip | 24fcc93c5e1f3e4fc1a62e347461d577\r\nbytom-1.1.1-windows_amd64.zip | fb8ebab5873a1c89de4915c46d2dac17", "created_at": "2020-12-23T01:36:24Z", "project": "Bytom (BTM)", "currency": "btm", "alias": "bytom", "repo": "Bytom/bytom", "type": "btm", "hosting": "github", "explorer": "https://blockmeta.com", "doc": "https://github.com/Bytom/bytom/wiki/Running-in-Docker", "api": "https://github.com/Bytom/bytom/wiki/API-Reference", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.0.0", "tag_name": "v1.0.0", "html_url": "https://github.com/HuobiGroup/huobi-eco-chain/releases/tag/v1.0.0", "repo_url": "https://github.com/HuobiGroup/huobi-eco-chain", "body": "First release for heco", "created_at": "2020-12-17T11:08:05Z", "project": "Huobi ECO Chain (HECO)", "currency": "heco", "alias": "ht", "repo": "HuobiGroup/huobi-eco-chain", "type": "eth", "hosting": "github", "explorer": "https://scan.hecochain.com/home/index", "doc": "https://docs.hecochain.com/#/dev/install", "api": "https://eth.wiki/json-rpc/api", "add_time": "2021-01-21T02:00:00Z"}, {"name": "v1.0.201217", "tag_name": "v1.0.201217", "html_url": "https://github.com/gxchain/gxb-core/releases/tag/v1.0.201217", "repo_url": "https://github.com/gxchain/gxb-core", "body": "### GXB-Core Release v1.0.201217\r\n\r\n## Notice:\r\n\r\n**This is a hotfix release of GXB-Core Release v1.0.200327, Every node should upgrade to solve block generation issue caused by integer calculation overflow.**\r\n\r\nHot fix Commit:\r\n- https://github.com/gxchain/gxb-core/commit/dc3d967ddd2264503e5fbd62a38615afa192fcc0\r\n- https://github.com/gxchain/gxb-core/commit/84c33320c1c690270a972f3d290543b563b106df\r\n\r\nHow to Upgrade: Download and replace programs/witness_node/witness_node\r\n\r\nDownload Link: https://github.com/gxchain/gxb-core/releases/tag/v1.0.201217\r\n\r\n## Upgrade steps\r\n\r\n1. Download the latest release package, and unzip\uff1a\r\n   ```wget 'https://github.com/gxchain/gxb-core/releases/download/v1.0.201217/gxb_1.0.201217-ubuntu-14.04.tar.gz' -O gxb_1.0.201217-ubuntu-14.04.tar.gz && tar zxvf gxb_1.0.201217-ubuntu-14.04.tar.gz```\r\n\r\n2. Stop witness_node:\r\n\r\n```\r\nkill -s SIGINT $(pgrep witness_node)\r\n```\r\n\r\n3. Restart\r\n\r\n```\r\n# Your original started up script: history|grep witness_node\r\nnohup ./programs/witness_node/witness_node [other-options] # (The parameters are omitted here,each node is started differently)\r\n\r\n```\r\n\r\n> Note: For a BP, if you cannot produce a block after upgrade, your TrustedNode may have been banned by the system, to solve this problem, open https://wallet.gxb.io, import your account and do unbanned on the profile tab\r\n\r\n---\r\n\r\n**GXChain\u7684\u7f51\u7edc\u7531\u4e8e\u51fa\u73b0\u51fa\u5757\u5956\u52b1\u8ba1\u7b97\u6ea2\u51fa\uff0c\u5bfc\u81f4\u51fa\u5757\u5931\u8d25\uff0c\u76ee\u524d\u5df2\u7ecf\u5b8c\u6210\u4fee\u590d\uff0c\u6240\u6709\u7684\u8282\u70b9\u9700\u8981\u5347\u7ea7\u7a0b\u5e8f\u4ee5\u5b9e\u73b0\u6b63\u5e38\u51fa\u5757**\r\n\r\n\u4fee\u590d\u4ee3\u7801\uff1a\r\n- https://github.com/gxchain/gxb-core/commit/dc3d967ddd2264503e5fbd62a38615afa192fcc0\r\n- https://github.com/gxchain/gxb-core/commit/84c33320c1c690270a972f3d290543b563b106df\r\n\r\n\u5347\u7ea7\u65b9\u5f0f\uff1a\u6240\u6709\u7684\u8282\u70b9\u9700\u8981\u66ff\u6362\u8282\u70b9\u7a0b\u5e8f\u540e\u91cd\u542f\u8282\u70b9\uff0c\u6765\u5b8c\u6210\u5347\u7ea7\r\n\r\n\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/gxchain/gxb-core/releases/tag/v1.0.201217\r\n\r\n## \u5347\u7ea7\u6b65\u9aa4\r\n\r\n1. \u4e0b\u8f7d\u89e3\u538b\u6700\u65b0\u8282\u70b9\u7a0b\u5e8f\uff1a\r\n   ```wget 'https://github.com/gxchain/gxb-core/releases/download/v1.0.201217/gxb_1.0.201217-ubuntu-14.04.tar.gz' -O gxb_1.0.201217-ubuntu-14.04.tar.gz && tar zxvf gxb_1.0.201217-ubuntu-14.04.tar.gz```\r\n\r\n2. \u5b89\u5168\u505c\u6b62witness_node:\r\n\r\n```\r\nkill -s SIGINT $(pgrep witness_node)\r\n```\r\n\r\n3. \u91cd\u542f\r\n\r\n```\r\n# \u4f7f\u7528\u539f\u6765\u7684\u542f\u52a8\u65b9\u5f0f\u8fdb\u884c\u542f\u52a8: history|grep witness_node\r\nnohup ./programs/witness_node/witness_node [other-options]\r\n\r\n```\r\n\r\n> \u63d0\u793a\uff1a\u5982\u679c\u4f60\u7684\u662f\u4e00\u4e2a\u51fa\u5757\u8282\u70b9\uff08BP\uff09\uff0c\u7531\u4e8e\u5347\u7ea7\u4e0d\u53ca\u65f6\u53ef\u80fd\u5df2\u7ecf\u88ab\u7cfb\u7edf\u81ea\u52a8\u5173\u8fdb\u5c0f\u9ed1\u5c4b\uff0c\u65e0\u6cd5\u53c2\u4e0e\u51fa\u5757\uff0c\u53ef\u4ee5\u5728 https://wallet.gxb.io \u5bfc\u5165\u8d26\u6237\u6d3b\u8dc3\u6743\u9650\u79c1\u94a5\u540e\uff0c\u5728\u8d44\u6599\u9875\u9762\u8fdb\u884c\u64cd\u4f5c\uff0c\u79bb\u5f00\u5c0f\u9ed1\u5c4b\r\n\r\n## SHA256 checksum:\r\n- dab13eaa4920431a71e5a06d7949effbd3476465d03983b540c05f75a2d27fd0  gxb_1.0.201217-ubuntu-14.04.tar.gz\r\n- 4f73945a7e34d6c3ed3fd9ba8935b0036e895ddb59eb5f039b6c7f4196a23dfd  gxb_1.0.201217-with-plugin-ubuntu-14.04.tar.gz\r\n", "created_at": "2020-12-16T23:35:17Z", "project": "GXChain (GXC)", "currency": "gxc", "alias": "gxchain", "repo": "gxchain/gxb-core", "type": "eos", "hosting": "github", "explorer": "https://explorer.gxchain.org", "doc": "https://docs.gxchain.org/zh/advanced/witness_node.html", "api": "https://docs.gxchain.org/zh/guide/apis.html", "add_time": "2020-04-04T22:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/CryptoDWH/cdwh-sdk", "repo_url": "https://github.com/CryptoDWH/cdwh-sdk", "body": "", "created_at": "2020-12-10T02:00:00Z", "project": "Mirror World (MW)", "currency": "mw", "alias": "mw", "repo": "CryptoDWH/cdwh-sdk", "type": "mw", "hosting": "github", "explorer": "https://testboot.mw.run", "explorer1": "http://mw.rylink.io:7216", "doc": "https://mwfs.oss-cn-shenzhen.aliyuncs.com/cos/miner/MW_Miner_Register.pdf", "api": "http://docs.mw.run", "add_time": "2020-12-10T02:00:00Z"}, {"name": "Mercury(v1.0.2)", "tag_name": "v1.0.2", "html_url": "https://github.com/Dipper-Labs/Dipper-Protocol/releases/tag/v1.0.2", "repo_url": "https://github.com/Dipper-Labs/Dipper-Protocol", "body": "update coin_type from 118 to 925", "created_at": "2020-12-08T07:21:52Z", "project": "Dipper Network (DIP)", "currency": "dip", "alias": "dip", "repo": "Dipper-Labs/Dipper-Protocol", "type": "cosmos", "hosting": "github", "explorer": "http://explorer.dippernetwork.com", "doc": "https://docs.dippernetwork.com/get-started/install.html", "api": "https://docs.dippernetwork.com/api/api.html", "add_time": "2020-12-10T12:00:00Z"}, {"name": "Dash Core 0.16.1.1 Release Announcement", "tag_name": "v0.16.1.1", "html_url": "https://github.com/dashpay/dash/releases/tag/v0.16.1.1", "repo_url": "https://github.com/dashpay/dash", "body": "We are happy to announce the release of 0.16.1.1. This release includes binaries, which can be downloaded below.\r\n\r\nAbout this release\r\n=============\r\n\r\nDash Core 0.16.1.1 is a hotfix release of the Dash Core 0.16.x.x series. This release contains a bugfix and we consider this a stable release. You can find detailed release notes at https://github.com/dashpay/dash/blob/v0.16.1.1/doc/release-notes.md.\r\n\r\nVerification of Downloads\r\n-----------------------------------\r\n\r\nThis release was signed by https://keybase.io/pasta (GPG fingerprint: `2959 0362 EC87 8A81 FD3C 202B 5252 7BED ABE8 7984`).\r\n\r\nIt is important to verify the binaries you download by following one of these guides:\r\n - [Windows](https://docs.dash.org/en/stable/wallets/dashcore/installation-windows.html?#verifying-dash-core)\r\n - [MacOS](https://docs.dash.org/en/stable/wallets/dashcore/installation-macos.html?#verifying-dash-core)\r\n - [Linux](https://docs.dash.org/en/stable/wallets/dashcore/installation-linux.html?#verifying-dash-core)\r\n\r\nNotable Changes\r\n-----------------------\r\nThere was an unexpected behaviour of the \"Encrypt wallet\" menu item for unencrypted wallets which was showing users the \"Decrypt wallet\" dialog instead. This was a GUI only issue, internal encryption logic and RPC behaviour were not affected.\r\n\r\nCredits\r\n-------\r\n\r\nThanks go out to all Dash Core contributors, everyone who submitted issues, reviewed pull requests or helped translating on [Transifex](https://www.transifex.com/projects/p/dash/) and also to [Bitcoin Core](https://github.com/bitcoin/bitcoin) Developers.", "created_at": "2020-11-15T21:43:14Z", "project": "Dash (DASH)", "currency": "dash", "alias": "dash", "repo": "dashpay/dash", "type": "utxo", "hosting": "github", "explorer": "https://explorer.dash.org", "doc": "https://docs.dash.org/zh_CN/stable/masternodes/setup.html#option-1-automated-installation-using-dashman", "api": "https://dashcore.readme.io/docs/core-api-ref-http-rest-quick-reference", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/cypherium/cypherBFTBin", "repo_url": "https://github.com/cypherium/cypherBFTBin", "body": "", "created_at": "2020-11-04T04:00:00Z", "project": "Cypherium (CPH)", "currency": "cph", "alias": "cph", "repo": "cypherium/cypherBFTBin", "type": "eth", "hosting": "github", "explorer": "https://explorer.cypherium.io", "doc": "https://www.cypherium.io", "api": "https://www.cypherium.io", "add_time": "2020-11-04T04:00:00Z"}, {"name": "Release 3.3.0", "tag_name": "v3.3.0", "html_url": "https://github.com/ucacoin/Ucacoin2/releases/tag/v3.3.0", "repo_url": "https://github.com/ucacoin/Ucacoin2", "body": "# Mandatory Update:\r\n\r\n###  Users with updating from a previous version will require a full resync of their local blockchain from either the P2P network or by way of the **bootstrap**.\r\n### If you didn't go with **bootstrap** than it will be ask for resync **when you start wallet** . This resync is a one-time event.\r\n\r\n## How to upgrade:\r\nShutdown your old pc/mac/linux wallet completely.\r\n\r\n- For windows users - run the <a href=\"https://github.com/ucacoin/Ucacoin2/releases/download/v3.3.0/ucacoin-3.3.0-setup-win64.zip\">Installer</a>.\r\n- For Mac users copy the dmg to your Applications folder (copying over your current UCA Coin application).\r\n- For Linux users copy over ucacoind/ucacoin-qt. If you have installed your data directory to a custom location select existing data directory during your installation.\r\n\r\n", "created_at": "2020-10-16T10:43:20Z", "project": "UCA Coin (UCA)", "currency": "uca", "alias": "ucacoin", "repo": "ucacoin/Ucacoin2", "type": "utxo", "hosting": "github", "explorer": "https://blockexplorer.ucacoin.cash", "doc": "https://github.com/ucacoin/Ucacoin2#docker", "api": "https://github.com/ucacoin/Ucacoin2/blob/master/doc/REST-interface.md", "add_time": "2020-07-07T07:00:00Z"}, {"name": "Stafi v0.3.2", "tag_name": "v0.3.2", "html_url": "https://github.com/stafiprotocol/stafi-node/releases/tag/v0.3.2", "repo_url": "https://github.com/stafiprotocol/stafi-node", "body": "Priority: Medium (timely upgrade recommended)\r\n\r\nNative runtimes:\r\nStafi: 6\r\n\r\nThis release was tested against the following versions of rustc. Other versions may work.\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nrustc 1.48.0-nightly (0da580074 2020-09-22)\r\n\r\nChanges:\r\n1. Reduce transaction fees. Only a small fee is required to send a transaction. \r\n2. Tweak deposit costs. Reduce the amount of FIS that needs to be deposited, such as setting an identity, adding proxy etc. \r\n3. Bump Nominator Reward Limits. Increase max nominator rewarded per validator from 64 to 256. \r\n4. Add DefaultVote type for collective modules. \r\n5. Upgrade the underlying framework.\r\n", "created_at": "2020-09-26T07:18:14Z", "project": "StaFi (FIS)", "currency": "fis", "alias": "fis", "repo": "stafiprotocol/stafi-node", "type": "polkadot", "hosting": "github", "explorer": "https://stafi.subscan.io", "explorer1": "https://apps.stafi.io/#/explorer", "doc": "https://docs.stafi.io/validator-sv/run-a-node", "api": "https://docs.stafi.io/network-1/sitara-incentivized-testnet/stage-2/monitor-your-node-and-setup-automated-alerts#1-monitor-your-node", "add_time": "2020-11-16T11:00:00Z"}, {"name": "ycashd v2.1.1-6: Further Stability Improvements and Updated Expiry Block Height", "tag_name": "v2.1.1-6", "html_url": "https://github.com/ycashfoundation/ycash/releases/tag/v2.1.1-6", "repo_url": "https://github.com/ycashfoundation/ycash", "body": "This release incorporates an [upstream zcashd fix](https://github.com/zcash/zcash/pull/4690/commits) that fixes upstream [zcashd issue #4680](https://github.com/zcash/zcash/issues/4680).\r\n\r\nPrior versions versions of ycashd will expire at block height 837,088 (approximately October 27, 2020). You must upgrade to this new version before then in order to stay synced with the blockchain.\r\n\r\nThe new expiry block height is 1,051,092 (approximately November 4, 2021).", "created_at": "2020-09-10T19:56:10Z", "project": "Ycash (YEC)", "currency": "yec", "alias": "ycash", "repo": "ycashfoundation/ycash", "type": "utxo", "hosting": "github", "explorer": "https://yec.zcha.in/blocks", "doc": "https://zcash.readthedocs.io/en/latest/rtd_pages/user_guide.html", "api": "https://zcash-rpc.github.io", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v0.11.1", "html_url": "https://github.com/okex/okexchain/commit/64be77515eb35af1db5a4365990cb22d201230fb", "repo_url": "https://github.com/okex/okexchain", "body": "Merge PR: change cosmos-sdk to  v0.37.9-okchain9 (#319)\n\n* change cosmos-sdk to  v0.37.9-testnet3\r\n\r\n* change version to v0.11.1\r\n\r\n* update go.mod\r\n\r\n* fix ut\r\n\r\nCo-authored-by: evan.han <iloversevan@gmail.com>", "created_at": "2020-08-26T07:38:31Z", "project": "OKExChain (OKT)", "currency": "okt", "alias": "okex", "repo": "okex/okexchain", "type": "cosmos", "hosting": "github", "explorer": "https://www.oklink.com/okexchain-test", "doc": "https://okexchain-docs.readthedocs.io/en/latest/getting-start/deploy-you-own-okexchain-testnet.html", "api": "https://documenter.getpostman.com/view/1112175/SzS5u6bE?version=latest#c5e563ed-ce31-42f6-8203-1ebe29563fc6", "add_time": "2020-12-30T02:00:00Z"}, {"name": "v1.0.11", "tag_name": "v1.0.11", "html_url": "https://github.com/zvchain/zvchain/releases/tag/v1.0.11", "repo_url": "https://github.com/zvchain/zvchain", "body": "", "created_at": "2020-08-10T02:30:48Z", "project": "ZVCHAIN (ZVC)", "currency": "zvc", "alias": "zvchain", "repo": "zvchain/zvchain", "type": "zvchain", "hosting": "github", "explorer": "https://explorer.zvchain.io", "doc": "https://github.com/zvchain/zvchain/wiki/miner_operation_zh#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C", "doc1": "https://github.com/zvchain/zvchain/wiki/rpc_api_zh#RPC%E6%9C%8D%E5%8A%A1", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/telosnetwork/node-template", "repo_url": "https://github.com/telosnetwork/node-template", "body": "", "created_at": "2020-08-06T06:00:00Z", "project": "Teloscoin (TELOS)", "currency": "telos", "alias": "tlos", "repo": "telosnetwork/node-template", "type": "eos", "hosting": "github", "explorer": "https://telos.bloks.io", "doc": "https://docs.telos.net/developers/platform/overview/platform_and_toolchain#nodeos", "api": "https://developers.eos.io/welcome/latest/reference/nodeos-rpc-api-reference/", "add_time": "2020-08-06T06:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/meterio/meter-go", "repo_url": "https://github.com/meterio/meter-go", "body": "", "created_at": "2020-07-16T02:00:00Z", "project": "Meter (MTR)", "currency": "mtr", "alias": "meter", "repo": "meterio/meter-go", "type": "eth", "hosting": "github", "explorer": "https://scan.meter.io", "doc": "https://github.com/meterio/mainnet_docs", "api": "https://docs.meter.io/meterify.html#meterify", "api1": "https://mainnet.meter.io:8667", "add_time": "2020-07-16T02:00:00Z"}, {"name": "BOSCore v3.0.9 Release Notes", "tag_name": "v3.0.9", "html_url": "https://github.com/boscore/bos/releases/tag/v3.0.9", "repo_url": "https://github.com/boscore/bos", "body": "<!-- PLEASE FILL OUT THE FOLLOWING MARKDOWN TEMPLATE -->\r\n<!-- Give your PR a title that is sufficient to understand what is being changed. -->\r\n\r\n## Change Description\r\nAdd account query db, link to EOSIO [feature](https://github.com/EOSIO/eos/pull/8899). resolve: #159 \r\n\r\n<!-- Describe the change you made, the motivation for it, and the impact it will have. Reference issues or pull requests where possible (use '#XX' or 'GH-XX' where XX is the issue or pull request number). -->\r\n\r\n## Consensus Changes\r\n\r\n<!-- If this PR introduces a change to the validation of blocks in the chain or consensus in general, please describe the impact. -->\r\n\r\n\r\n## API Changes\r\n\r\n```bash\r\n$ curl http://127.0.0.1:8888/v1/chain/get_accounts_by_authorizers -d '{\"keys\":[\"EOS...\"]}' 2>/dev/null | jq '[.accounts[].account_name] | unique'\r\n```\r\n\r\n```bash\r\n$ curl http://127.0.0.1:8888/v1/chain/get_accounts_by_authorizers -d '{\"accounts\":[\"alice\"]}' 2>/dev/null | jq '[.accounts[].account_name] | unique'\r\n```\r\n\r\n<!-- If this PR introduces API changes, please describe the changes here. What will developers need to know before upgrading to this version? -->\r\n\r\n\r\n## Documentation Additions\r\n\r\n## --enable-account-queries\r\n*default: false*\r\n\r\nBoolean that indicates whether the Account Query DB should be initialized at start-up and maintained for the life of this instance. if set to true then the RPC endpoint for `/v1/chain/get_accounts_by_authorizers` will be registered otherwise it will not be present and requests to that endpoint will return `404` errors.\r\n\r\n## Others\r\n\r\nDocker image: boscore/bos:v3.0.9\r\n\r\nFor Ubuntu, SW/eden [APT](https://eosswedenorg.github.io/apt/bos) source can be used:\r\n```\r\nsudo apt-get install software-properties-common\r\ncurl https://apt.eossweden.org/key 2> /dev/null | sudo apt-key add -\r\nsudo apt-add-repository -y 'deb [arch=amd64] https://apt.eossweden.org/bos `lsb_release -cs` stable' \r\nsudo apt-get update\r\nsudo apt-get install bos-mv-309\r\n```\r\n", "created_at": "2020-06-15T07:03:15Z", "project": "BOSCore (BOS)", "currency": "bos", "alias": "bos", "repo": "boscore/bos", "type": "eos", "hosting": "github", "explorer": "https://bos.bloks.io", "explorer1": "https://bos.eosx.io", "doc": "https://www.bcskill.com/index.php/archives/631.html", "api": "https://developers.eos.io/manuals/eos/latest/nodeos/rpc_apis/index/", "add_time": "2020-12-24T08:00:00Z"}, {"name": "Litecoin Core v0.18.1", "tag_name": "v0.18.1", "html_url": "https://github.com/litecoin-project/litecoin/releases/tag/v0.18.1", "repo_url": "https://github.com/litecoin-project/litecoin", "body": "# Litecoin Core v0.18.1 Release\r\n\r\n*Follow our\u00a0*[*Twitter*](https://twitter.com/litecoinproject)*\u00a0for the latest dev news.*\r\n\r\nWe are pleased to release Litecoin Core 0.18.1. This is a new major version release, including new features, various bugfixes and performance improvements, as well as updated translations. It is recommended for all users to upgrade to this version.\r\n\r\nHow to Upgrade\r\n==============\r\n\r\nIf you are running an older version, shut it down. Wait until it has completely shut down (which might take a few minutes for older versions), then run the installer (on Windows) or just copy over\u00a0`/Applications/Litecoin-Qt`\u00a0(on Mac) or\u00a0`litecoind`/`litecoin-qt`\u00a0(on Linux).\r\n\r\nThe first time you run version 0.15.0 or newer, your chainstate database will be converted to a new format, which will take anywhere from a few minutes to half an hour, depending on the speed of your machine.\r\n\r\nNote that the block database format also changed in version 0.8.0 and there is no automatic upgrade code from before version 0.8 to version 0.15.0 or later. Upgrading directly from 0.7.x and earlier without redownloading the blockchain is not supported. However, as usual, old wallet versions are still supported.\r\n\r\nCompatibility\r\n=============\r\n\r\nLitecoin Core is supported and extensively tested on operating systems using the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended to use Litecoin Core on unsupported systems.\r\n\r\nLitecoin Core should also work on most other Unix-like systems but is not as frequently tested on them.\r\n\r\nFrom 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is built using Qt 5.9.x, which doesn't support versions of macOS older than 10.10. Additionally, Litecoin Core does not yet change appearance when macOS \"dark mode\" is activated.\r\n\r\nIn addition to previously-supported CPU platforms, this release's pre-compiled distribution also provides binaries for the RISC-V platform.\r\n\r\nKnown issues\r\n============\r\n\r\nWallet GUI\r\n----------\r\n\r\nFor advanced users who have both (1) enabled coin control features, and (2) are using multiple wallets loaded at the same time: The coin control input selection dialog can erroneously retain wrong-wallet state when switching wallets using the dropdown menu. For now, it is recommended not to use coin control features with multiple wallets loaded.\r\n\r\nNotable changes\r\n===============\r\n\r\nMining\r\n------\r\n\r\n-   Calls to\u00a0`getblocktemplate`\u00a0will fail if the segwit rule is not specified. Calling\u00a0`getblocktemplate`\u00a0without segwit specified is almost certainly a misconfiguration since doing so results in lower rewards for the miner. Failed calls will produce an error message describing how to enable the segwit rule.\r\n\r\nConfiguration option changes\r\n----------------------------\r\n\r\n-   A warning is printed if an unrecognized section name is used in the configuration file. Recognized sections are\u00a0`[test]`,\u00a0`[main]`, and\u00a0`[regtest]`.\r\n-   Four new options are available for configuring the maximum number of messages that ZMQ will queue in memory (the \"high water mark\") before dropping additional messages. The default value is 1,000, the same as was used for previous releases. See the\u00a0[ZMQ documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/zmq.md#usage)\u00a0for details.\r\n-   The\u00a0`rpcallowip`\u00a0option can no longer be used to automatically listen on all network interfaces. Instead, the\u00a0`rpcbind`\u00a0parameter must be used to specify the IP addresses to listen on. Listening for RPC commands over a public network connection is insecure and should be disabled, so a warning is now printed if a user selects such a configuration. If you need to expose RPC in order to use a tool like Docker, ensure you only bind RPC to your localhost, e.g.\u00a0`docker run [...] -p 127.0.0.1:9332:9332`\u00a0(this is an extra\u00a0`:9332`\u00a0over the normal Docker port specification).\r\n-   The\u00a0`rpcpassword`\u00a0option now causes a startup error if the password set in the configuration file contains a hash character (#), as it's ambiguous whether the hash character is meant for the password or as a comment.\r\n-   The\u00a0`whitelistforcerelay`\u00a0option is used to relay transactions from whitelisted peers even when not accepted to the mempool. This option now defaults to being off, so that changes in policy and disconnect/ban behavior will not cause a node that is whitelisting another to be dropped by peers. Users can still explicitly enable this behavior with the command line option (and may want to consider\u00a0[contacting](mailto:contact@litecoin.org)\u00a0the Litecoin Core project to let us know about their use-case, as this feature could be deprecated in the future).\r\n\r\nWallet changes\r\n==============\r\n\r\nWhen creating a transaction with a fee above\u00a0`-maxtxfee`\u00a0(default 0.1 LTC), the RPC commands\u00a0`walletcreatefundedpsbt`\u00a0and\u00a0`fundrawtransaction`\u00a0will now fail instead of rounding down the fee. Beware that the\u00a0`feeRate`\u00a0argument is specified in LTC per kilobyte, not litoshi per byte.\r\n\r\nDocumentation\r\n=============\r\n\r\n-   A new short\u00a0[document](https://github.com/litecoin-project/litecoin/blob/master/doc/JSON-RPC-interface.md)\u00a0about the JSON-RPC interface describes cases where the results of an RPC might contain inconsistencies between data sourced from different subsystems, such as wallet state and mempool state. A note is added to the\u00a0[REST interface documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/REST-interface.md)\u00a0indicating that the same rules apply.\r\n-   Further information is added to the\u00a0[JSON-RPC documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/JSON-RPC-interface.md)\u00a0about how to secure this interface.\r\n-   A new\u00a0[document](https://github.com/litecoin-project/litecoin/blob/master/doc/litecoin-conf.md)\u00a0about the\u00a0`litecoin.conf`\u00a0file describes how to use it to configure Litecoin Core.\r\n-   A new document introduces Litecoin Core's BIP174\u00a0[Partially-Signed Litecoin Transactions (PSBT)](https://github.com/litecoin-project/litecoin/blob/master/doc/psbt.md)\u00a0interface, which is used to allow multiple programs to collaboratively work to create, sign, and broadcast new transactions. This is useful for offline (cold storage) wallets, multisig wallets, coinjoin implementations, and many other cases where two or more programs need to interact to generate a complete transaction.\r\n-   The\u00a0[output script descriptor](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md)\u00a0documentation has been updated with information about new features in this still-developing language for describing the output scripts that a wallet or other program wants to receive notifications for, such as which addresses it wants to know received payments. The language is currently used in multiple new and updated RPCs described in these release notes and is expected to be adapted to other RPCs and to the underlying wallet structure.\r\n\r\nBuild system changes\r\n====================\r\n\r\n-   A new\u00a0`--disable-bip70`\u00a0option may be passed to\u00a0`./configure`\u00a0to prevent Litecoin-Qt from being built with support for the BIP70 payment protocol or from linking libssl. As the payment protocol has exposed Litecoin Core to libssl vulnerabilities in the past, builders who don't need BIP70 support are encouraged to use this option to reduce their exposure to future vulnerabilities.\r\n-   The minimum required version of Qt (when building the GUI) has been increased from 5.2 to 5.5.1 (the\u00a0[depends system](https://github.com/litecoin-project/litecoin/blob/master/depends/README.md)\u00a0provides 5.9.7)\r\n\r\nNew RPCs\r\n========\r\n\r\n-   `getnodeaddresses`\u00a0returns peer addresses known to this node. It may be used to find nodes to connect to without using a DNS seeder.\r\n-   `listwalletdir`\u00a0returns a list of wallets in the wallet directory (either the default wallet directory or the directory configured by the\u00a0`-walletdir`\u00a0parameter).\r\n-   `getrpcinfo`\u00a0returns runtime details of the RPC server. At the moment, it returns an array of the currently active commands and how long they've been running.\r\n-   `deriveaddresses`\u00a0returns one or more addresses corresponding to an\u00a0[output descriptor](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md).\r\n-   `getdescriptorinfo`\u00a0accepts a descriptor and returns information about it, including its computed checksum.\r\n-   `joinpsbts`\u00a0merges multiple distinct PSBTs into a single PSBT. The multiple PSBTs must have different inputs. The resulting PSBT will contain every input and output from all of the PSBTs. Any signatures provided in any of the PSBTs will be dropped.\r\n-   `analyzepsbt`\u00a0examines a PSBT and provides information about what the PSBT contains and the next steps that need to be taken in order to complete the transaction. For each input of a PSBT,\u00a0`analyzepsbt`\u00a0provides information about what information is missing for that input, including whether a UTXO needs to be provided, what pubkeys still need to be provided, which scripts need to be provided, and what signatures are still needed. Every input will also list which role is needed to complete that input, and\u00a0`analyzepsbt`\u00a0will also list the next role in general needed to complete the PSBT.\u00a0`analyzepsbt`\u00a0will also provide the estimated fee rate and estimated virtual size of the completed transaction if it has enough information to do so.\r\n-   `utxoupdatepsbt`\u00a0searches the set of Unspent Transaction Outputs (UTXOs) to find the outputs being spent by the partial transaction. PSBTs need to have the UTXOs being spent to be provided because the signing algorithm requires information from the UTXO being spent. For segwit inputs, only the UTXO itself is necessary. For non-segwit outputs, the entire previous transaction is needed so that signers can be sure that they are signing the correct thing. Unfortunately, because the UTXO set only contains UTXOs and not full transactions,\u00a0`utxoupdatepsbt`\u00a0will only add the UTXO for segwit inputs.\r\n\r\nUpdated RPCs\r\n============\r\n\r\nNote: some low-level RPC changes mainly useful for testing are described in the Low-level Changes section below.\r\n\r\n-   `getpeerinfo`\u00a0now returns an additional\u00a0`minfeefilter`\u00a0field set to the peer's BIP133 fee filter. You can use this to detect that you have peers that are willing to accept transactions below the default minimum relay fee.\r\n-   The mempool RPCs, such as\u00a0`getrawmempool`\u00a0with\u00a0`verbose=true`, now return an additional \"bip125-replaceable\" value indicating whether the transaction (or its unconfirmed ancestors) opts-in to asking nodes and miners to replace it with a higher-feerate transaction spending any of the same inputs.\r\n-   `settxfee`\u00a0previously silently ignored attempts to set the fee below the allowed minimums. It now prints a warning. The special value of \"0\" may still be used to request the minimum value.\r\n-   `getaddressinfo`\u00a0now provides an\u00a0`ischange`\u00a0field indicating whether the wallet used the address in a change output.\r\n-   `importmulti`\u00a0has been updated to support P2WSH, P2WPKH, P2SH-P2WPKH, and P2SH-P2WSH. Requests for P2WSH and P2SH-P2WSH accept an additional\u00a0`witnessscript`\u00a0parameter.\r\n-   `importmulti`\u00a0now returns an additional\u00a0`warnings`\u00a0field for each request with an array of strings explaining when fields are being ignored or are inconsistent, if there are any.\r\n-   `getaddressinfo`\u00a0now returns an additional\u00a0`solvable`\u00a0boolean field when Litecoin Core knows enough about the address's scriptPubKey, optional redeemScript, and optional witnessScript in order for the wallet to be able to generate an unsigned input spending funds sent to that address.\r\n-   The\u00a0`getaddressinfo`,\u00a0`listunspent`, and\u00a0`scantxoutset`\u00a0RPCs now return an additional\u00a0`desc`\u00a0field that contains an output descriptor containing all key paths and signing information for the address (except for the private key). The\u00a0`desc`\u00a0field is only returned for\u00a0`getaddressinfo`\u00a0and\u00a0`listunspent`\u00a0when the address is solvable.\r\n-   `importprivkey`\u00a0will preserve previously-set labels for addresses or public keys corresponding to the private key being imported. For example, if you imported a watch-only address with the label \"cold wallet\" in earlier releases of Litecoin Core, subsequently importing the private key would default to resetting the address's label to the default empty-string label (\"\"). In this release, the previous label of \"cold wallet\" will be retained. If you optionally specify any label besides the default when calling\u00a0`importprivkey`, the new label will be applied to the address.\r\n-   See the\u00a0[Mining](https://github.com/litecoin-project/litecoin/blob/v0.18.1rc1/doc/release-notes-litecoin.md#mining)\u00a0section for changes to\u00a0`getblocktemplate`.\r\n-   `getmininginfo`\u00a0now omits\u00a0`currentblockweight`\u00a0and\u00a0`currentblocktx`\u00a0when a block was never assembled via RPC on this node.\r\n-   The\u00a0`getrawtransaction`\u00a0RPC & REST endpoints no longer check the unspent UTXO set for a transaction. The remaining behaviors are as follows: 1. If a blockhash is provided, check the corresponding block. 2. If no blockhash is provided, check the mempool. 3. If no blockhash is provided but txindex is enabled, also check txindex.\r\n-   `unloadwallet`\u00a0is now synchronous, meaning it will not return until the wallet is fully unloaded.\r\n-   `importmulti`\u00a0now supports importing of addresses from descriptors. A \"desc\" parameter can be provided instead of the \"scriptPubKey\" in a request, as well as an optional range for ranged descriptors to specify the start and end of the range to import. Descriptors with key origin information imported through\u00a0`importmulti`\u00a0will have their key origin information stored in the wallet for use with creating PSBTs. More information about descriptors can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md).\r\n-   `listunspent`\u00a0has been modified so that it also returns\u00a0`witnessScript`, the witness script in the case of a P2WSH or P2SH-P2WSH output.\r\n-   `createwallet`\u00a0now has an optional\u00a0`blank`\u00a0argument that can be used to create a blank wallet. Blank wallets do not have any keys or HD seed. They cannot be opened in software older than 0.18. Once a blank wallet has a HD seed set (by using\u00a0`sethdseed`) or private keys, scripts, addresses, and other watch only things have been imported, the wallet is no longer blank and can be opened in 0.17.x. Encrypting a blank wallet will also set a HD seed for it.\r\n\r\nDeprecated or removed RPCs\r\n==========================\r\n\r\n-   `signrawtransaction`\u00a0is removed after being deprecated and hidden behind a special configuration option in version 0.17.0.\r\n-   The 'account' API is removed after being deprecated in v0.17. The 'label' API was introduced in v0.17 as a replacement for accounts. See the\u00a0[release notes from v0.17](https://github.com/litecoin-project/litecoin/blob/master/doc/release-notes/release-notes-0.17.0.md#label-and-account-apis-for-wallet)\u00a0for a full description of the changes from the 'account' API to the 'label' API.\r\n-   `addwitnessaddress`\u00a0is removed after being deprecated in version 0.16.0.\r\n-   `generate`\u00a0is deprecated and will be fully removed in a subsequent major version. This RPC is only used for testing, but its implementation reached across multiple subsystems (wallet and mining), so it is being deprecated to simplify the wallet-node interface. Projects that are using\u00a0`generate`\u00a0for testing purposes should transition to using the\u00a0`generatetoaddress`\u00a0RPC, which does not require or use the wallet component. Calling\u00a0`generatetoaddress`\u00a0with an address returned by the\u00a0`getnewaddress`\u00a0RPC gives the same functionality as the old\u00a0`generate`\u00a0RPC. To continue using\u00a0`generate`\u00a0in this version, restart litecoind with the\u00a0`-deprecatedrpc=generate`\u00a0configuration option.\r\n-   Be reminded that parts of the\u00a0`validateaddress`\u00a0command have been deprecated and moved to\u00a0`getaddressinfo`. The following deprecated fields have moved to\u00a0`getaddressinfo`:\u00a0`ismine`,\u00a0`iswatchonly`,\u00a0`script`,\u00a0`hex`,\u00a0`pubkeys`,\u00a0`sigsrequired`,\u00a0`pubkey`,\u00a0`embedded`,\u00a0`iscompressed`,\u00a0`label`,\u00a0`timestamp`,\u00a0`hdkeypath`,\u00a0`hdmasterkeyid`.\r\n-   The\u00a0`addresses`\u00a0field has been removed from the\u00a0`validateaddress`\u00a0and\u00a0`getaddressinfo`\u00a0RPC methods. This field was confusing since it referred to public keys using their P2PKH address. Clients should use the\u00a0`embedded.address`\u00a0field for P2SH or P2WSH wrapped addresses, and\u00a0`pubkeys`\u00a0for inspecting multisig participants.\r\n\r\nREST changes\r\n============\r\n\r\n-   A new\u00a0`/rest/blockhashbyheight/`\u00a0endpoint is added for fetching the hash of the block in the current best blockchain based on its height (how many blocks it is after the Genesis Block).\r\n\r\nGraphical User Interface (GUI)\r\n==============================\r\n\r\n-   A new Window menu is added alongside the existing File, Settings, and Help menus. Several items from the other menus that opened new windows have been moved to this new Window menu.\r\n-   In the Send tab, the checkbox for \"pay only the required fee\" has been removed. Instead, the user can simply decrease the value in the Custom Feerate field all the way down to the node's configured minimum relay fee.\r\n-   In the Overview tab, the watch-only balance will be the only balance shown if the wallet was created using the\u00a0`createwallet`\u00a0RPC and the\u00a0`disable_private_keys`\u00a0parameter was set to true.\r\n-   The launch-on-startup option is no longer available on macOS if compiled with macosx min version greater than 10.11 (use CXXFLAGS=\"-mmacosx-version-min=10.11\" CFLAGS=\"-mmacosx-version-min=10.11\" for setting the deployment sdk version)\r\n\r\nTools\r\n=====\r\n\r\n-   A new\u00a0`litecoin-wallet`\u00a0tool is now distributed alongside Litecoin Core's other executables. Without needing to use any RPCs, this tool can currently create a new wallet file or display some basic information about an existing wallet, such as whether the wallet is encrypted, whether it uses an HD seed, how many transactions it contains, and how many address book entries it has.\r\n\r\nPlanned changes\r\n===============\r\n\r\nThis section describes planned changes to Litecoin Core that may affect other Litecoin software and services.\r\n\r\n-   Since version 0.16.0, Litecoin Core's built-in wallet has defaulted to generating P2SH-wrapped segwit addresses when users want to receive payments. These addresses are backwards compatible with all widely-used software. Starting with Litecoin Core 0.20, Litecoin Core will default to native segwit addresses (bech32) that provide additional fee savings and other benefits. Currently, many wallets and services already support sending to bech32 addresses, and if the Litecoin Core project sees enough additional adoption, it will instead default to bech32 receiving addresses in Litecoin Core 0.20. P2SH-wrapped segwit addresses will continue to be provided if the user requests them in the GUI or by RPC, and anyone who doesn't want the update will be able to configure their default address type. (Similarly, pioneering users who want to change their default now may set the\u00a0`addresstype=bech32`\u00a0configuration option in any Litecoin Core release from 0.16.0 up.)\r\n\r\nDeprecated P2P messages\r\n=======================\r\n\r\n-   BIP 61 reject messages are now deprecated. Reject messages have no use case on the P2P network and are only logged for debugging by most network nodes. Furthermore, they increase bandwidth and can be harmful for privacy and security. It has been possible to disable BIP 61 messages since v0.17 with the\u00a0`-enablebip61=0`\u00a0option. BIP 61 messages will be disabled by default in a future version, before being removed entirely.\r\n\r\nLow-level changes\r\n=================\r\n\r\nThis section describes RPC changes mainly useful for testing, mostly not relevant in production. The changes are mentioned for completeness.\r\n\r\nRPC\r\n===\r\n\r\n-   The\u00a0`submitblock`\u00a0RPC previously returned the reason a rejected block was invalid the first time it processed that block, but returned a generic \"duplicate\" rejection message on subsequent occasions it processed the same block. It now always returns the fundamental reason for rejecting an invalid block and only returns \"duplicate\" for valid blocks it has already accepted.\r\n-   A new\u00a0`submitheader`\u00a0RPC allows submitting block headers independently from their block. This is likely only useful for testing.\r\n-   The\u00a0`signrawtransactionwithkey`\u00a0and\u00a0`signrawtransactionwithwallet`\u00a0RPCs have been modified so that they also optionally accept a\u00a0`witnessScript`, the witness script in the case of a P2WSH or P2SH-P2WSH output. This is compatible with the change to\u00a0`listunspent`.\r\n-   For the\u00a0`walletprocesspsbt`\u00a0and\u00a0`walletcreatefundedpsbt`\u00a0RPCs, if the\u00a0`bip32derivs`\u00a0parameter is set to true but the key metadata for a public key has not been updated yet, then that key will have a derivation path as if it were just an independent key (i.e. no derivation path and its master fingerprint is itself).\r\n\r\nConfiguration\r\n=============\r\n\r\n-   The\u00a0`-usehd`\u00a0configuration option was removed in version 0.16. From that version onwards, all new wallets created are hierarchical deterministic wallets. This release makes specifying\u00a0`-usehd`\u00a0an invalid configuration option.\r\n\r\nNetwork\r\n=======\r\n\r\n-   This release allows peers that your node automatically disconnected for misbehavior (e.g. sending invalid data) to reconnect to your node if you have unused incoming connection slots. If your slots fill up, a misbehaving node will be disconnected to make room for nodes without a history of problems (unless the misbehaving node helps your node in some other way, such as by connecting to a part of the Internet from which you don't have many other peers). Previously, Litecoin Core banned the IP addresses of misbehaving peers for a period of time (default of 1 day); this was easily circumvented by attackers with multiple IP addresses. If you manually ban a peer, such as by using the\u00a0`setban`\u00a0RPC, all connections from that peer will still be rejected.\r\n\r\nWallet\r\n======\r\n\r\n-   The key metadata will need to be upgraded the first time that the HD seed is available. For unencrypted wallets this will occur on wallet loading. For encrypted wallets this will occur the first time the wallet is unlocked.\r\n-   Newly encrypted wallets will no longer require restarting the software. Instead such wallets will be completely unloaded and reloaded to achieve the same effect.\r\n-   A sub-project of Litecoin Core now provides Hardware Wallet Interaction (HWI) scripts that allow command-line users to use several popular hardware key management devices with Litecoin Core. See their\u00a0[project page](https://github.com/bitcoin-core/HWI#readme)\u00a0for details.\r\n\r\nSecurity\r\n========\r\n\r\n-   This release changes the Random Number Generator (RNG) used from OpenSSL to Litecoin Core's own implementation, although entropy gathered by Litecoin Core is fed out to OpenSSL and then read back in when the program needs strong randomness. This moves Litecoin Core a little closer to no longer needing to depend on OpenSSL, a dependency that has caused security issues in the past. The new implementation gathers entropy from multiple sources, including from hardware supporting the rdseed CPU instruction.\r\n\r\nChanges for particular platforms\r\n================================\r\n\r\n-   On macOS, Litecoin Core now opts out of application CPU throttling (\"app nap\") during initial blockchain download, when catching up from over 100 blocks behind the current chain tip, or when reindexing chain data. This helps prevent these operations from taking an excessively long time because the operating system is attempting to conserve power.\r\n\r\nDownload Binaries\r\n=================\r\n\r\nTo download, please visit the download page\u00a0[here](https://litecoin.org/). Alternatively, you can view the download folder\u00a0[here](https://download.litecoin.org/litecoin-0.18.1/).\r\n\r\nPlease use GPG to verify the integrity of the release binaries. This ensures that the binary you have downloaded has not been tampered with. Linux, MacOS and Win32 cygwin command line GPG instructions are available\u00a0[here](https://download.litecoin.org/README-HOWTO-GPG-VERIFY-TEAM-MEMBERS-KEY.txt). Please also note that we GPG sign the binaries as a convenience to you, the ultimate way to verify the integrity of the builds is to build them yourself using Gitian. Instructions on how to perform these builds, can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/master/doc/gitian-building.md).\r\n\r\nFor this release, the binaries have been signed with key identifier\u00a0[FE3348877809386C\u00a0](https://pgp.mit.edu/pks/lookup?op=get&search=0xFE3348877809386C)(thrasher's key).\r\n\r\nWARNING\r\n=======\r\n\r\nDespite this version being heavily tested, this version may still contain bugs. Always backup your wallet.dat file before upgrading. If you encounter any issues, please let us know by posting to the bug reporting section below.\r\n\r\nSource code & Build instructions\r\n================================\r\n\r\nThe master branch contains the latest commits to the next stable releases of Litecoin Core.\r\n\r\nhttps://github.com/litecoin-project/litecoin/commits/master\r\n\r\nBuild instructions for Linux can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-unix.md).\r\n\r\nBuild instructions for OSX can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-osx.md).\r\n\r\nBuilds instructions for Windows can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-windows.md).\r\n\r\nBug Reporting\r\n=============\r\n\r\nSubmit any issues you encounter here and one of the Litecoin developers will assist you.\r\n\r\nhttps://github.com/litecoin-project/litecoin/issues\r\n\r\nMailing Lists\r\n=============\r\n\r\nSign up for announcements only or development discussion.\r\n\r\nhttps://groups.google.com/forum/#!forum/litecoin-announce\r\nhttps://groups.google.com/forum/#!forum/litecoin-dev\r\n\r\nHashes for verification\r\n=======================\r\n\r\nThese are the SHA-256 hashes of the released files:\r\n\r\ne0bdd4aa81502551a0c5abcfaae52c8bbaf4a980548aa6c91053643d81924b51  litecoin-0.18.1-aarch64-linux-gnu.tar.gz59b73bc8f034208295634da56a175d74668b07613cf6484653cb467deafb1d52  litecoin-0.18.1-arm-linux-gnueabihf.tar.gz0a2788d58bd22c3754927e216bf18c64145b9fdc0d709f3f49ba3040b876a066  litecoin-0.18.1-i686-pc-linux-gnu.tar.gz4ce590ecbaecaced7253473bc574a2b70527c9aeb3a3ab33a843ea1c9caf0c86  litecoin-0.18.1-osx64.tar.gzb81d9101c6ecb38b7699cf3d05ab57df7922f40f23c8a3377750c335d7102266  litecoin-0.18.1-osx.dmge5585eaff887b9d3de9f14230db0375b858e5cccc571bdb909dfc337d5bd357c  litecoin-0.18.1-riscv64-linux-gnu.tar.gz6dfa71ccf059463f0a304f85ff1ca8b88039d63e93269d6f056ab24915be936d  litecoin-0.18.1.tar.gz778eac92953d82a3b2e0cdc925e7da9103edd0d9a9ffa151c3c7cc79b9814091  litecoin-0.18.1-win32-setup.exe39d02e463893c970f92ed5ffcb603a1a7b2e2dacdaea306e8526414af841d247  litecoin-0.18.1-win32.zipbd38a1d5d4ac1ca4246f9534032a369b0f3cd38fb2aa82c66010642fa72e65f7  litecoin-0.18.1-win64-setup.exe9ff1f552f8ed3f058a56332defa7c61cfb345848428d7b419182096eca2ac99a  litecoin-0.18.1-win64.zipca50936299e2c5a66b954c266dcaaeef9e91b2f5307069b9894048acf3eb5751  litecoin-0.18.1-x86_64-linux-gnu.tar.gz\r\n\r\nCredits\r\n=======\r\n\r\nThanks to everyone who directly contributed to this release:\r\n\r\n-   [The Bitcoin Core Developers](https://github.com/bitcoin/bitcoin/tree/master/doc/release-notes)\r\n-   Adrian Gallagher\r\n-   aunyks\r\n-   coblee\r\n-   cryptonexii\r\n-   EP1JUNE\r\n-   gabrieldov\r\n-   jmutkawoa\r\n-   Loshan\r\n-   Martin Smith\r\n-   NeMO84\r\n-   OlegKozhemiakin\r\n-   ppm0\r\n-   romanornr\r\n-   shaolinfry\r\n-   spl0i7\r\n-   stedwms\r\n-   ultragtx\r\n-   VKoskiv\r\n-   voidmain\r\n-   wbsmolen\r\n-   xinxi", "created_at": "2020-05-29T01:38:38Z", "project": "Litecoin (LTC)", "currency": "ltc", "alias": "litecoin", "repo": "litecoin-project/litecoin", "type": "utxo", "hosting": "github", "explorer": "https://chainz.cryptoid.info/ltc", "doc": "https://github.com/uphold/docker-litecoin-core", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/boss0406/cds-node", "repo_url": "https://github.com/boss0406/cds-node", "body": "", "created_at": "2020-05-18T08:00:00Z", "project": "Commercial Data Storage(CDS)", "currency": "cds", "alias": "cds", "repo": "boss0406/cds-node", "type": "eth", "hosting": "github", "explorer": "http://47.75.96.91", "doc": "https://github.com/boss0406/cds-node", "api": "https://openethereum.github.io/wiki/JSONRPC-eth-module.html", "add_time": "2020-05-18T08:00:00Z"}, {"name": "Release v2.0.5wax01", "tag_name": "v2.0.5wax01", "html_url": "https://github.com/worldwide-asset-exchange/wax-blockchain/releases/tag/v2.0.5wax01", "repo_url": "https://github.com/worldwide-asset-exchange/wax-blockchain", "body": "EOSIO 2.0.5 upgrade", "created_at": "2020-04-22T21:37:48Z", "project": "WAX (WAX)", "currency": "wax", "alias": "wax", "repo": "worldwide-asset-exchange/wax-blockchain", "type": "eos", "hosting": "github", "explorer": "https://wax.bloks.io", "doc": "https://waxsweden.org/apt-get-wax", "api": "https://developers.eos.io/eosio-nodeos/reference", "add_time": "2020-02-26T16:00:00Z"}, {"name": "v3.0.0", "tag_name": "v3.0.0", "html_url": "https://github.com/nebulasio/go-nebulas/releases/tag/v3.0.0", "repo_url": "https://github.com/nebulasio/go-nebulas", "body": "# Introduction\r\nIn go-nebulas v3.0.0 release, we release ***Nebulas Voyager*** version.\r\n\r\n# Change details\r\n## New features\r\nVoyager\u2019s core upgrade is the Proof of Devotion (PoD) consensus mechanism. The PoD mechanism is built on the basis of the contribution size from the community and is a novel method for decentralized collaboration.\r\n\r\nThe PoD mechanism comprises two components:\r\n\r\n* ***Consensus mechanism***: PoD delivers a fully decentralized blockchain relying on community managed nodes for mainnet operation, security and stability.\r\n* ***Governance mechanism***: The consensus nodes which produce the most blocks will be chosen as governance nodes and will decide if community proposals should become projects, funding and more. All governance votes will utilize on-chain voting.\r\n\r\n## Others\r\n* Adjustment of the event contract address record generated within smart contracts which modifies the binary hex of the smart contract address in topic.\r\n* Security upgrade of the mainnet pertaining to modifications of the blacklist management via smart contract.\r\n", "created_at": "2020-03-29T13:15:39Z", "project": "Nebulas (NAS)", "currency": "nas", "alias": "nebulas", "repo": "nebulasio/go-nebulas", "type": "nebulas", "hosting": "github", "explorer": "https://explorer.nebulas.io", "doc": "https://github.com/nebulasio/go-nebulas#building-from-docker", "api": "https://wiki.nebulas.io/en/latest/go-nebulas/tutorials/05-interacting-with-nebulas-by-rpc-api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v1.1.2.2_test", "html_url": "https://github.com/Cocos-BCX/cocos-mainnet/releases/tag/v1.1.2.2_test", "repo_url": "https://github.com/Cocos-BCX/cocos-mainnet", "body": "bug fixes\uff1a\r\nfix bug of call contract fee share operation.   \r\nadd functions:\r\n1.multiplatform compile support.\r\n2.add quit command in cli_wallet.\r\n3.add test modules.", "created_at": "2020-03-05T10:15:44Z", "project": "Cocos-BCX (COCOS)", "currency": "cocos", "alias": "cocos", "repo": "Cocos-BCX/cocos-mainnet", "type": "cocos", "hosting": "github", "explorer": "https://www.cocosabc.com", "doc": "https://github.com/Cocos-BCX/cocos-mainnet/wiki/Run-With-Docker", "api": "https://cn-dev.cocosbcx.io/docs/cocos-bcx-chain-api-doc", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Beta3.0.3", "tag_name": "Beta3.0.3", "html_url": "https://github.com/HcashOrg/hcOMNI/releases/tag/Beta3.0.3", "repo_url": "https://github.com/HcashOrg/hcOMNI", "body": "", "created_at": "2020-02-17T04:49:18Z", "project": "hcOMNI (hcOMNI)", "currency": "hcomni", "alias": "hcomni", "repo": "HcashOrg/hcOMNI", "type": "hc", "hosting": "github", "explorer": "https://hcomni-explorer.h.cash", "doc": "https://github.com/HcashOrg/hcOMNI/blob/master/README.md", "api": "https://github.com/OmniLayer/omnicore/blob/develop/src/omnicore/doc/rpc-api.md#json-rpc-api", "add_time": "2020-03-27T00:00:00Z"}, {"name": "Mainnet v1.1", "tag_name": "v1.1", "html_url": "https://github.com/stegos/stegos/releases/tag/v1.1", "repo_url": "https://github.com/stegos/stegos", "body": "This is a hotfix release for [Mainnet v1.0](https://github.com/stegos/stegos/releases/tag/v1.0). \r\n**Upgrading to Hotfix 1 is highly recommended.**\r\n\r\n### Changes since [Mainnet v1.0](https://github.com/stegos/stegos/releases/tag/v1.0):\r\n\r\n- Added `stake all` command, for staking all available payment utxos.\r\n- Implemented resending of restake transacitons, that increase node resilience.\r\n- Improved logs, remove downgraded technical errors to info.\r\n- Added `show validators` command to show current active validators group.\r\n- Fix panic in snowball.\r\n- Add `accounts_info` as an alias for `list_accounts`\r\n- Implemented API call to get list of connected nodes.\r\n- Make payment always use fixed fee for two outputs.\r\n- Refactored transaction tracking.\r\n- Clarifies error messages.\r\n- Updated AES crate, and fixed a bug that cause a panic on system that support AES-NI instruction set, but didn't support AVX2.\r\n- Fixed panic on unseal created account at single epoch.\r\n- Removed virtual public addresses from CLI.\r\n\r\n### Getting Started\r\n\r\nSee [https://docs.stegos.com](https://docs.stegos.com)\r\n\r\n### Feedback\r\n\r\nPlease join us on [Telegram Chat](https://t.me/stegos4privacy) to let us know your thoughts. Subscribe to the official [Telegram Channel](https://t.me/stegos4privacy_official) for the latest news.\r\n\r\n", "created_at": "2019-12-25T11:37:58Z", "project": "Stegos (STG)", "currency": "stg", "alias": "stegos", "repo": "stegos/stegos", "type": "utxo", "hosting": "github", "explorer": "http://explorer.stegos.com/mainnet", "doc": "https://github.com/stegos/stegos/wiki/Building-from-Source", "api": "https://github.com/stegos/stegos/wiki/WebSocket-API", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/FIBOS-Community/fibos-nodes", "repo_url": "https://github.com/FIBOS-Community/fibos-nodes", "body": "", "created_at": "2019-12-18T15:00:00Z", "project": "FIBOS (FO)", "currency": "fo", "alias": "fibos", "repo": "FIBOS-Community/fibos-nodes", "type": "eos", "hosting": "github", "explorer": "https://fibscan.io", "doc": "https://dev.fo/zh-cn/guide/installation.html", "api": "https://dev.fo/zh-cn/api/rpc/index.html", "add_time": "2019-12-18T15:00:00Z"}, {"name": "", "tag_name": "v0.10.0", "html_url": "https://api.github.com/repos/mdukey/mdukey/commits/498f89525d8521cb241eca38646a5bf1b81b96be", "repo_url": "https://github.com/mdukey/mdukey", "body": "update doc", "created_at": "2019-12-09T14:03:27Z", "project": "MduKey (MDU)", "currency": "mdu", "alias": "mdukey", "repo": "mdukey/mdukey", "type": "cosmos", "hosting": "github", "explorer": "https://scan.mdukey.org", "doc": "https://github.com/mdukey/mdukey/tree/master/doc/cn", "api": "https://cosmos.network/rpc/master", "add_time": "2019-12-23T04:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/coinexchain/dex-manual", "repo_url": "https://github.com/coinexchain/dex-manual", "body": "", "created_at": "2019-12-01T00:00:00Z", "project": "CoinEx Token (CET)", "currency": "cet", "alias": "coinex", "repo": "coinexchain/dex-manual", "type": "cosmos", "hosting": "github", "explorer": "https://explorer.coinex.net", "doc": "https://github.com/coinexchain/devops/blob/master/README_zh.md", "api": "https://dex-api.coinex.org/swagger", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/rolong/tesk", "repo_url": "https://github.com/rolong/tesk", "body": "", "created_at": "2019-12-01T00:00:00Z", "project": "SeekChain (SEEK)", "currency": "seek", "alias": "seekchain", "repo": "rolong/tesk", "type": "ethereum", "hosting": "github", "explorer": "http://explorer.seekchain.org", "doc": "https://note.youdao.com/ynoteshare1/index.html?id=81c78ebe08299651d7bd171dbfbe65ba&type=note", "api": "https://openethereum.github.io/wiki/JSONRPC-eth-module.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v0.19.0.1", "html_url": "https://api.github.com/repos/Darknet-Pollux/bitcoin/commits/1bc9988993ee84bc814e5a7f33cc90f670a19f6a", "repo_url": "https://github.com/Darknet-Gemini/bitcoin", "body": "doc: Generate manpages for 0.19.0.1\n\nTree-SHA512: d53a2bfa5bc589e7130cf8cd1627083ad7c72a197cbd80754c9dcf78e3775021fbd6426c5762f5f3e52e4b23ed06387c0be224914e0f98d14f3f7e51ee66c809", "created_at": "2019-11-18T09:46:57Z", "project": "BIW (BIW)", "currency": "biw", "alias": "biw", "repo": "Darknet-Gemini/bitcoin", "type": "btc", "hosting": "github", "explorer": "https://explorer.bitw.im/blocks", "doc": "https://github.com/Darknet-Gemini/bitcoin", "api": "https://github.com/Darknet-Gemini/bitcoin/blob/master/doc/JSON-RPC-interface.md", "add_time": "2020-10-20T09:00:00Z"}, {"name": "latest HX release(mainnet) ", "tag_name": "v1.3.1", "html_url": "https://github.com/HcashOrg/HyperExchange/releases/tag/v1.3.1", "repo_url": "https://github.com/HcashOrg/HyperExchange", "body": "1. fix crash existing in citizen node\r\n2. reduce the cost of disk for hx node\r\n3. fix display of my accounts\r\n\r\npls add --replay-blockchain when first launch hx_node", "created_at": "2019-09-27T02:41:36Z", "project": "HyperExchange (HX)", "currency": "hx", "alias": "hyperexchange", "repo": "HcashOrg/HyperExchange", "type": "hc", "hosting": "github", "explorer": "http://explorer.hx.cash", "doc": "http://docs.hx.cash/zh/wallets/hx-docker-deploy.html", "api": "http://docs.hx.cash/zh/dev/rpc-reference/rpc-introduce.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "latest", "html_url": "https://github.com/RubyChainNet/ruby/commit/cf52e767dea215f06e71be19edab4be397a8bf0a", "repo_url": "https://github.com/RubyChainNet/ruby", "body": "Update README.md", "created_at": "2019-02-22T02:46:11Z", "project": "RubyChain (RUB)", "currency": "ruby", "alias": "rub", "repo": "RubyChainNet/ruby", "type": "ruby", "hosting": "github", "explorer": "https://ne.rubychain.org/#/index?language=zh", "doc": "https://github.com/RubyChainNet/ruby/blob/1b50d574260a5d41624b12015c7fe24e5703cd8b/README.md", "api": "https://rubychain.org/Develop-doc-v1.0-cn.html#/?id=%e5%8f%af%e7%94%a8api%e6%8c%87%e4%bb%a4", "add_time": "2020-02-26T16:00:00Z"}]}