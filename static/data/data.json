{"updated_at": "2021-03-23T00:00:01Z", "total": 86, "data": [{"name": "Location Search", "tag_name": "1.1.76", "html_url": "https://github.com/helium/blockchain-etl/releases/tag/1.1.76", "repo_url": "https://github.com/helium/blockchain-etl", "body": "* Adds a `geometry` column to locations to enable location based searches\r\n* Adds a backfill `location_geometry` to backfill the locations table with geometry values\r\n\r\n**NOTES**: \r\n\r\n* This migration adds a dependency on the `postgis` Postgres extension which is available in most Postgres installations by default\r\n* You _must_ run the `location_geometry` backfill to backfill existing location entries. Run: `blockchain_etl backfill location_geometry` after the migration is run and ETL rebuilt and restarted \r\n", "created_at": "2021-03-22T15:06:04Z", "project": "Helium (HNT)", "currency": "hnt", "alias": "helium", "repo": "helium/blockchain-etl", "type": "helium", "hosting": "github", "explorer": "https://explorer.helium.com", "doc": "https://developer.helium.com/blockchain/setting-up-an-api-full-node", "api": "https://developer.helium.com/blockchain/api", "add_time": "2020-04-04T22:00:00Z"}, {"name": "v4.1.2", "tag_name": "v4.1.2", "html_url": "https://github.com/cosmos/gaia/releases/tag/v4.1.2", "repo_url": "https://github.com/cosmos/gaia", "body": "# Gaia v4.1.2 Release Notes\r\n\r\nThis release removes unnecessary dependencies.\r\n\r\nThere are no breaking changes.\r\n\r\n```\r\nApp: gaiad\r\nVersion: v4.1.2\r\nCommit: 95b07e641d1f69ee12dd911e92b1679f2c64d385\r\nFiles:\r\n 047851784b494665055e1d8a238b2531  gaiad-v4.1.2-darwin-amd64\r\n b07f06d7c43adcefd5bb1f567bc0bdf8  gaiad-v4.1.2-linux-amd64\r\n b73696dac8aab66249ee18b9fc8896a5  gaiad-v4.1.2-linux-arm64\r\n fb5da51f5f6beaffc620545a89d86ce5  gaiad-v4.1.2-windows-amd64.exe\r\n 8539d6b8538be8087bcdbe09a3aa669d  gaiad-v4.1.2.tar.gz\r\nChecksums-Sha256:\r\n 4126b1357ed430105773fa357212e7047ffb95710d738c14600c44affe107edc  gaiad-v4.1.2-darwin-amd64\r\n 9d33566b5bc2e7cf268bf5ce8e525c3dbd4b189c3749c60d92b84195a5b96288  gaiad-v4.1.2-linux-amd64\r\n 1bea10ddf303177b04eff7694e96c750a34036e38ba127745798ff6f737a05a1  gaiad-v4.1.2-linux-arm64\r\n eeceea5df924afd348d900a13ba5fd8794858beee65a7bff226bb080bf0bc5cd  gaiad-v4.1.2-windows-amd64.exe\r\n 656dcb09a932f345640ed90b04484aed47b3ba5fc61046c10ed86b1d790c0066  gaiad-v4.1.2.tar.gz\r\n```", "created_at": "2021-03-22T13:25:01Z", "project": "Cosmos (ATOM)", "currency": "atom", "alias": "cosmos", "repo": "cosmos/gaia", "type": "cosmos", "hosting": "github", "explorer": "https://www.mintscan.io", "doc": "https://hub.cosmos.network/main/gaia-tutorials/installation.html", "api": "https://cosmos.network/rpc/master", "add_time": "2019-12-01T00:00:00Z"}, {"name": "0.23.0", "tag_name": "v0.23.0", "html_url": "https://github.com/Bitcoin-ABC/bitcoin-abc/releases/tag/v0.23.0", "repo_url": "https://github.com/bitcoin-ABC/bitcoin-abc", "body": "# Bitcoin ABC 0.23.0 Release Notes\r\n\r\nBitcoin ABC version 0.23.0 is now available from:\r\n\r\n  <https://download.bitcoinabc.org/0.23.0/>\r\n\r\nThis release includes the following features and fixes:\r\n - A `download` permission has been extracted from the `noban` permission. For\r\n   compatibility, `noban` implies the `download` permission, but this may change\r\n   in future releases. Refer to the help of the affected settings `-whitebind`\r\n   and `-whitelist` for more details.\r\n - The `getpeerinfo` RPC now has additional `last_block` and `last_transaction`\r\n   fields that return the UNIX epoch time of the last block and the last valid\r\n   transaction received from each peer.\r\n - A new `bitcoin-cli -netinfo` command provides a network peer connections\r\n   dashboard that displays data from the `getpeerinfo` and `getnetworkinfo` RPCs\r\n   in a human-readable format. An optional integer argument from `0` to `4` may\r\n   be passed to see increasing levels of detail.\r\n", "created_at": "2021-03-22T10:58:14Z", "project": "Bitcoin Cash (BCH)", "currency": "bch", "alias": "bchn", "repo": "bitcoin-ABC/bitcoin-abc", "repo1": "https://gitlab.com/bitcoin-cash-node/bitcoin-cash-node", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bch", "explorer1": "https://blockchair.com/bitcoin-cash", "doc": "https://docs.bitcoincashnode.org/doc", "api": "https://docs.bitcoincashnode.org/doc/json-rpc/", "api1": "https://www.bitcoinabc.org/doc/0.22.6/rpc/blockchain/getblock", "add_time": "2019-12-01T00:00:00Z"}, {"name": "0.23.0", "tag_name": "v0.23.0", "html_url": "https://github.com/Bitcoin-ABC/bitcoin-abc/releases/tag/v0.23.0", "repo_url": "https://github.com/bitcoin-ABC/bitcoin-abc", "body": "# Bitcoin ABC 0.23.0 Release Notes\r\n\r\nBitcoin ABC version 0.23.0 is now available from:\r\n\r\n  <https://download.bitcoinabc.org/0.23.0/>\r\n\r\nThis release includes the following features and fixes:\r\n - A `download` permission has been extracted from the `noban` permission. For\r\n   compatibility, `noban` implies the `download` permission, but this may change\r\n   in future releases. Refer to the help of the affected settings `-whitebind`\r\n   and `-whitelist` for more details.\r\n - The `getpeerinfo` RPC now has additional `last_block` and `last_transaction`\r\n   fields that return the UNIX epoch time of the last block and the last valid\r\n   transaction received from each peer.\r\n - A new `bitcoin-cli -netinfo` command provides a network peer connections\r\n   dashboard that displays data from the `getpeerinfo` and `getnetworkinfo` RPCs\r\n   in a human-readable format. An optional integer argument from `0` to `4` may\r\n   be passed to see increasing levels of detail.\r\n", "created_at": "2021-03-22T10:58:14Z", "project": "Bitcoin Cash ABC (BCHA)", "currency": "bcha", "alias": "bcha", "repo": "bitcoin-ABC/bitcoin-abc", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bha", "explorer1": "https://blockchair.com/bitcoin-abc", "doc": "https://www.bitcoinabc.org/releases/", "api": "https://www.bitcoinabc.org/doc/0.22.6/rpc/blockchain/getblock", "add_time": "2020-11-16T00:00:00Z"}, {"name": "Algorand BetaNet 2.5.2", "tag_name": "v2.5.2-beta", "html_url": "https://github.com/algorand/go-algorand/releases/tag/v2.5.2-beta", "repo_url": "https://github.com/algorand/go-algorand", "body": "![GitHub Logo](https://www.algorand.com/static/link-grid-bottom-252785b210330feb4966f54fc17cc7cc.jpg)\r\n\r\n## Highlights\r\n\r\nBug fix for TEAL3 - setbyte and setbit were not copying values.\r\n\r\n## Changelog\r\n\r\n1. Teal\r\n    - Bug Fix - copy byteslices that will be modified by opcode\r\n\r\n## Protocol Upgrade\r\n\r\nThis release does not contain a protocol upgrade.\r\n\r\n## Additional Resources\r\n* [Algorand Forum](https://forum.algorand.org)\r\n* [Developer Documentation](https://developer.algorand.org)\r\n", "created_at": "2021-03-20T14:33:32Z", "project": "Algorand (ALGO)", "currency": "algo", "alias": "algorand", "repo": "algorand/go-algorand", "type": "utxo", "hosting": "github", "explorer": "https://algoexplorer.io", "doc": "https://developer.algorand.org/docs/run-a-node/setup/install", "api": "https://developer.algorand.org/docs/reference/rest-apis/algod", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Mainnet - v1.5.16", "tag_name": "v1.5.16", "html_url": "https://github.com/solana-labs/solana/releases/tag/v1.5.16", "repo_url": "https://github.com/solana-labs/solana", "body": "**This is a stable release suitable for use on Mainnet Beta**\r\n\r\n#### Changes\r\n* Incomplete snapshot downloads are now cleaned up\r\n* `solana-validator --snapshots DIR` argument can be used to select where snapshots are generated (contributed by @diman-io)\r\n* Adds loader instruction and cli tooling for closing program buffer accounts\r\n* `solana` cli now supports dumping the transaction message in `sign-only` mode\r\n* RPC: `getConfirmedBlock` response data can now be limited via request args: transaction data may be full, just signatures, or skipped altogether; rewards info may be skipped\r\n* Fixes pesky cli crash when calling `solana epoch-info` against non-RPC nodes\r\n* Solana Ledger app settings now available via the remote-wallet crate\r\n\r\n#### Preparing for `solana-program-test v1.6`\r\nSee https://github.com/solana-labs/solana/wiki/Migrating-Rust-programs-from-v1.5-to-v1.6 for information on how to prepare a Rust program for the upgrade to v1.6\r\n", "created_at": "2021-03-19T21:51:40Z", "project": "Solana (SOL)", "currency": "sol", "alias": "solana", "repo": "solana-labs/solana", "type": "solana", "hosting": "github", "explorer": "https://explorer.solana.com/", "explorer1": "https://solanabeach.io", "doc": "https://docs.solana.com/integrations/exchange", "api": "https://docs.solana.com/apps/jsonrpc-api", "add_time": "2020-06-17T03:00:00Z"}, {"name": "Darwinia 0.9.5-1", "tag_name": "v0.9.5-1", "html_url": "https://github.com/darwinia-network/darwinia/releases/tag/v0.9.5-1", "repo_url": "https://github.com/darwinia-network/darwinia", "body": "Some breaking changes in `ethash`/`parity-scale-codec v2.0.0`. So downgrade it.", "created_at": "2021-03-19T07:18:33Z", "project": "Darwinia (CRING)", "currency": "cring", "alias": "darwinia", "repo": "darwinia-network/darwinia", "type": "polkadot", "hosting": "github", "explorer": "https://crab.subscan.io", "doc": "https://github.com/paritytech/polkadot/blob/master/doc/docker.md", "doc1": "https://docs.google.com/document/d/1z0MF60OEe-kGvTW8ggFoDg_BWt6ZMPJGrDl0Jp_HSeE/edit", "api": "https://polkadot.js.org/api/substrate/rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Conflux v1.1.2", "tag_name": "v1.1.2", "html_url": "https://github.com/Conflux-Chain/conflux-rust/releases/tag/v1.1.2", "repo_url": "https://github.com/Conflux-Chain/conflux-rust", "body": "IMPORTANT NOTE: The `Trace` data are incompatible with `v1.1.1` or older versions, and the old data might be incorrect. If you were running a node with `executive_trace=true`, please clear the data and resync the chain.\r\n\r\n## Improvements\r\n\r\n### Configuration Improvements\r\n- Change the default node type to `full` node instead of `archive` node. And allow setting the node type in the\r\n  configuration file with the entry `node_type`.\r\n- Add parameters to independently configure the garbage collection time of different kinds of data (like receipts,\r\n  transactions, block traces, state, e.t.c.). Check the `additional_maintained_*` entries in `run/tethys.toml`.\r\n- If `block_db_dir` or `netconf_dir` is not set, put the default directory in the one configured with `conflux_data_dir`.\r\n  The old behavior is to be put in the hard-coded `./blockchain_data`.\r\n- Add a parameter `public_rpc_apis` to control the publicly available RPC interface sets. \r\n  The access to `test` and `debug` RPCs is no longer related to `mode`.\r\n- Remove the parameter `enable_tracing` because it has been included in the new `public_rpc_apis`.\r\n\r\n### RPC Improvements\r\n- Add new local RPC `cfx_getEpochReceipts` to allow querying receipts based on an epoch number.\r\n- Add new trace RPC `trace_filter` to allow querying traces based on epochs/types/offset.\r\n- Add new trace RPC `trace_transaction`.\r\n- Use hex encoding for the returned bytes in trace-related RPCs.\r\n- Add new fields `latestCheckpoint`, `latestConfirmed`, and `latestState` in `cfx_getStatus`.\r\n- Improve some RPC error reporting.\r\n  \r\n### Performance Optimization\r\n- Reduce the memory usage for maintaining more snapshots with the configuration `additional_maintained_snapshot_count`.\r\n  \r\n## Bug Fixes\r\n- Fix a possible OOM error when a full node is catching up.\r\n- Fix a possible OOM error in transaction pool when an archive node is catching up.\r\n- Return correct `block_number` in `cfx_getStatus`.\r\n- Fix a bug that makes the configuration `mining_author` require extra quotes to use a CIP-37 base32 address.\r\n- Fix a bug that the block traces may be incorrect if the pivot chain switches frequently.\r\n", "created_at": "2021-03-19T04:56:14Z", "project": "Conflux (CFX)", "currency": "cfx", "alias": "cfx", "repo": "Conflux-Chain/conflux-rust", "type": "fork eth", "hosting": "github", "explorer": "https://confluxscan.io", "doc": "https://developer.conflux-chain.org/docs/conflux-doc/docs/installation", "api": "https://developer.conflux-chain.org/docs/conflux-doc/docs/json_rpc", "add_time": "2020-11-05T11:00:00Z"}, {"name": "Mainnet FastLane v0.20.2 - Hard Fork - 32 seconds blocks - Improvements and Bug fixes", "tag_name": "mainnet-fastlane-v0.20.2", "html_url": "https://github.com/qtumproject/qtum/releases/tag/mainnet-fastlane-v0.20.2", "repo_url": "https://github.com/qtumproject/qtum", "body": "* v0.20.2 \u2013 Hard Fork - **Mandatory Update before block 845000** (806600 in testnet) \u2013 32 seconds blocks - Improvements and Bug fixes\r\n\t* Implement [QIP 26](https://github.com/qtumproject/qips/issues/26): Reduce block time to 32 seconds.\r\n\t* Update the EVM to include Istanbul and Muir Glacier updates: [EIP 152](https://eips.ethereum.org/EIPS/eip-152), [EIP 1108](https://eips.ethereum.org/EIPS/eip-1108), [EIP 1344](https://eips.ethereum.org/EIPS/eip-1344), [EIP 1884](https://eips.ethereum.org/EIPS/eip-1884), [EIP 2028](https://eips.ethereum.org/EIPS/eip-2028), [EIP 2200](https://eips.ethereum.org/EIPS/eip-2200), [EIP 2384](https://eips.ethereum.org/EIPS/eip-2384).\r\n\t* New highly efficient Staker with multithread support.\r\n\t* Speed up GUI wallet startup time.\r\n\t* Improve GUI responsiveness when dealing with large wallets.\r\n\t* Add `listconf` rpc call to list active configuration options for `qtumd`/`qtum-qt`.\r\n\t* Add `forceinitialblocksdownloadmode` rpc call to force start a node in initial blocks download mode.\r\n\t* Add bloom filter, state and utxo roots to `gettransactionreceipt` rpc call.\r\n\t* Fix a focus bug that affected the amount textbox (issue #878).\r\n\t* Fix possible PoS bnTarget overflow in some rare cases.\r\n\t* Fix a bug that caused the wallet not to revert coinstake in some cases.\r\n\t* Fix a bug in call contract GUI when decoding ABI from newer solidity versions.\r\n\t* Remove obsolete Qmix link in Qt wallet.\r\n\t* Fix build with boost 1.75\r\n\t* Fix mac deploy for osx 11\r\n\t* Add debug information when certain transaction types get rejected.\r\n\t* Delete forked block indexes from disk when using `-cleanblockindex`.\r\n\t* Fix GUI wallet staking icon flicker in some cases.\r\n\t* Set EVM chainID for Qtum to 0x51\r\n\r\nHash validation\r\n----------------\r\n\r\nIf you would like to validate that the binaries you download are exactly the same as those provided and built by the Qtum team, then you can compare your binaries to the following sha256sum hashes:\r\n\r\n```\r\n51a1fb2726b6ce99b15743bbe2db81fd1d1352ca2473d07d10625a2fea48c36d  qtum-0.20.2-aarch64-linux-gnu-debug.tar.gz\r\nabf6b42e43b365224f6ace6a934c907fef564b4d7a00304bcd0b36a38689653d  qtum-0.20.2-aarch64-linux-gnu.tar.gz\r\n47a60f4c98e384bdd9280e60b04afd22652b25c343f496b5e867cf674b9e3f60  qtum-0.20.2-arm-linux-gnueabihf-debug.tar.gz\r\na0f56b7abff5e2b15ac46e1c1b25bb39b6f0371dca162ccf5058ff8ac6e5273a  qtum-0.20.2-arm-linux-gnueabihf.tar.gz\r\n86eadc10d4ff4328b9bb18630fe8a04b7108f2f45bbb0e9f96dfa98467e6ec31  qtum-0.20.2-riscv64-linux-gnu-debug.tar.gz\r\n7193882e6696dfc83e755a1c832853f6703120ef869175e9bc9a4ffbbc594249  qtum-0.20.2-riscv64-linux-gnu.tar.gz\r\n6e0efa9d2958c8d6f32ba01a2466c8358e616a7d3a5e1969749d14470e6d631b  qtum-0.20.2-x86_64-linux-gnu-debug.tar.gz\r\n52d746f2fb827c43cd8e1784a29ad6d21b843141b85002a49a3822ceebe8651d  qtum-0.20.2-x86_64-linux-gnu.tar.gz\r\n099a4f094e6eb50db9b849a824df3407daadcca9713c5a941557f791759b5ad8  qtum-core-linux-0.20-res.yml\r\n\r\na9a6c2db1c7cf7cf476f5b0d914e92c842003f030c4377483812812120f53b6e  qtum-0.20.2-win-unsigned.tar.gz\r\ndfeeee80c4d5798b56a8ccaf8cb8826ab926247f6f29db3ef4c29637386e1f91  qtum-0.20.2-win64-debug.zip\r\n3071466f94f474a28ed0f324ffef67c5f58d1eb38541a2aec030547246234670  qtum-0.20.2-win64-setup-unsigned.exe\r\nbdd3afc7e1339f7accbad1a4269deacecbceed4b92870436475266126f261ff0  qtum-0.20.2-win64.zip\r\n06a5b844a7735d38e71f372e110b817b9e915e22323d4bf3cdf4f0726c235e72  qtum-core-win-0.20-res.yml\r\n\r\n4d789ef04de65a86bb640aa658dd441fcc296fbf08ef6fd471ec06de767e93da  qtum-0.20.2-osx-unsigned.dmg\r\nee10b55a1248019e4a62b928ff4bee9388d099a7b538b5634c5893cb6505826b  qtum-0.20.2-osx-unsigned.tar.gz\r\n14538ea562ae3e8fcfb8b7ae265fd4a74c0d041384da2c62b1a0ef6d9b82cc64  qtum-0.20.2-osx64.tar.gz\r\n59d8a676c8ba71c404e3f8bbaabde6098ca53b96c069f8ce41310f8f322afbab  qtum-core-osx-0.20-res.yml\r\n\r\ne5b8a5d5152613f24b7a3e6474e7672345ec2d57cd52957ff3f9c2716cfc49f3  src/qtum-0.20.2.tar.gz\r\n\r\n```", "created_at": "2021-03-18T22:05:26Z", "project": "Qtum (QTUM)", "currency": "qtum", "alias": "qtum", "repo": "qtumproject/qtum", "type": "utxo", "hosting": "github", "explorer": "https://qtum.info", "explorer1": "https://explorer.qtum.org", "doc": "https://docs.qtum.site/zh/Launch-Qtum-with-Docker.html", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Apricot Phase 0 - Upgrade 1 - Patch 4 - ARM Fix", "tag_name": "v1.2.4-arm-fix", "html_url": "https://github.com/ava-labs/avalanchego/releases/tag/v1.2.4-arm-fix", "repo_url": "https://github.com/ava-labs/gecko", "body": "This is a re-release of v1.2.4 patched to fix the arm64 build. For the change log please see [v1.2.4](https://github.com/ava-labs/avalanchego/releases/tag/v1.2.4).", "created_at": "2021-03-18T19:02:17Z", "project": "Avalanche (AVAX)", "currency": "avax", "alias": "ava", "repo": "ava-labs/gecko", "type": "avax", "hosting": "github", "explorer": "https://explorer.avax.network", "doc": "https://docs.avax.network/build/getting-started", "api": "https://docs.avax.network/build/tools/ortelius", "add_time": "2020-08-24T05:00:00Z"}, {"name": "Release 2.0.10", "tag_name": "2.0.10", "html_url": "https://github.com/blockstack/stacks-blockchain/releases/tag/2.0.10", "repo_url": "https://github.com/blockstack/stacks-blockchain", "body": "This is a **low-priority** hotfix release to address two bugs in the block downloader. The chainstate directory of 2.0.10 is compatible with 2.0.9. If booting up a node from genesis, or an existing node has stalled in downloading blocks, this hotfix is necessary for your node.\r\n\r\n## Fixed\r\n\r\n- Bug in microblocks inventory vector calculation that included invalidated microblocks as present bit. This bug will impact nodes booting up from genesis, but not affect nodes currently running at the chain tip (#2518).\r\n- Bug in microblocks downloader logic that would cause the stacks-node to fail to wake-up to process newly arrived microblocks in certain instances (#2491).", "created_at": "2021-03-18T16:25:02Z", "project": "Blockstack (STX)", "currency": "stx", "alias": "blockstack", "repo": "blockstack/stacks-blockchain", "type": "utxo", "hosting": "github", "explorer": "https://explorer.stacks.co/?chain=mainnet", "doc": "https://docs.blockstack.org/understand-stacks/running-mainnet-node", "api": "https://blockstack.github.io/stacks-blockchain-api/", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release 2.4.1.0", "tag_name": "N.2.4.1.0", "html_url": "https://github.com/ArweaveTeam/arweave/releases/tag/N.2.4.1.0", "repo_url": "https://github.com/ArweaveTeam/arweave", "body": "The release's main goal is to improve the efficiency of the new SPoRA miner.\r\n\r\nThe changes include:\r\n\r\n- blob storage for chunks optimized for random reads tailored specifically to the miner;\r\n- the recall byte computation - the only mining operation on the Erlang side that takes ~100 us per chunk - is re-implemented in C;\r\n- Erlang VM tuning;\r\n- a more streamlined and configurable mining server.\r\n\r\n### Upgrade note\r\n\r\nThere is no automatic migration to the new storage, only the new data is written there. You can still mine with existing data; however, you need to sync from scratch to achieve the largest performance gain. If you run the new version with existing storage, run it with `enable search_in_rocksdb_when_mining`.\r\n\r\nSee [the new version of the mining guide](https://docs.arweave.org/info/mining/mining-guide) for more details on tuning the node. Also, the new storage contains sparse files - you need to account for it if you copy your data from one place to another. You can find more information about it in the guide.\r\n\r\n### Other improvements\r\n\r\n- Transaction processing performance is improved a bit in response to increased transaction volumes.\r\n- The `rocksdb` and `chunk_storage` folders can reside on their own disks now, and the node would still track the amount of available space. These folders contain all the data required during mining. E.g., a fast nvme SSD drive can be mounted to these folders while the rest of the data may be on a cheaper HDD disk.\r\n- A few issues with the peering logic are fixed (no more `ar_bridge_update_peers_process_is_stuck` logs).\r\n- An improvement in the block propagation logic is made where nodes re-send a block to some of the best peers who did not know the previous block at the time of the first attempt, usually when two successive blocks are mined close in time. Previously, those peers had to ask for the missing blocks themselves.\r\n- Serving HTML over `/tx/[id]/data.html` and `/[id]` can be optionally disabled via the `disable serve_html_data` command line setting.\r\n- The joining procedure is made more reliable to make it easier to join when the recent blocks are big.\r\n- The broken `disk_space` setting is fixed.\r\n\r\n### Upgrade instructions\r\n\r\nN.2.4.1.0 comes with the prebuilt binaries for the Linux and Darwin x86_64 platforms.\r\n\r\nDownload the corresponding archive and unpack it:\r\n\r\n```\r\ntar -xzf arweave-2.4.1.0.linux-x86_64.tar.gz\r\n```\r\n\r\nIt makes sense to unpack it inside a dedicated directory. You can always move this directory around, but the miner may not work if you move only some of the files. The weave data would, by default, be stored in this directory, too, but it can be overridden using the data_dir command-line argument.\r\nThe archive contents look like this:\r\n\r\n```\r\nbin/  data/  erts-10.3/  lib/  releases/\r\n```\r\n\r\nTo run the miner, execute ./bin/start <arguments>. See the mining guide for more details.\r\nIf your OS/platform architecture is not in the list, check README for how to build the miner from sources.\r\n\r\nIf you want to run the miner from the existing Git folder, execute the following command to upgrade:\r\n\r\n```\r\ngit fetch --all --tags && git checkout -f N.2.4.1.0\r\n```\r\n\r\nYou can now run the miner using the arweave-server script.\r\n\r\n### Support\r\n\r\nFor more details on how to run a mining node, please see our mining guide - https://docs.arweave.org/info/mining/mining-guide. If you have any issues upgrading or would like to know more about the release, feel free to reach out to us in the #mining channel on Discord Arweave Dev Talk server (https://discord.gg/DjAFMJc) or email us at team@arweave.org.", "created_at": "2021-03-18T15:07:09Z", "project": "Arweave (AR)", "currency": "ar", "alias": "arweave", "repo": "ArweaveTeam/arweave", "type": "ar", "hosting": "github", "explorer": "https://viewblock.io/arweave", "doc": "https://www.arweave.org/mine/start", "api": "https://docs.arweave.org/developers/server/http-api", "add_time": "2020-05-12T10:00:00Z"}, {"name": "GreatVoyage-v4.1.3(Thales)", "tag_name": "GreatVoyage-v4.1.3", "html_url": "https://github.com/tronprotocol/java-tron/releases/tag/GreatVoyage-v4.1.3", "repo_url": "https://github.com/tronprotocol/java-tron", "body": "## Notices\r\nNon-mandatory upgrade\r\n\r\n## New Features\r\n\r\n### Core\r\n- [TIP-238](https://github.com/tronprotocol/tips/issues/238) Sorting the pending pool transactions, SR prioritize the transactions with high packing fee.  #3656\r\n\r\n### API\r\n-  Add new APIs to support transaction query from the pending pool. #3656\r\n\t- GetTransactionFromPending (BytesMessage) returns (Transaction): Get transaction information from pending pool.\r\n\t- GetTransactionListFromPending (EmptyMessage) returns (TransactionIdList): Get the transaction id list information in pending pool.\r\n\t- GetPendingSize (EmptyMessage) returns (NumberMessage): Get the size of the pending queue.\r\n\r\n---\r\n\r\n*If there is a change, there must be some thing that changes, yet does not change.*\r\n<p align=\"right\"> --- Thales</p>\r\n\r\n", "created_at": "2021-03-18T09:40:08Z", "project": "TRON (TRX)", "currency": "trx", "alias": "tron", "repo": "tronprotocol/java-tron", "type": "tron", "hosting": "github", "explorer": "https://tronscan.org", "doc": "https://cn.developers.tron.network/docs/%E5%AE%8C%E6%95%B4%E8%8A%82%E7%82%B9", "doc1": "hhttps://github.com/tronprotocol/Documentation/blob/master/TRX_CN/Tron-exchange.md", "api": "https://cn.developers.tron.network/reference", "add_time": "2019-12-20T00:00:00Z"}, {"name": "v2.2.0", "tag_name": "v2.2.0", "html_url": "https://github.com/ontio/ontology/releases/tag/v2.2.0", "repo_url": "https://github.com/ontio/ontology", "body": "currently running on **testnet**,  mainnet is upgrading.\r\n\r\n### Notices\r\n**All nodes need upgrade**.\r\n\r\n### New Features\r\n* add GraphQL api \r\n* destroyed contract is recorded, and can not be redeployed.\r\n\r\n### Improvement and Bug fix\r\n* add wasm debug info (#1295)\r\n* try to actively fetch proposal msg if endorse msg received first.(#1292)\r\n* fix getConsensusedCommittedBlockNum (#1284)\r\n* Add testmode check in initNodeInfo (#1275)\r\n\r\n### Breaking Changes\r\n\r\n\r\n### md5sum\r\nFile| md5sum\r\n------------ | -------------\r\nontology-darwin-amd64 | 4a5046a8abd0c4c16b93684f045177b9\r\nontology-linux-amd64 | 386eb9b90ebfd50ef089081b046dbf45\r\ntool-linux.zip | 6c4c503db1e95a6478afca26f515343f\r\ntool-darwin.zip | 4a3784a822b677b88ad7e75991e02de8\r\n\r\n\r\n### Change Log Since v2.1.0\r\n* tracking destroyed contract (#1299)\r\n* add wasm debug info (#1295)\r\n* try to actively fetch proposal msg if endorse msg received first.(#1292)\r\n* add Governance doc (#1294)\r\n* add wasm debug info (#1293)\r\n* fix getConsensusedCommittedBlockNum (#1284)\r\n* implement graphql api (#1274)\r\n* provide more error info (#1280)\r\n* update docker file (#1278)\r\n* fix static check lint issue (#1277)\r\n* Add testmode check in initNodeInfo (#1275)\r\n* add sign hash based on chain id for transaction (#1273)\r\n", "created_at": "2021-03-18T02:21:26Z", "project": "Ontology (ONT)", "currency": "ont", "alias": "ontology", "repo": "ontio/ontology", "type": "utxo", "hosting": "github", "explorer": "https://explorer.ont.io", "doc": "https://docs.ont.io/ontology-node/node-deployment", "api": "https://docs.ont.io/developer-tools/api/http-api/restful", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Chainweb Mainnet 2.6", "tag_name": "2.6", "html_url": "https://github.com/kadena-io/chainweb-node/releases/tag/2.6", "repo_url": "https://github.com/kadena-io/chainweb-node", "body": "This version replaces all previous versions. Any prior version will stop working on 2021-03-25T00:00:00Z. Node administrators must upgrade to this version before that date.\r\n\r\nThis version will stop working on 2021-05-06T00:00:00Z.\r\n\r\n### Changes:\r\n\r\n*   Increase default listen timeout to 3 minutes (#1208)\r\n*   Additional verification for coin contract (#1200)\r\n*   Additional changes support the build of fully statically linked binaries that can, for instance, be used with Alpine Linux.\r\n\r\nSee the [changelog](https://github.com/kadena-io/chainweb-node/blob/master/CHANGELOG.md#26-2021-03-18) for more information.\r\n\r\n### SHA256 Hashes:\r\n\r\n```\r\n5f12a23d3148bf5bb59b7e73489b3fedc1e4547ac2eb0546e67b84f793edbde5  chainweb-2.6.ghc-8.10.4.ubuntu-18.04.69e8a5b.tar.gz\r\nc293f4576a038ff8a0e2af5d51580de3d2ad32fc8ebf02e2aec1a76cda0fc951  chainweb-2.6.ghc-8.10.4.ubuntu-20.04.69e8a5b.tar.gz\r\n76ee01eb98e0917d4e0e80aca77e99e49bd5fb6532332657114360527786caa8  chainweb-2.6.ghc-8.10.4.macOS-latest.69e8a5b.tar.gz\r\n```\r\n\r\n### Nix store paths:\r\n\r\nLinux: `/nix/store/3m2x53f9xibr3mpz4qk5d0n5snc51k04-chainweb-2.6`\r\nMac: `/nix/store/iwn0pa7ngnc4fqi51w6y5lkx60ymj5hv-chainweb-2.6`\r\n\r\n### Docker:\r\n\r\n[End-user image](https://hub.docker.com/r/kadena/chainweb-node): `docker pull kadena/chainweb-node:2.6`\r\n[Binary-only Ubuntu-20.04](https://github.com/orgs/kadena-io/packages/container/package/chainweb-node%2Fubuntu): `docker pull ghcr.io/kadena-io/chainweb-node/ubuntu:2.6`\r\n[Binary-only Alpine](https://github.com/orgs/kadena-io/packages/container/package/chainweb-node%2Falpine): `docker pull ghcr.io/kadena-io/chainweb-node/alpine:2.6`", "created_at": "2021-03-17T21:50:17Z", "project": "Kadena (KDA)", "currency": "kda", "alias": "kadena", "repo": "kadena-io/chainweb-node", "type": "kadena", "hosting": "github", "explorer": "https://explorer.chainweb.com/mainnet", "doc": "https://medium.com/kadenacoin/how-to-operate-a-kadena-node-kda-7844622ed5b4", "api": "https://kadena-io.github.io/kadena-docs/rest-api-examples", "add_time": "2019-12-01T00:00:00Z"}, {"name": "EOSIO v2.0.11 Release Notes", "tag_name": "v2.0.11", "html_url": "https://github.com/EOSIO/eos/releases/tag/v2.0.11", "repo_url": "https://github.com/EOSIO/eos", "body": "This release contains security and miscellaneous fixes.\r\n\r\n## Security bug fixes\r\n\r\n### Consolidated Security Fixes for v2.0.11 ([#10147](https://github.com/EOSIO/eos/pull/10147))\r\n- Fix issue with account query db that could result in incorrect data or hung processes\r\n\r\nNote: These security fixes are relevant to all nodes on EOSIO blockchain networks.\r\n\r\n## Other changes\r\n- ([#10063](https://github.com/EOSIO/eos/pull/10063)) [release 2.0.x] Fix docker steps on tagged builds.\r\n- ([#10135](https://github.com/EOSIO/eos/pull/10135)) Wlb/adding nodeos param tests 2.0.x\r\n- ([#10133](https://github.com/EOSIO/eos/pull/10133)) fix compiling with boost 1.76; add <set> include in chainbase - 2.0\r\n## Documentation\r\n- ([#10094](https://github.com/EOSIO/eos/pull/10094)) [docs] Add EOSIO 2.0.10 release notes to dev portal - 2.0\r\n\r\n_Disclaimer: All repositories and other materials are provided subject to this [IMPORTANT](https://github.com/EOSIO/eos/blob/58b270379e846ce6633d7a9e6a4f80dd880521a8/IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice._", "created_at": "2021-03-17T20:57:29Z", "project": "EOSIO (EOS)", "currency": "eos", "alias": "eos", "repo": "EOSIO/eos", "type": "eos", "hosting": "github", "explorer": "https://bloks.io", "doc": "https://developers.eos.io/manuals/eos/latest/nodeos/index", "api": "https://developers.eos.io/manuals/eos/latest/nodeos/rpc_apis/index", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Neo CLI v3.0.0-rc1", "tag_name": "v3.0.0-rc1", "html_url": "https://github.com/neo-project/neo-node/releases/tag/v3.0.0-rc1", "repo_url": "https://github.com/neo-project/neo-node", "body": "- rc1 is based on .NET 5.0 SDK, please install it from https://dotnet.microsoft.com/download/dotnet/5.0\r\n- It's a formal version which is only for rc1 Testnet. \r\n\r\n## **ChangeLog:**\r\n\r\n### Changed\r\n- ([#753](https://github.com/neo-project/neo-node/pull/753)) Combine config.json and protocol.json\r\n- ([#752](https://github.com/neo-project/neo-node/pull/752)) update neo to v3.0.0-CI01229\r\n- ([#748](https://github.com/neo-project/neo-node/pull/748)) sync neo changes\r\n- ([#743](https://github.com/neo-project/neo-node/pull/743)) sync neo\r\n- ([#740](https://github.com/neo-project/neo-node/pull/740)) remove singletons\r\n\r\n### Fixed\r\n- ([#750](https://github.com/neo-project/neo-node/pull/750)) Fix autostart\r\n- ([#749](https://github.com/neo-project/neo-node/pull/749)) fix log path\r\n- ([#763](https://github.com/neo-project/neo-node/pull/763)) fix localnode null\r\n\r\n\r\nFile Hashes|\r\n------------|\r\nFile: neo-cli-portable.zip<br />SHA1: EF1AA0BB64444BEC921D90CFD47ACCD632A01733<br />SHA256: 6158E829701E19D41F5F18204F2058901329D2E0D47C0D750F65F90BF9412802|\r\nFile: neo-cli-win-x64.zip<br />SHA1: 8F5FE620A3E2774CC28075123FAE9652E4FB310B<br />SHA256: 732728A5BF5663692A2CD3EF73C44EF244E61128AE9AC4D444618B4233C6B8C1|\r\nFile: neo-cli-linux-x64.zip<br />SHA1: BD42101A0141673331167EC84F28EF1BA13EE52B<br />SHA256: 0BBD7F41D98F3FFC422C08BC6C57A49C48BC1D107CC4927C6424E180A5F9522F|\r\nFile: neo-cli-osx-x64.zip<br />SHA1: 122511973D53D58A7A79596EE63CAEB4FF9B2C8B<br />SHA256: B6E088712D023437B7811253F9A1CD43DF8D4D9A72E7F85B7C35B3808BFCD56C|", "created_at": "2021-03-17T15:10:41Z", "project": "Neo (NEO)", "currency": "neo", "alias": "neo", "repo": "neo-project/neo-node", "type": "neo", "hosting": "github", "explorer": "https://neotube.io/home", "explorer1": "https://neotracker.io", "explorer2": "https://neoscan.io", "doc": "https://docs.neo.org/docs/zh-cn/node/cli/setup.html", "api": "https://docs.neo.org/docs/zh-cn/reference/rpc/latest-version/api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/Open-Nyzo/nyzoVerifier", "repo_url": "https://github.com/Open-Nyzo/nyzoVerifier", "body": "", "created_at": "2021-03-17T10:00:00Z", "project": "NYZO (Nyzo)", "currency": "nyzo", "alias": "Nyzo", "repo": "Open-Nyzo/nyzoVerifier", "type": "nyzo", "hosting": "github", "explorer": "https://nyzo.today/explorer", "explorer1": "https://nyzo.co/block", "doc": "https://nyzo.me/%E6%96%87%E7%AB%A0/f/nyzo%E9%AA%8C%E8%AF%81%E8%80%85%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B", "api": "https://github.com/Open-Nyzo/nyzoVerifier/blob/JSONRPC/JSONRPC_README.md", "add_time": "2021-03-17T10:00:00Z"}, {"name": "v1.5.2", "tag_name": "v1.5.2", "html_url": "https://github.com/filecoin-project/lotus/releases/tag/v1.5.2", "repo_url": "https://github.com/filecoin-project/lotus", "body": "## REGRESSION NOTE\r\n\r\nThis release has a regression which can affect miner and some client nodes, making it impossible to restart the node, producing an error message like this on startup.\r\n```\r\nERROR: creating node: starting node: could not build arguments for function [....] opening backupds: opening log: reading backup part of the logfile: unmarshaling log entry: expected byte array\r\n```\r\n\r\n This is caused by the node creating a corrupted metadata write log. If you encounter this error:\r\n- Remove files in `.lotus[miner]/kvlog/metadata/`  directory\r\n- Optionally, to avoid this issue from reoccurring, update to [`v1.5.3-rc1`](https://github.com/filecoin-project/lotus/releases/tag/v1.5.3-rc1)\r\n- Restart the node\r\n\r\n## Release announcement\r\n\r\nThis is a hotfix release of Lotus that fixes a critical bug introduced in v1.5.1 in the miner window PoSt logic. This upgrade is only affecting miner nodes.\r\n\r\n## Changes\r\n- fix window post rand check (https://github.com/filecoin-project/lotus/pull/5773)\r\n- wdpost: Always use head tipset to get randomness (https://github.com/filecoin-project/lotus/pull/5774)\r\n", "created_at": "2021-03-11T09:48:02Z", "project": "Filecoin (FIL)", "currency": "fil", "alias": "fil", "repo": "filecoin-project/lotus", "type": "ipfs", "hosting": "github", "explorer1": "https://filscout.io/zh", "explorer": "https://filfox.info/zh", "doc": "https://lotu.sh/en+install-lotus-ubuntu", "api": "https://lotu.sh/en+api-methods", "add_time": "2020-09-11T09:52:00Z"}, {"name": "v0.12.4 Release Notes", "tag_name": "v0.12.4", "html_url": "https://github.com/Kava-Labs/kava/releases/tag/v0.12.4", "repo_url": "https://github.com/Kava-Labs/kava", "body": "This patch release contains a fix for the critical security vulnerability that was found in https://github.com/cosmos/gaia/pull/755\r\n\r\nValidators should update their nodes immediately", "created_at": "2021-03-10T22:08:29Z", "project": "Kava (KAVA)", "currency": "kava", "alias": "kava", "repo": "Kava-Labs/kava", "type": "cosmos", "hosting": "github", "explorer": "https://kava.mintscan.io", "explorer1": "https://kava.bigdipper.live", "doc": "https://docs.kava.io/#installation", "doc1": "https://mp.weixin.qq.com/s/HFj7bYqQ7FrjR_89jj-QWQ", "api": "https://rpc.kava.io", "add_time": "2020-03-03T12:00:00Z"}, {"name": "v0.16.8.3", "tag_name": "v0.16.8.3", "html_url": "https://github.com/okex/okexchain/releases/tag/v0.16.8.3", "repo_url": "https://github.com/okex/okexchain", "body": "", "created_at": "2021-03-10T10:45:28Z", "project": "OKExChain (OKT)", "currency": "okt", "alias": "okex", "repo": "okex/okexchain", "type": "cosmos", "hosting": "github", "explorer": "https://www.oklink.com/okexchain", "doc": "https://okexchain-docs.readthedocs.io/en/latest/getting-start/install-okexchain.html", "api": "https://documenter.getpostman.com/view/1112175/SzS5u6bE?version=latest#c5e563ed-ce31-42f6-8203-1ebe29563fc6", "add_time": "2020-12-30T02:00:00Z"}, {"name": "Mainnet 6 - March 10 Spork", "tag_name": "v0.14.9", "html_url": "https://github.com/onflow/flow-go/releases/tag/v0.14.9", "repo_url": "https://github.com/onflow/flow-go", "body": "# Mainnet 6 - Spork\r\n> March 10th, 2021\r\n\r\n## State Migrations\r\nThere are no state migrations as part of the spork.\r\n\r\n## Improvements\r\nThis Spork will be updating the Mainnet from v0.14.1 to v0.14.8\r\n\r\nThe main items being added are:\r\n\r\n### Bug fixes\r\n- Fix Transaction execution checking crash\r\n- Fix Script execution crash\r\n### Logging, monitoring and tracing improvements\r\n- Remove unnecessary logs from Execution nodes\r\n- Adding additional logs to Access nodes\r\n- Improve tracing of the FVM\r\n### Performance related improvements\r\n- Cadence checker Cache\r\n- Optimized SHA3 custom implementation\r\n\r\n---\r\n\r\n## Changes since v0.14.1\r\n### [v0.14.2](https://github.com/onflow/flow-go/compare/v0.14.1...v0.14.2)\r\n- Minor logging changes (#422) @zhangchiqing\r\n- Temporarily disabling SPoCKs generation (#421) @Kay-Zee\r\n### [v0.14.3](https://github.com/onflow/flow-go/compare/v0.14.2...v0.14.3)\r\n- Add multi receipt requirement for sealing (#423) @AlexHentschel\r\n- Add retry logic for Transaction Cadence code checking (#426) @ramtinms\r\n### [v0.14.4](https://github.com/onflow/flow-go/compare/v0.14.3...v0.14.4)\r\n- Multi receipt requirement improvements (#444)\r\n- Replace AST cache with in-memory program storage, and updating Cadence to v0.13.0 (#456) @turbolent\r\n### [v0.14.5](https://github.com/onflow/flow-go/compare/v0.14.4...v0.14.5)\r\n- Update Cadence to v0.13.1 (#458) @turbolent\r\n- Add tracing improvements for the FVM (#459) @ramtinms\r\n- Use optimized custom SHA3 (#455 + #461) @tarakby\r\n### [v0.14.6](https://github.com/onflow/flow-go/compare/v0.14.5...v0.14.6)\r\n- Fix transaction signature ordering (#468) @psiemens\r\n- Disable tracing by default (#471) @ramtinms\r\n- Add fork aware Cadence cache (#473) @m4ksio\r\n- Delay contract updating contract contents while executing tx (#469) @ramtinms\r\n- Add access node gRPC timeout to Execution and Collection node gRPC connections (#463) @vishalchangrani\r\n- Update Cadence to v0.13.3 (#483) @turbolent\r\n- Adds collection indexing fix on Access nodes (#480)\r\n### [v0.14.7](https://github.com/onflow/flow-go/compare/v0.14.6...v0.14.7)\r\n- Panics in script execution are handled (#494) @m4ksio\r\n- Update Cadence to v0.13.5 (#496) @Kay-Zee\r\n### [v0.14.8](https://github.com/onflow/flow-go/compare/v0.14.7...v0.14.8)\r\n- Update max address index to 10 million (#499) @jordanschalm \r\n- Additional verification node logging (#500 + #501) @ramtinms @yhassanzadeh13 \r\n- Access node rate limiting (#503) @vishalchangrani \r\n- Access node preferred Execution Node flag (#504) @vishalchangrani ", "created_at": "2021-03-09T21:10:06Z", "project": "Flow (FLOW)", "currency": "flow", "alias": "flow", "repo": "onflow/flow-go", "type": "swap", "hosting": "github", "explorer": "https://flow.bigdipper.live", "doc": "https://docs.onflow.org/node-operation/node-setup/", "api": "https://docs.onflow.org/access-api/#blocks", "add_time": "2021-01-25T10:00:00Z"}, {"name": "Gemini Sigma (v1.10.1)", "tag_name": "v1.10.1", "html_url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.10.1", "repo_url": "https://github.com/ethereum/go-ethereum", "body": "Geth v1.10.1 is a minor release with the sole purpose of enabling the [***Berlin hard-fork***](https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/berlin.md)! This hard-fork takes a step towards making opcodes fairer and lays the groundwork to new types of transactions, with lots of interesting features to be built on top.\r\n\r\nThe Ethereum Foundation will have a dedicated blog post for Berlin. The essential parts from Geth's perspective is that v1.10.1 is ***required*** for Berlin on all testnets and the mainnet too. Below you can find the fork blocks for the different networks and their expected schedules. Please ensure you are upgraded well in advance of the forks to ensure a smooth transition.\t\r\n\r\n- ***Ropsten*** 9,812,189 (10 Mar 2021)\t\r\n- ***Goerli*** 4,460,644 (17 Mar 2021)\t\r\n- ***Rinkeby*** 8,290,928 (24 Mar 2021)\t\r\n- ***Mainnet*** 12,244,000 (14 Apr 2021)\t\r\n\r\nFor a full rundown of the changes please consult the Geth 1.10.1 [release milestone](https://github.com/ethereum/go-ethereum/milestone/113?closed=1).\r\n\r\n---\r\n\r\nAs with all our previous releases, you can find the:\r\n\r\n- Pre-built binaries for all platforms on our [downloads page](https://geth.ethereum.org/downloads/).\r\n- Docker images published under [`ethereum/client-go`](https://cloud.docker.com/u/ethereum/repository/docker/ethereum/client-go).\r\n- Ubuntu packages in our [Launchpad PPA repository](https://launchpad.net/~ethereum/+archive/ubuntu/ethereum).\r\n- OSX packages in our [Homebrew Tap repository](https://github.com/ethereum/homebrew-ethereum).\r\n", "created_at": "2021-03-08T09:32:20Z", "project": "Ethereum (ETH)", "currency": "eth", "alias": "ethereum", "repo": "ethereum/go-ethereum", "type": "ethereum", "hosting": "github", "explorer": "https://cn.etherscan.com", "doc": "https://geth.ethereum.org/docs/install-and-build/installing-geth#install-on-ubuntu-via-ppas", "api": "https://eth.wiki/json-rpc/API", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Kardia Release (v1.1.0)", "tag_name": "v1.1.0", "html_url": "https://github.com/kardiachain/go-kardia/releases/tag/v1.1.0", "repo_url": "https://github.com/kardiachain/go-kardia", "body": "Public Docker image on GCR:\r\n[gcr.io/indigo-history-235904/go-kardia:v1.1.0](https://gcr.io/indigo-history-235904/go-kardia:v1.1.0)\r\n\r\n- Implement blockchain reactor to operate the node between fastsync and consensus mode. (#129)\r\n- Implement new logs bloom filter APIs for clients to subscribe newly proposed and confirmed events and blocks.(#133)\r\n- Update node configs to allow clients to connect to a node through WebSocket and enable fastsync module.\r\n- Implement ws newHead events (#128)\r\n- Minor fix in other RPC APIs, `tx_pool` module. (#130)", "created_at": "2021-03-04T10:16:16Z", "project": "KardiaChain (KAI)", "currency": "kai", "alias": "Kardia", "repo": "kardiachain/go-kardia", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.kardiachain.io", "doc": "https://github.com/kardiachain/go-kardia/wiki/Developer-Ubuntu-development-environment-bring-up", "api": "https://github.com/kardiachain/go-kardia/wiki/Kardia-JSON-RPC-API#kai_blockNumber", "add_time": "2021-02-20T08:00:00Z"}, {"name": "Polkadot v0.8.29", "tag_name": "v0.8.29", "html_url": "https://github.com/paritytech/polkadot/releases/tag/v0.8.29", "repo_url": "https://github.com/paritytech/polkadot", "body": "Upgrade priority: **Low** (upgrade at your convenience) \r\nNative runtimes:\r\n\r\n- Polkadot: **29**\r\n- Kusama: **2029**\r\n- Westend: **49**\r\n\r\nThis release was tested against the following versions of `rustc`. Other versions may work.\r\n\r\n- rustc 1.50.0 (cb75ad5db 2021-02-10)\r\n- rustc 1.52.0-nightly (98f8cce6d 2021-02-25)\r\n\r\nWASM runtimes built with [srtool](https://github.com/paritytech/srtool) using `rustc 1.49.0-nightly (fd542592f 2020-10-26)`.\r\n\r\nProposal hashes:\r\n* `polkadot_runtime-v29.compact.wasm - 0x08027556b75256d6bcdd9a03213fac2d428cd00996f7101419e7724b7d9b950a`\r\n* `kusama_runtime-v2029.compact.wasm - 0x234e4c7eebfc2a85b79b1a687b36735528a86c0b6accf2fe7f490ada6940e4a7`\r\n\r\n## Changes\r\n\r\n* CancelProxy uses `reject_announcement` instead of `remove_announcement` (#2429)\r\n\r\n## Client\r\n\r\n* Make it clear in CLI that paritydb is experimental (paritytech/substrate#8152)\r\n* Remove all code related to sentry nodes (paritytech/substrate#8079)\r\n* Remove backwards-compatibility networking hack (paritytech/substrate#8068)\r\n* Extend SS58 network identifiers (paritytech/substrate#8039)\r\n* Update dependencies for next update (paritytech/substrate#8015)\r\n* Add a send_request function to NetworkService (paritytech/substrate#8008)\r\n* Rename system_networkState to system_unstable_networkState (paritytech/substrate#8001)\r\n* Storage chains: serve transactions over IPFS/bitswap (paritytech/substrate#7963)\r\n\r\n## Runtime\r\n\r\n* \u2705 `unused` Session Delayed Para Changes / Actions Queue (#2406)\r\n* \u2705 `unused` Explicit Para Lifecycle w/ Upgrades and Downgrades (#2354)\r\n* \u2705 `trivial` Cancel Proxy Type (#2334)\r\n* \u2705 `trivial` Use Extensible Multiaddress in all Polkadot Runtimes (#2126)\r\n* \u2705 `trivial` Return number of keys removed when calling `storage_kill` on child trie (paritytech/substrate#8166)\r\n* \u2705 `trivial` Allow `transfer_keep_alive` to transfer all free balance (paritytech/substrate#8125)\r\n* \u2705 `audited` Move dust collection hook to outside of account mutate (paritytech/substrate#8087)\r\n* \u2705 `trivial` AURA: Switch to `CurrentSlot` instead of `LastTimestamp` (paritytech/substrate#8023)\r\n* \u2705 `trivial` contracts: Emit event on contract termination (paritytech/substrate#8014)\r\n* \u2705 `trivial` contracts: Charge rent for code storage (paritytech/substrate#7935)\r\n", "created_at": "2021-03-03T17:57:26Z", "project": "Kusama (KSM)", "currency": "ksm", "alias": "kusama", "repo": "paritytech/polkadot", "type": "polkadot", "hosting": "github", "explorer": "https://kusama.subscan.io", "doc": "https://github.com/paritytech/polkadot/blob/master/doc/docker.md", "api": "https://polkadot.js.org/api/substrate/rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Polkadot v0.8.29", "tag_name": "v0.8.29", "html_url": "https://github.com/paritytech/polkadot/releases/tag/v0.8.29", "repo_url": "https://github.com/paritytech/polkadot", "body": "Upgrade priority: **Low** (upgrade at your convenience) \r\nNative runtimes:\r\n\r\n- Polkadot: **29**\r\n- Kusama: **2029**\r\n- Westend: **49**\r\n\r\nThis release was tested against the following versions of `rustc`. Other versions may work.\r\n\r\n- rustc 1.50.0 (cb75ad5db 2021-02-10)\r\n- rustc 1.52.0-nightly (98f8cce6d 2021-02-25)\r\n\r\nWASM runtimes built with [srtool](https://github.com/paritytech/srtool) using `rustc 1.49.0-nightly (fd542592f 2020-10-26)`.\r\n\r\nProposal hashes:\r\n* `polkadot_runtime-v29.compact.wasm - 0x08027556b75256d6bcdd9a03213fac2d428cd00996f7101419e7724b7d9b950a`\r\n* `kusama_runtime-v2029.compact.wasm - 0x234e4c7eebfc2a85b79b1a687b36735528a86c0b6accf2fe7f490ada6940e4a7`\r\n\r\n## Changes\r\n\r\n* CancelProxy uses `reject_announcement` instead of `remove_announcement` (#2429)\r\n\r\n## Client\r\n\r\n* Make it clear in CLI that paritydb is experimental (paritytech/substrate#8152)\r\n* Remove all code related to sentry nodes (paritytech/substrate#8079)\r\n* Remove backwards-compatibility networking hack (paritytech/substrate#8068)\r\n* Extend SS58 network identifiers (paritytech/substrate#8039)\r\n* Update dependencies for next update (paritytech/substrate#8015)\r\n* Add a send_request function to NetworkService (paritytech/substrate#8008)\r\n* Rename system_networkState to system_unstable_networkState (paritytech/substrate#8001)\r\n* Storage chains: serve transactions over IPFS/bitswap (paritytech/substrate#7963)\r\n\r\n## Runtime\r\n\r\n* \u2705 `unused` Session Delayed Para Changes / Actions Queue (#2406)\r\n* \u2705 `unused` Explicit Para Lifecycle w/ Upgrades and Downgrades (#2354)\r\n* \u2705 `trivial` Cancel Proxy Type (#2334)\r\n* \u2705 `trivial` Use Extensible Multiaddress in all Polkadot Runtimes (#2126)\r\n* \u2705 `trivial` Return number of keys removed when calling `storage_kill` on child trie (paritytech/substrate#8166)\r\n* \u2705 `trivial` Allow `transfer_keep_alive` to transfer all free balance (paritytech/substrate#8125)\r\n* \u2705 `audited` Move dust collection hook to outside of account mutate (paritytech/substrate#8087)\r\n* \u2705 `trivial` AURA: Switch to `CurrentSlot` instead of `LastTimestamp` (paritytech/substrate#8023)\r\n* \u2705 `trivial` contracts: Emit event on contract termination (paritytech/substrate#8014)\r\n* \u2705 `trivial` contracts: Charge rent for code storage (paritytech/substrate#7935)\r\n", "created_at": "2021-03-03T17:57:26Z", "project": "Polkadot (DOT)", "currency": "dot", "alias": "polkadot", "repo": "paritytech/polkadot", "type": "polkadot", "hosting": "github", "explorer": "https://polkadot.subscan.io", "explorer1": "https://polkascan.io/polkadot", "doc": "https://wiki.polkadot.network/docs/en/maintain-sync", "api": "https://wiki.polkadot.network/docs/en/build-node-interaction#polkadot-rpc", "add_time": "2020-07-29T08:00:00Z"}, {"name": "Celo-Blockchain Release 1.2.4-stable", "tag_name": "v1.2.4", "html_url": "https://github.com/celo-org/celo-blockchain/releases/tag/v1.2.4", "repo_url": "https://github.com/celo-org/celo-blockchain", "body": "This is a security release which fixes a possible panic in v1.2.3.  This vulnerability could be used in a DoS attack by causing affected nodes to crash.  For this reason, all node operators should upgrade as soon as they can.  Versions earlier than v1.2.3 (except for v1.1.4, which backports the fixes to v1.1.x) are not affected by this bug, but do suffer from the vulnerabilities described in the v1.2.3 release, and so should also be upgraded.\r\n\r\nIf you are upgrading from versions older than v1.2.x, please also see the v1.2.2-stable release notes.\r\n\r\nDocker Images\r\n\r\ngeth: us.gcr.io/celo-org/geth:1.2.4\r\ngeth-all: us.gcr.io/celo-org/geth-all:1.2.4", "created_at": "2021-03-02T15:39:39Z", "project": "Celo (CELO)", "currency": "celo", "alias": "celo", "repo": "celo-org/celo-blockchain", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.celo.org", "doc": "https://docs.celo.org/getting-started/mainnet/running-a-full-node-in-mainnet", "api": "https://eth.wiki/json-rpc/API", "add_time": "2020-07-07T07:00:00Z"}, {"name": "v0.19.1.10", "tag_name": "v0.19.1.10", "html_url": "https://github.com/ghost-coin/ghost-core/releases/tag/v0.19.1.10", "repo_url": "https://github.com/ghost-coin/ghost-core", "body": "Emergency HF (ring-ct vulnerability)\r\n\r\nHashes:\r\n```\r\nee92b26a3473c0b67e7dd476b4d71f3b0eb68a17e9c63785128f3de1cca5de24  ghost-0.19.1.10.tar.gz\r\nf33f0d5a92026e7683612d771268043e1001903229bfd43ed67b4e2f54cb0056  ghost-0.19.1.10-win32.zip\r\na5d42f83e459500bdb6859023253213a7a079abac0574042c8a5495c7c4a8f94  ghost-0.19.1.10-win64.zip\r\n277f565a5d97a5e907fc4b828e136fc41557192181fdae7d7baa541d38abf6dc  ghost-0.19.1.10-osx64.tar.gz\r\n0190e4f619cbfd61a9b104a2ec6de1694486907c4179ee4cb281e4d7a016843d  ghost-0.19.1.10-x86_64-linux-gnu.tgz\r\nd368197ce7e40cafc68b641dd8b2c79e806212ace8d2974e1ce892a9bfab8c8c  ghost-0.19.1.10-arm-linux-gnueabihf.tar.gz\r\n```", "created_at": "2021-03-01T09:11:55Z", "project": "Ghost (GHOST)", "currency": "ghost", "alias": "ghost", "repo": "ghost-coin/ghost-core", "type": "utxo", "hosting": "github", "explorer": "https://ghostscan.io", "explorer1": "https://www.ghostin.io", "doc": "https://github.com/ghost-coin/ghost-core/tree/master/doc", "api": "https://github.com/ghost-coin/ghost-core/blob/master/doc/REST-interface.md", "add_time": "2020-08-18T10:00:00Z"}, {"name": "Dogecoin Core 1.14.3", "tag_name": "v1.14.3", "html_url": "https://github.com/dogecoin/dogecoin/releases/tag/v1.14.3", "repo_url": "https://github.com/dogecoin/dogecoin", "body": "This is a new minor update that includes important performance improvements. It is a strongly recommended update for everyone.\r\n\r\n*This release can be installed over an existing 1.14 installation seamlessly, without the need for uninstallation, re-indexation or re-download.* Simply shut down your running Dogecoin-QT or dogecoind, perform the installation and restart your node.\r\n\r\nImprove synchronization speed\r\n----------------------------\r\n\r\nSignificantly improves the speed at which a node can upload blocks, by removing expensive integrity checks that were performed each time a block is sent to another node. When a block is received and during rescans of the locally stored blockchain, the checks are still performed.\r\n\r\nReduce default mempool expiry time\r\n----------------------------------\r\n\r\nReduces the default time that transactions are cached in the mempool from 336 hours to 24 hours. This default setting can be overridden with the `-mempoolexpiry` parameter by individual node operators to a value (expressed in hours) that makes the most sense for the use cases the node serves.\r\n\r\nOther changes and improvements\r\n----------------------------------\r\n\r\n* Increase block download timeouts\r\n* Add size_on_disk, prune_target_size, automatic_pruning to getblockchaininfo\r\n* Add query options to listunspent RPC call\r\n* Set BIP65 softfork heights in chainparams.cpp.\r\n* Update package links for OSX cross compilation.\r\n* Change IPC prefix from `bitcoin:` to `dogecoin:`.\r\n* Locale independent sorting.\r\n* Corrections to Italian translation.\r\n* Refresh main and test network checkpoints and seeds.\r\n* Do not print an error on connection timeouts through proxy.\r\n* Numerous fixes to automated tests.\r\n* Numerous fixes to documentation.\r\n", "created_at": "2021-02-28T17:39:36Z", "project": "Dogecoin (DOGE)", "currency": "doge", "alias": "dogecoin", "repo": "dogecoin/dogecoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/doge", "explorer1": "https://sochain.com/doge", "doc": "https://github.com/dogecoin/dogecoin", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Witnet-rust 1.1.3 \u2014 Critical Upgrade", "tag_name": "1.1.3", "html_url": "https://github.com/witnet/witnet-rust/releases/tag/1.1.3", "repo_url": "https://github.com/witnet/witnet-rust", "body": "```\r\nVersion: 1.1.3\r\nRelease type: minor\r\nCriticality: CRITICAL\r\nConsensus: non-breaking\r\nBackwards compatibility: non-breaking\r\n```\r\nThis is a CRITICAL UPGRADE. Please read the release notes for further instructions: https://medium.com/witnet/9a0bdfd0325e", "created_at": "2021-02-25T11:01:24Z", "project": "Witnet (WIT)", "currency": "wit", "alias": "wit", "repo": "witnet/witnet-rust", "type": "witnet", "hosting": "github", "explorer": "https://witnet.network", "doc": "https://docs.witnet.io/try/run-a-node/", "api": "https://docs.witnet.io/developer/wallet-api/", "add_time": "2021-01-15T06:00:00Z"}, {"name": "Release v2.0.9", "tag_name": "v2.0.9", "html_url": "https://github.com/chainx-org/ChainX/releases/tag/v2.0.9", "repo_url": "https://github.com/chainx-org/ChainX", "body": "\r\nUpgrade priority:\r\n\r\n- [x] **Medium** (upgrade at your earliest convenience)\r\n- [ ] **High** (upgrade ASAP)\r\n\r\nWASM runtime built with [srtool](https://hub.docker.com/r/chainxorg/srtool) using `rustc 1.48.0-nightly (381b445ff 2020-09-29)`.\r\n\r\nchainx runtime proposal hash: `0xa919dc70d5d3f61365065adf46ad67181424c537e79db4128fc378f39d9bb30d`.\r\n\r\nNative runtime version: **10**\r\n\r\n#### Changes\r\n\r\n##### Runtime\r\n\r\n- Integrate Proxy module (https://github.com/chainx-org/ChainX/pull/478)\r\n\r\n##### Others\r\n\r\nN/A\r\n\r\n", "created_at": "2021-02-25T04:46:52Z", "project": "ChainX (PCX)", "currency": "pcx", "alias": "chainx", "repo": "chainx-org/ChainX", "type": "polkadot", "hosting": "github", "explorer": "https://chainx.subscan.io/", "explorer1": "https://scan.chainx.org", "doc": "https://github.com/chainx-org/chainx-wiki-1.0/blob/master/Run-a-ChainX-node.md", "api": "https://doc.chainx.org/documentation/zh/docs/developers/rpc/", "add_time": "2019-12-01T00:00:00Z"}, {"name": "4.3.0", "tag_name": "v4.3.0", "html_url": "https://github.com/zcash/zcash/releases/tag/v4.3.0", "repo_url": "https://github.com/zcash/zcash", "body": "Notable changes\r\n===============\r\n\r\nReduce download traffic\r\n-----------------------\r\n\r\nWe have made several changes to reduce the amount of data downloaded by `zcashd` during initial block download (IBD):\r\n\r\n- Significant time and bandwidth is spent in issuing `getheaders` P2P requests. This results in noticeable bandwidth usage due to the large size of Zcash block headers.\r\n\r\n  We now eliminate redundant requests in cases where we already know the last header in the message. This optimization is enabled by default, but can be disabled by setting the config option `-nooptimize-getheaders`.\r\n\r\n- Transactions in the mempool are no longer downloaded during IBD (`zcashd` will only request block data).\r\n\r\nReduce upload traffic\r\n---------------------\r\n\r\nA major part of the outbound traffic is caused by serving historic blocks to other nodes in initial block download state.\r\n\r\nIt is now possible to reduce the total upload traffic via the `-maxuploadtarget` parameter. This is *not* a hard limit but a threshold to minimize the outbound traffic. When the limit is about to be reached, the uploaded data is cut by not serving historic blocks (blocks older than one week). Moreover, any SPV peer is disconnected when they request a filtered block.\r\n\r\nThis option can be specified in MiB per day and is turned off by default (`-maxuploadtarget=0`). The recommended minimum is 1152 * MAX_BLOCK_SIZE (currently 2304MB) per day.\r\n\r\nWhitelisted peers will never be disconnected, although their traffic counts for calculating the target.\r\n\r\nA more detailed documentation about keeping traffic low can be found in [/doc/reduce-traffic.md](/doc/reduce-traffic.md).\r\n\r\n`libzcashconsensus` replaced by `libzcash_script`\r\n-------------------------------------------------\r\n\r\nThe `libzcashconsensus` library inherited from upstream has been unusable since the Overwinter network upgrade in 2018. We made changes to signature digests similar to those made in Bitcoin's SegWit, which required additional per-input data that could not be added to the existing APIs without breaking backwards\r\ncompatibility.\r\n\r\nAdditionally, it has become increasingly inaccurately named; it only covers (Zcash's subset of) the Bitcoin scripting system, and not the myriad of other consensus changes: in particular, Zcash's shielded pools.\r\n\r\nWe have now renamed the library to `libzcash_script`, and reworked it to instead focus on transparent script verification:\r\n\r\n- The script verification APIs are altered to take `consensusBranchId` and `amount` fields.\r\n- New precomputing APIs have been added that enable multiple transparent inputs on a single transaction to be verified more efficiently.\r\n- Equihash has been removed from the compiled library. The canonical Equihash validator is the [`equihash` Rust crate](https://crates.io/crates/equihash) since v3.1.0.\r\n\r\nThe C++ library can be built by compiling `zcashd` with the environment variable `CONFIGURE_FLAGS=--with-libs`. It is also wrapped as the [`zcash_script` Rust crate](https://crates.io/crates/zcash_script) (maintained by the Zcash Foundation for use in `zebrad`).\r\n\r\nOther P2P Changes\r\n-----------------\r\n\r\nThe list of banned peers is now stored on disk rather than in memory. Restarting `zcashd` will no longer clear out the list of banned peers; instead the `clearbanned` RPC method can be used to manually clear the list. The `setban` RPC method can also be used to manually ban or unban a peer.\r\n\r\nBuild system updates\r\n--------------------\r\n\r\n- We now build with Clang 11 and Rust 1.49.\r\n- We have downgraded Boost to 1.74 to mitigate `statx`-related breakage in some container environments.", "created_at": "2021-02-24T23:27:57Z", "project": "Zcash (ZEC)", "currency": "zec", "alias": "zcash", "repo": "zcash/zcash", "type": "utxo", "hosting": "github", "explorer": "https://explorer.zcha.in", "explorer1": "https://zcash.tokenview.com", "doc": "https://zcash.readthedocs.io/en/latest/rtd_pages/zcashd.html", "api": "https://zcash-rpc.github.io", "add_time": "2019-12-01T00:00:00Z"}, {"name": "rippled (XRP Ledger server) Version 1.7.0", "tag_name": "1.7.0", "html_url": "https://github.com/ripple/rippled/releases/tag/1.7.0", "repo_url": "https://github.com/ripple/rippled", "body": "Ripple has released version 1.7.0 of rippled, the reference server implementation of the XRP Ledger protocol. This release significantly improves memory usage, introduces a protocol amendment to allow out-of-order transaction execution with Tickets, and brings several other features and improvements.\r\n\r\n**Upgrading (SPECIAL ACTION REQUIRED)**\r\nIf you use the precompiled binaries of rippled that Ripple publishes for supported platforms, please note that Ripple has renewed the GPG key used to sign these packages. If you are upgrading from a previous install, you must download and trust the renewed key. Automatic upgrades will not work until you have re-trusted the key.\r\n\r\n**Red Hat Enterprise Linux / CentOS**\r\nPerform a manual upgrade. When prompted, confirm that the key's fingerprint matches the following example, then press y to accept the updated key:\r\n\r\n```\r\n$ sudo yum install rippled\r\nLoaded plugins: fastestmirror\r\nLoading mirror speeds from cached hostfile\r\n* base: mirror.web-ster.com\r\n* epel: mirrors.syringanetworks.net\r\n* extras: ftp.osuosl.org\r\n* updates: mirrors.vcea.wsu.edu\r\nripple-nightly/signature                                                                                                                                                                                                                                 |  650 B  00:00:00    \r\nRetrieving key from https://repos.ripple.com/repos/rippled-rpm/nightly/repodata/repomd.xml.key\r\nImporting GPG key 0xCCAFD9A2:\r\nUserid     : \"TechOps Team at Ripple <techops+rippled@ripple.com>\"\r\nFingerprint: c001 0ec2 05b3 5a33 10dc 90de 395f 97ff ccaf d9a2\r\nFrom       : https://repos.ripple.com/repos/rippled-rpm/nightly/repodata/repomd.xml.key\r\nIs this ok [y/N]: y\r\n```\r\n\r\n**Ubuntu / Debian**\r\nDownload and trust the updated public key, then perform a manual upgrade as follows:\r\n\r\n```\r\nwget -q -O - \"https://repos.ripple.com/repos/api/gpg/key/public\" | \\\r\n    sudo apt-key add -\r\nsudo apt -y update\r\nsudo apt -y install rippled\r\n```\r\n\r\n**New and Improved Features**\r\n\r\n* Rework deferred node logic and async fetch behavior: This change significantly improves ledger sync and fetch times while reducing memory consumption. (https://blog.ripplex.io/how-ripples-c-team-cut-rippleds-memory-footprint-down-to-size/)\r\n* New Ticket feature: Tickets are a mechanism to prepare and send certain transactions outside of the normal sequence order. This version reworks and completes the implementation for Tickets after more than 6 years of development. This feature is now open for voting as the newly-introduced TicketBatch amendment, which replaces the previously-proposed Tickets amendment. The specification for this change can be found at: xrp-community/standards-drafts#16\r\n* Add Reporting Mode: The server can be compiled to operate in a new mode that serves API requests for validated ledger data without connecting directly to the peer-to-peer network. (The server needs a gRPC connection to another server that is on the peer-to-peer network.) Reporting Mode servers can share access to ledger data via Apache Cassandra and PostgreSQL to more efficiently serve API requests while peer-to-peer servers specialize in broadcasting and processing transactions. (#3609)\r\n* Optimize relaying of validation and proposal messages: Servers typically receive multiple copies of any given message from directly connected peers; in particular, consensus proposal and validation messages are often relayed with extremely high redundancy. For servers with several peers, this can cause redundant work. This commit introduces experimental code that attempts to optimize the relaying of proposals and validations by allowing servers to instruct their peers to \"squelch\" delivery of selected proposals and validations. This change is considered experimental at this time and is disabled by default because the functioning of the consensus network depends on messages propagating with high reliability through the constantly-changing peer-to-peer network. Server operators who wish to test the optimized code can enable it in their server config file.\r\n* Report server domain to other servers: Server operators now have the option to configure a domain name to be associated with their servers. The value is communicated to other servers and is also reported via the server_info API. The value is meant for third-party applications and tools to group servers together. For example, a tool that visualizes the network's topology can show how many servers are operated by different stakeholders. An operator can claim any domain, so tools should use the xrp-ledger.toml file to confirm that the domain also claims ownership of the servers.\r\n* Improve handling of peers that aren't synced: When evaluating the fitness and usefulness of an outbound peer, the code would incorrectly calculate the amount of time that the peer spent in a non-useful state. This release fixes the calculation and makes the timeout values configurable by server operators. Two new options are introduced in the 'overlay' stanza of the config file.\r\n* Persist API-configured voting settings: Previously, the amendments that a server would vote in support of or against could be configured both via the configuration file and via the \"feature\" API method. Changes made in the configuration file were only loaded at server startup; changes made via the command line take effect immediately but were not persisted across restarts. Starting with this release, changes made via the API are saved to the wallet.db database file so that they persist even if the server is restarted. Amendment voting in the config file is deprecated. The first time the server starts with v1.7.0 or higher, it reads any amendment voting settings in the config file and saves the settings to the database; on later restarts the server prints a warning message and ignores the [amendments] and [veto_amendments] stanzas of the config file. Going forward, use the feature method to view and configure amendment votes. If you want to use the config file to configure amendment votes, add a line to the [rpc_startup] stanza such as the following: [rpc_startup] { \"command\": \"feature\", \"feature\": \"FlowSortStrands\", \"vetoed\": true }\r\n* Support UNLs with future effective dates: Updates the format for the recommended validator list file format, allowing publishers to pre-publish the next recommended UNL while the current one is still valid. The server is still backwards compatible with the previous format, but the new format removes some uncertainty during the transition from one list to the next. Also, starting with this release, the server locks down and reports an error if it has no valid validator list. You can clear the error by loading a validator list from a file or by configuring a different UNL and restarting; the error also goes away on its own if the server is able to obtain a trusted validator list from the network (for example, after an network outage resolves itself).\r\n* Improve manifest relaying: Servers now propagate change messages for validators' ephemeral public keys (\"manifests\") on a best-effort basis, to make manifests more available throughout the peer-to-peer network. Previously, the server would only relay manifests from validators it trusts locally, which made it difficult to detect and track validators that are not broadly trusted.\r\n* Implement ledger forward replay feature: The server can now sync up to the network by \"playing forward\" transactions from a previously saved ledger until it catches up to the network. Compared with the default behavior of fetching the latest state and working backwards, forward replay can save time and bandwidth by reconstructing previous ledgers' state data rather than downloading the pre-calculated results from the network. As an added bonus, forward replay confirms that the rest of the network followed the same transaction processing rules as the local server when processing the intervening ledgers. This feature is considered experimental this time and can be enabled with an option in the config file.\r\n* Make the transaction job queue limit adjustable: The server uses a job queue to manage tasks, with limits on how many jobs of a particular type can be queued. The previously hard-coded limit associated with transactions is now configurable. Server operators can increase the number of transactions their server is able to queue, which may be useful if your server has a large memory capacity or you expect an influx of transactions. (https://github.com/ripple/rippled/issues/3556)\r\n* Add public_key to the Validator List method response: The Validator List method can be used to request a recommended validator list from a rippled instance. The response now includes the public key of the requested list. (https://github.com/ripple/rippled/issues/3392)\r\n* Server operators can now configure maximum inbound and outbound peers separately: The new peers_in_max and peers_out_max config options allow server operators to independently control the maximum number of inbound and outbound peers the server allows. [70c4ecc]\r\n* Improvements to shard downloading: Previously the download_shard command could only load shards over HTTPS. Compressed shards can now also be downloaded over plain HTTP. The server fully checks the data for integrity and consistency, so the encryption is not strictly necessary. When initiating multiple shard downloads, the server now returns an error if there is not enough space to store all the shards currently being downloaded.\r\n* The manifest command is now public: The manifest API method returns public information about a given validator. The required permissions have been changed so it is now part of the public API.\r\n\r\n**Bug Fixes**\r\n\r\n* Implement sticky DNS resolution for validator list retrieval: When attempting to load a validator list from a configured site, attempt to reuse the last IP that was successfully used if that IP is still present in the DNS response. (https://github.com/ripple/rippled/issues/3494).\r\n* Improve handling of RPC ledger_index argument: You can now provide the ledger_index as a numeric string. This allows you to copy and use the numeric string ledger_index value returned by certain RPC commands. Previously you could only send native JSON numbers or shortcut strings such as \"validated\" in the ledger_index field. (https://github.com/ripple/rippled/issues/3533)\r\n* Fix improper promotion of bool on return [6968da1]\r\n* Fix ledger sequence on copynode [ef53197]\r\n* Fix parsing of node public keys in manifest CLI: The previous code attempts to validate the provided node public key using a function that assumes that the encoded public key is for an account. This causes the parsing to fail. This commit fixes #3317 (https://github.com/ripple/rippled/issues/3317) by letting the caller specify the type of the public key being checked.\r\n* Fix idle peer timer: Fixes a bug where a function to remove idle peers was called every second instead of every 4 seconds. #3754 (https://github.com/ripple/rippled/issues/3754)\r\n* Add database counters: Fix bug where DatabaseRotateImp::getBackend and ::sync utilized the writable backend without a lock. ::getBackend was replaced with ::getCounters.\r\n* Improve online_delete configuration and DB tuning [6e9051e]\r\n* Improve handling of burst writes in NuDB database ( https://github.com/ripple/rippled/pull/3662 )\r\n* Fix excessive logging after disabling history shards. Previously if you configured the server with a shard store, then disabled it, the server output excessive warning messages about the shard limit being exceeded.\r\n* Fixed some issues with negotiating link compression. ( https://github.com/ripple/rippled/pull/3705 )\r\n* Fixed a potential thread deadlock with history sharding. ( https://github.com/ripple/rippled/pull/3683 )\r\n* Various fixes to typos and comments, refactoring, and build system improvements", "created_at": "2021-02-23T20:51:24Z", "project": "XRP (XRP)", "currency": "xrp", "alias": "ripple", "repo": "ripple/rippled", "type": "utxo", "hosting": "github", "explorer": "https://xrpscan.com", "doc": "https://xrpl.org/install-rippled-on-ubuntu.html", "api": "https://xrpl.org/rippled-api.html", "add_time": "2019-12-20T00:00:00Z"}, {"name": "v0.40.0 (1b3b97b 2021-02-23)", "tag_name": "v0.40.0", "html_url": "https://github.com/nervosnetwork/ckb/releases/tag/v0.40.0", "repo_url": "https://github.com/nervosnetwork/ckb", "body": "This version is compatible with v0.25.0 and above. However, it is recommended to upgrade the node, since we will only release security patches based on the latest release.\r\n\r\nSee [how to connect to various chains](https://github.com/nervosnetwork/ckb/wiki/Chains) in Wiki.\r\n\r\n### RPC Deprecation\r\n\r\nPay attention that following RPC methods will be removed from v0.40.0:\r\n\r\n* The method `get_cells_by_lock_hash` in the module `Chain`.\r\n* The whole module `Indexer`.\r\n\r\nThe following methods will be disabled by default from v0.40.0 and will be removed from v0.41.0:\r\n\r\n* The method `get_cellbase_output_capacity_details` in the module `Chain`.\r\n* The method `get_peers_state` in the module `Stats`.\r\n* The methods `_compute_transaction_hash`, `_compute_script_hash` and `estimate_fee_rate` in the module `Experiment`.\r\n\r\n### Config Changes\r\n\r\nBecause of deleted RPC methods, following keys must be deleted from the existing config file `ckb.toml`:\r\n\r\n* `Indexer` is no longer a valid RPC module in `[rpc] modules`.\r\n* The whole section `[indexer]` is removed.\r\n\r\n### Downloads\r\n\r\n| OS        | Arch | Runtime Dependencies      | Package               | Sign               |\r\n| --------- | ---- | ------------------------- | --------------------- | ------------------ |\r\n| macOS     | x64  | macOS 10.12 or above | [zip][macos-zip]      | [PGP][macos-pgp]   |\r\n| Linux     | x64  | glibc, libstdc++          | [tarball][linux-zip]  | [PGP][linux-pgp]   |\r\n| CentOS    | x64  | glibc, libstdc++, openssl | [tarball][centos-zip] | [PGP][centos-pgp]  |\r\n| Windows\\* | x64  | VC++ Redistributable      | [zip][windows-zip]    | [PGP][windows-pgp] |\r\n| Docker    |      |                           | [dockerhub][]         |                    |\r\n\r\n> \\* Windows support is experimental.\r\n\r\nThe `.asc` files are signatures. It is wise and more secure to check out for the files [integrity](https://github.com/nervosnetwork/ckb/blob/develop/docs/integrity-check.md).\r\n\r\n[macos-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-apple-darwin.zip\r\n[macos-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-apple-darwin.zip.asc\r\n[linux-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-unknown-linux-gnu.tar.gz\r\n[linux-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-unknown-linux-gnu.tar.gz.asc\r\n[centos-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-unknown-centos-gnu.tar.gz\r\n[centos-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-unknown-centos-gnu.tar.gz.asc\r\n[windows-zip]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-pc-windows-msvc.zip\r\n[windows-pgp]: https://github.com/nervosnetwork/ckb/releases/download/v0.40.0/ckb_v0.40.0_x86_64-pc-windows-msvc.zip.asc\r\n[dockerhub]: https://hub.docker.com/r/nervos/ckb/tags\r\n\r\n<details><summary>Changes since v0.39.2</summary>\r\n\r\n### Features\r\n\r\n* #2501: chore: remove deprecated RPC and add `deprecated` to some RPC.\r\n\r\n    Resolve #2487\r\n\r\n* #2297: Chain freezer (@zhangsoledad)\r\n\r\n    Introduce chain freezer, Inspired by  [[Splitting the data directory]](https://en.bitcoin.it/wiki/Splitting_the_data_directory) and [[geth-v1-9-0]](https://blog.ethereum.org/2019/07/10/geth-v1-9-0/#freezer)\r\n\r\n    Now, separated database into two parts, recent block and ancient history. If your data directory is located on a magnetic disk, you can link db to an SSD drive to improve performance. If your data directory is on an SSD: you can link ancient to an HDD drive to save space.\r\n\r\n    Freezer is disabled by default. It has some performance bottlenecks that we are fixing.\r\n\r\n* #2365: Tx pool callback (@zhangsoledad)\r\n* #2505: Provide `--overwrite-spec` to override the chain spec in storage (@keroro520)\r\n* #2526: Multi thread `number_hash_mapping` migration (@zhangsoledad)\r\n* #2520: Add RPC `get_block_median_time` (@keroro520)\r\n\r\n### Bug Fixes\r\n\r\n* #2455: Relay and sync should be order independent (@yangby-cryptape)\r\n\r\n    Fix #2450.\r\n\r\n* #2484: Don't do sync before sync connected (@yangby-cryptape)\r\n\r\n    This issue was introduced since #2455.\r\n\r\n* #2458: Fix potential failure in integration test TransactionRelayLowFeeRate (@yangby-cryptape)\r\n* #2454: Fix the log output of integration tests and output more logs (@yangby-cryptape)\r\n* #2502: Skip RUSTSEC-2020-0095 temporarily (@yangby-cryptape)\r\n* #2521: Fix wasm build by locking tempfile (@doitian)\r\n* #2523: Network should work without enabling the module in RPC (@yangby-cryptape)\r\n* #2537: Allow dail self (@driftluo)\r\n\r\n### Improvements\r\n\r\n* #2542: Resolve rocksdb cache size issue when using `default.db-options` (@quake)\r\n* #2519: Make median_time clear in RPC doc (@doitian)\r\n\r\n</details>", "created_at": "2021-02-23T00:52:44Z", "project": "Nervos Network (CKB)", "currency": "ckb", "alias": "nervos", "repo": "nervosnetwork/ckb", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.nervos.org", "doc": "https://docs.nervos.org/docs/basics/guides/mainnet", "api": "https://github.com/nervosnetwork/ckb/blob/master/rpc/README.md", "add_time": "2019-12-01T00:00:00Z"}, {"name": "dcrd v1.6.1", "tag_name": "release-v1.6.1", "html_url": "https://github.com/decred/dcrd/releases/tag/release-v1.6.1", "repo_url": "https://github.com/decred/dcrd", "body": "# dcrd v1.6.1\r\n\r\nThis is a patch release of dcrd which includes the following changes:\r\n\r\n- Correct a hard to hit issue where connections might not be reestablished after a network outage under some rare circumstances\r\n- Allow stakeholders to make use of the staking system to force proof-of-work miners to upgrade to the latest version so voting on the new consensus changes can commence\r\n\r\n## Changelog\r\n\r\nThis patch release consists of 3 commits from 1 contributor which total to 3 files changed, 30 additional lines of code, and 9 deleted lines of code.\r\n\r\nAll commits since the last release may be viewed on GitHub [here](https://github.com/decred/dcrd/compare/release-v1.6.0...release-v1.6.1).\r\n\r\n### Protocol and network:\r\n\r\n- server: Notify block mgr later and track ntfn ([decred/dcrd#2588](https://github.com/decred/dcrd/pull/2588))\r\n- server: Force PoW upgrade to v8 ([decred/dcrd#2597](https://github.com/decred/dcrd/pull/2597))\r\n\r\n### Misc:\r\n\r\n- release: Bump for 1.6.1 ([decred/dcrd#2600](https://github.com/decred/dcrd/pull/2600))\r\n\r\n### Code Contributors (alphabetical order):\r\n\r\n- Dave Collins", "created_at": "2021-02-19T20:34:41Z", "project": "Decred (DCR)", "currency": "dcr", "alias": "decred", "repo": "decred/dcrd", "type": "utxo", "hosting": "github", "explorer": "https://mainnet.decred.org", "explorer1": "https://dcrdata.decred.org/", "doc": "https://docs.decred.org/advanced/full-node", "api": "https://github.com/decred/dcrd/blob/master/docs/json_rpc_api.mediawiki", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v1.6.0", "html_url": "https://github.com/klaytn/klaytn/releases/tag/v1.6.0", "repo_url": "https://github.com/klaytn/klaytn", "body": "## New Features\r\n- Introduced KES (Klaytn Endpoint System) (#707, #709)\r\n  - Supported shared database and cache\r\n  - KES Fetcher node processes blocks and KES Service node serves APIs with the shared database/cache without its processing\r\n- Added debug.startCollectingTrieStats API which shows a stat of state trie (#740)\r\n- Added debug.getModifiedStorageNodesByNumber API which returns modified trie nodes from the contract sotrage (#742)\r\n- Added logs to show block processing summary (#747)\r\n- Fixed an err in 4byte tracer and Added unigram/bigram/trigram tracers (#752)\r\n- Supported ABIEncoderV2 to pack dynamic array and slice type (#753)\r\n- Supported ABI to unpack tuple type and bytesN arrays (#807, #792, #786)\r\n- Introduced state.trie-cache-save-period option for periodical saving fast cache to filesystem (#828)\r\n- Added debug.StartContractWarmUp(common.Address) API to warm up contract storage trie node (#831)\r\n- Introduced state prefetcher which executes future blocks and future transactions against current state for pre-loading state trie cache (#832, #860)\r\n\r\n## Improvements\r\n- Split chain data to send Kafka messages by chain data fetcher (#708, #712)\r\n- Changed metrics.Meter to metrics.Timer (#817)\r\n- Updated default docker image ID (#824)\r\n- Increased FD limit to the maximum value of the process (#827)\r\n\r\n## Fixes\r\n- Fixed the path for saving trie node cache (#751)\r\n\r\n## Miscellaneous\r\n- Disabled seek compaction for LevelDB (#715)\r\n- Performed code refactoring (#730, #733, #735)\r\n- Updated golang to 1.15.7 version (#875, #871)\r\n\r\n## Binaries\r\n<li>Linux: <a href=http://packages.klaytn.net/klaytn/v1.6.0/kcn-v1.6.0-0-linux-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kpn-v1.6.0-0-linux-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/ken-v1.6.0-0-linux-amd64.tar.gz>ken</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kscn-v1.6.0-0-linux-amd64.tar.gz>kscn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kspn-v1.6.0-0-linux-amd64.tar.gz>kspn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/ksen-v1.6.0-0-linux-amd64.tar.gz>ksen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kbn-v1.6.0-0-linux-amd64.tar.gz>kbn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kgen-v1.6.0-0-linux-amd64.tar.gz>kgen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/homi-v1.6.0-0-linux-amd64.tar.gz>homi</a> </li><li>Darwin: <a href=http://packages.klaytn.net/klaytn/v1.6.0/kcn-v1.6.0-0-darwin-10.10-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kpn-v1.6.0-0-darwin-10.10-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/ken-v1.6.0-0-darwin-10.10-amd64.tar.gz>ken</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kscn-v1.6.0-0-darwin-10.10-amd64.tar.gz>kscn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kspn-v1.6.0-0-darwin-10.10-amd64.tar.gz>kspn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/ksen-v1.6.0-0-darwin-10.10-amd64.tar.gz>ksen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kbn-v1.6.0-0-darwin-10.10-amd64.tar.gz>kbn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kgen-v1.6.0-0-darwin-10.10-amd64.tar.gz>kgen</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/homi-v1.6.0-0-darwin-10.10-amd64.tar.gz>homi</a> </li><li>Baobab-linux: <a href=http://packages.klaytn.net/klaytn/v1.6.0/kcn-baobab-v1.6.0-0-linux-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kpn-baobab-v1.6.0-0-linux-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/ken-baobab-v1.6.0-0-linux-amd64.tar.gz>ken</a> </li><li>Baobab-darwin: <a href=http://packages.klaytn.net/klaytn/v1.6.0/kcn-baobab-v1.6.0-0-darwin-10.10-amd64.tar.gz>kcn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/kpn-baobab-v1.6.0-0-darwin-10.10-amd64.tar.gz>kpn</a> <a href=http://packages.klaytn.net/klaytn/v1.6.0/ken-baobab-v1.6.0-0-darwin-10.10-amd64.tar.gz>ken</a> ", "created_at": "2021-02-18T13:28:42Z", "project": "Klaytn (KLAY)", "currency": "klay", "alias": "klaytn", "repo": "klaytn/klaytn", "type": "fork eth", "hosting": "github", "explorer": "https://scope.klaytn.com", "doc": "https://docs.klaytn.com/node/endpoint-node/installation-guide/installation-guide", "api": "https://docs.klaytn.com/node/endpoint-node/json-rpc-apis", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v15.3.0", "tag_name": "v15.3.0", "html_url": "https://github.com/stellar/stellar-core/releases/tag/v15.3.0", "repo_url": "https://github.com/stellar/stellar-core", "body": "## Stability improvements\r\n\r\n - [Change transaction queue limit and broadcast policy](https://github.com/stellar/stellar-core/pull/2880) to improve performance during arbitrage spikes\r\n - [Fix crash when attempting to log to a file without enough rights](https://github.com/stellar/stellar-core/pull/2922)\r\n - [Fix overlay broadcast metric](https://github.com/stellar/stellar-core/pull/2911) to only account for messages that were actually sent\r\n - [Prefetching performance improvements](https://github.com/stellar/stellar-core/pull/2916)\r\n - [Subprocess shutdown fixes](https://github.com/stellar/stellar-core/pull/2801)\r\n - [Improve HAS validation](https://github.com/stellar/stellar-core/pull/2843)\r\n - [Fix legacy logging](https://github.com/stellar/stellar-core/pull/2906)\r\n - [Surveying](https://github.com/stellar/stellar-core/pull/2890), add a command to transform the master graph into json for downstream systems\r\n - [bump asio to 1.18.1](https://github.com/stellar/stellar-core/pull/2879)\r\n - Fuzzer setup improvements\r\n\r\n## New features\r\n\r\nNone\r\n\r\n## Breaking changes\r\n\r\n - [Switch to llvm-8 and gcc-7 (focal updates) in our CI](https://github.com/stellar/stellar-core/pull/2910) ; existing pull requests may have to be reformatted with clang-format-8\r\n", "created_at": "2021-02-17T18:05:19Z", "project": "Stellar (XLM)", "currency": "xlm", "alias": "stellar", "repo": "stellar/stellar-core", "type": "stellar", "hosting": "github", "explorer": "https://steexp.com", "doc": "https://github.com/stellar/stellar-core/blob/master/INSTALL.md", "api": "https://developers.stellar.org/api/introduction", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Mindfish (v1.11.22)", "tag_name": "v1.11.22", "html_url": "https://github.com/etclabscore/core-geth/releases/tag/v1.11.22", "repo_url": "https://github.com/etclabscore/core-geth", "body": "- __Merge__ [ethereum/go-ethereum@v1.9.25](https://github.com/ethereum/go-ethereum/releases/tag/v1.9.25) (#272)\r\n- __Change__ default `extraData` prefix for mined blocks to `CoreGeth` (from `geth`) (#310)\r\n\r\n---\r\n\r\n- Docker images published under [`etclabscore/core-geth`](https://hub.docker.com/r/etclabscore/core-geth/builds).", "created_at": "2021-02-16T10:48:01Z", "project": "Ethereum Classic (ETC)", "currency": "etc", "alias": "ethereum-classic", "repo": "etclabscore/core-geth", "type": "ethereum", "hosting": "github", "explorer1": "https://expedition.dev/?network=mainnet", "explorer": "https://etc.tokenview.com/cn", "explorer2": "https://etcblockexplorer.com", "doc": "https://etclabscore.github.io/core-geth/getting-started/installation/", "api": "https://etclabscore.github.io/core-geth/apis/jsonrpc-apis/", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Bitcoin SV version 1.0.7 Release Notes", "tag_name": "v1.0.7", "html_url": "https://github.com/bitcoin-sv/bitcoin-sv/releases/tag/v1.0.7", "repo_url": "https://github.com/bitcoin-sv/bitcoin-sv", "body": "## Headline changes since 1.0.6\r\n* Removed performance penalty for long chains. Mempool performance does not depend on the transaction's chain length anymore.\r\n* Legacy block assembler removed; support for low priority / free transactions removed.\r\n* Refactoring of CCoinView.\r\n* P2P improvements.\r\n\r\n## Full list of changes between 1.0.6 and 1.0.7.beta\r\n* Increased default maximum ancestors count for paying transactions to 1000.\r\n* Removing transactions from the mempool when a new block is mined is much faster. As a consequence, block propagation is faster.\r\n* More efficient mempool transaction eviction algorithm.\r\n* Removed the Legacy block assembler; Journaling block assembler is now the only block assembler available.\r\n* Efficient detection of the CPFP (child pays for the parent) groups.\r\n* Limiting the total size of the low-paying transactions in the mempool as the percent of the mempool size.\r\n* Limiting the ancestors count for the low-paying transactions to 25, and as consequence, limiting the maximal size of the CPFP groups.\r\n* Stopped limitting transaction chains by ancestors size in the mempool.\r\n* Stopped limitting transaction chains by descedant statistics, both size and count.\r\n* Removed concept of the \"high priority / free transactions\". We are not accepting nor relaying them any more.\r\n* Added command line switches:\r\n    - mempoolmaxpercentcpfp, Percentage of total mempool size to allow for low paying transactions. Default: 10%\r\n    - limitcpfpgroupmemberscount, Maximal number of non-paying ancestors a single transaction can have. Thus, the maximal size of a CPFP group. Default 25.\r\n    - disablebip30checks Disables BIP30 checks when connecting a block. Not active on the mainnet.\r\n* Removed command line switches:\r\n    - limitancestorsize, Not tracking ancestors size in the new implementation.\r\n    - limitdescendantcount, limitdescendantsize Not keeping descendant statistics in the new implementation.\r\n    - limitfreerelay relaypriority printpriority blockprioritypercentage Removed concept of the \"free / high priority\" transactions\r\n* The prioritisetransaction RPC method ignores the first positional argument (modified priority), which must be 0, and uses only the second argument (modified fee) into account.\r\n* Other changes to the RPC methods, added and removed JSON entries:\r\n\r\n| RPC Method | Entries Added | Entries Removed |\r\n|:----------------- |:------------------- |:----------------------- |\r\n| getrawmempool, getmempoolancestors, getmempooldescendants, getmempoolentry |  | startingpriority, currentpriority, descendantcount, descendantsize, descendantfees, ancestorcount, ancestorsize, ancestorfees |\r\n| getmempoolinfo | usagedisk, usagecpfp, maxmempooldisksize, maxmempoolsizecpfp | |\r\n| getmininginfo | | blockprioritypercentage |\r\n| getblocktemplate | | sigops, sigoplimit |\r\n\r\n* Implement HTTP streaming for getblocktemplate\r\n* Do not load large blocks into memory\r\n* Performance - CCoinView refactoring\r\n* Endomorphism is now ON by default in libsecp256k1\r\n* New configurable connection timeout for validating blocks.\r\n* Serialize in getblock RPC without cs_main\r\n* Maximum size of INV messages configurable\r\n* Change -rejectmempoolrequest default to true\r\n* Separate P2P Control and Data Channels\r\n* Implement HTTP streaming for getrawmempool\r\n* Expose consensus and policy limits through RPC\r\n* Improve interface to Stream::GetNewMsgs\r\n* Fix: If setAskFor fills up then transaction requesting stops.\r\n* Simplify JSonWriter\r\n* Allow the available stream policies to be set by the config\r\n* Message processing stall remedy\r\n* Send GETDATA for blocks over the higher priority stream.\r\n* Fix: Slow reading of coins from database when using leveldb iterators\r\n* sendrawtransaction RPC - fix PrioritiseTransaction/ClearPrioritisation usage to be exception safe.\r\n* sendrawtransaction RPC - functional test \u2013 send already known transaction and create block.\r\n* sendrawtransaction RPC - check if transaction is already known before validation starts.\r\n* Remove bitcoin-seeder.\r\n* Fix: Coredump at shutdown with scriptCheckQueuePool\r\n* Fix: Consolidation tx option 'acceptnonstdconsolidationinput' uses wrong type\r\n* Fix: Consolidation variable name and update function to respect interface\r\n* Fix: maxConsolidationInputScriptSize parameter should use GetArgAsBytes() function in init.cpp\r\n* Fix: Possible XSS vulnerability\r\n* Fix: Update Windows build instructions\r\n* Fix: sendtransactions PRC should use JSON response streaming\r\n* Fix: Implicit loop conversions\r\n* Unused code removed\r\n* False positive check for null dereferencing in merkle proof\r\n* Explicitly define the missing special members for ZMQPublisher\r\n* Decimal is not defined. Change its name or define it before using it\r\n* Fix: getutxos RPC should serialize integer when serializing RPC call id\r\n* Removed call to virtual function Flush() in dtor of text writer\r\n* Refactor default parameters of virtual function in TextWriter\r\n* Backport performance improvement to rolling bloom filter\r\n* Fix: bench_bitcoin fails on build with --disable-wallet\r\n* Use pointer or reference to avoid slicing from \"CAddress\" to \"CService\r\n* Fix: Uninitialized member in CWalletDBWrapper\r\n* Revert unordered->ordered map/set for COutPoint -> coins.\r\n* ZMQ: add method for distinct zmq ports when running functional tests in parallel\r\n* Fix: snprintf overflows write buffer\r\n* Remove 'bitcoin' prefix from worker thread names\r\n* Prevent unnecessary copies in range loops\r\n* Fix: Unhandled nullptr in GetDiskBlockStreamReader if file does not exist\r\n* Add list of supported stream policies to the output of getnetworkinfo\r\n* Provide an option to increase the number of open files for leveldb. Increasing number of open files improves performance of transaction validation.\r\n* Fix: Starting bitcoind with negative value for consolidation transaction parameters is setting very high values internally\r\n* Remove dead code that was accidentally introduced by parallel block validation task\r\n* Fix: cURL example of gettxouts RPC help\r\n* Add stream type enumerations to python test framework\r\n* Test framework - make Key.py locate correct openssl implementation on Mac\r\n* Test framework: add tx hash to log\r\n* Make using network associations in the functional tests easy.     \r\n* Replace time.sleep with wait_until in reindex.py\r\n* Protect all uses of txinvs with mininode_lock in bsv-consolidation-feefilter.py\r\n* Add an extra config params to the bsv-ptv-rpc-sendrawtransactions.py functional test.\r\n* Fix: Functional test bsv-genesis-activation-transactions-beforeafter fails occasiobally.\r\n* Fix: bsv-pvq-timeouts.py functional test fails occasionally\r\n* Fix: bsv-genesis-large-blockfile-reindex.py functional test fails occasionally\r\n* Fix: bsv-genesis-journal-reorg_2.py functional test fails occasionally\r\n* Fix: Functional test bsv-genesis-general fails with timeout in height_based_test_framework\r\n* Fix: Functional test bsv-sigopslimit-consensus-test.py fails occasionally.\r\n* Fix: bsv-128Mb-blocks functional test fails occasionally\r\n* Fix: example-test.py functional test fails occasionally\r\n* Fix: bsv-coinbase_P2SH.py functional test fails occasionally\r\n* Fix: bsv-sigopslimit-policy-test.py functional test fails occasionally\r\n* Fix: p2p_inv_msg_time_order2.py functional test fails occasionally\r\n* Fix: Functional test bsv-pvq-timeouts sometimes fails with timeout\r\n* Fix: Functional test bsv-genesis-spendable-op-return fails occasionally.\r\n* Fix: Functional test bsv-genesis-general (Increased max policy tx size) fails.\r\n* Fix: Functional test mining journal fails occasionally.\r\n* Fix: Functional test bsv-block-stalling-test.py fails occasionally.\r\n* Fix: Functional test p2p-fullblocktest fails occasionally.\r\n* Fix: Functional test abc-p2p-compactblock fails occasionally.\r\n* Fix: txn_clone test fails if transaction is sent after nodes reconnect\r\n* Fix: Functional test bsv-mempool_ancestorsizelimit can fail on a busy environment\r\n* Fix: merkle_proof.py generate takes to long for 1500 blocks\r\n* Fix: Functional test bsv-block-size-activation-generated-default fails occasionally.\r\n* Fix: Functional test bsv-consolidation-p2pkh.py fails occasionally.\r\n* Fix: Functional test bsv-journal-mempool-reorg-ordering.py fails occasionally.\r\n* Fix: test bsv-zmq-txremovedfrommempool.py\r\n* Race condition while running zmq_test.py\r\n* Fix: Address sanitizer issue with unit tests.\r\n* Fix: Failing rpc_tests/rpc_ban\r\n* Fix: Unit tests fail to build\r\n* bsv-protoconf.py starts to fail with large value of maxprotocolrecvpayloadlength\r\n* Explicitly define the missing copy constructor\r\n\r\n## List of changes since 1.0.7.beta\r\n* Ensure correct `id` type in RPC\r\n* New RPC dumpparameters to provide configuration settings.\r\n* Help text - coinbaseValue parameter added to help text for getminingcandidate RPC.\r\n* Packaged Diagnostic Service - allows remote gathering of diagnotic information.\r\n* The default value for maxcoinsprovidercachesize = 1GB and must be at least 1MB.\r\n* The mempoolminfee (rolling fee) is prevented from becoming greater than blockminfee while there are secondary mempool transactions.\r\n* Fix: Heap used after free during shutdown.\r\n* Fix: possible undefined behaviour processing block requested via getdata.\r\n* Fix: Undefined behaviour in RIPEMD160, SHA1 and SHA256 code.\r\n* Fix: Possible referenced null pointer triggered by help RPC command.", "created_at": "2021-02-10T09:28:57Z", "project": "Bitcoin SV (BSV)", "currency": "bsv", "alias": "bitcoin-sv", "repo": "bitcoin-sv/bitcoin-sv", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/bsv", "doc": "https://github.com/4ops/docker-bitcoin-sv", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.0.6", "tag_name": "v1.0.6", "html_url": "https://github.com/binance-chain/bsc/releases/tag/v1.0.6", "repo_url": "https://github.com/binance-chain/bsc", "body": "## v1.0.6\r\n\r\n* [\\#68](https://github.com/binance-chain/bsc/pull/68) apply mirror sync upgrade on mainnet", "created_at": "2021-02-05T01:51:32Z", "project": "Binance Smart Chain (BSC)", "currency": "bsc", "alias": "bsc", "repo": "binance-chain/bsc", "type": "fork eth", "hosting": "github", "explorer": "https://bscscan.com", "doc": "https://docs.binance.org/smart-chain/developer/fullnode.html", "api": "https://documenter.getpostman.com/view/4117254/ethereum-json-rpc/RVu7CT5J?version=latest", "add_time": "2020-09-17T09:00:00Z"}, {"name": "RSK Papyrus Release v2.2.0", "tag_name": "PAPYRUS-2.2.0", "html_url": "https://github.com/rsksmart/rskj/releases/tag/PAPYRUS-2.2.0", "repo_url": "https://github.com/rsksmart/rskj", "body": "This release contains relevant improvements from community feedback. Thanks to all **RSK buidlers** for your contributions!\r\n\r\nThis is a summary of the changes included in this version:\r\n\r\n- Add *Content-Type* field in JSON RPC responses (#1390)\r\n- Consider minimum gas price in *eth_gasPrice* method (#1389)\r\n- On-the-fly block blooms cache for faster events retrieval (#1384)\r\n- Fix *v* value in JSON RPC transaction result (#1382)\r\n\r\nYou can find a complete list of the changes introduced in [Papyrus 2.2.0 milestone](https://github.com/rsksmart/rskj/milestone/23).\r\n\r\nSHA256 (see [Reproducible Build](https://developers.rsk.co/rsk/node/security-chain/) guide for further details):\r\nf7cb1e6c5568332d047c602a5b2c464c41688336b824d92ef3a40b89a8f55b60  rskj-core-2.2.0-PAPYRUS-all.jar", "created_at": "2021-01-28T18:13:41Z", "project": "DeFi (RIF)", "currency": "rif", "alias": "rskj", "repo": "rsksmart/rskj", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.rsk.co", "doc": "https://developers.rsk.co/rsk/node/install", "api": "https://developers.rsk.co/develop/json-rpc-api", "add_time": "2020-05-19T03:00:00Z"}, {"name": "Cardano Node 1.25.1", "tag_name": "1.25.1", "html_url": "https://github.com/input-output-hk/cardano-node/releases/tag/1.25.1", "repo_url": "https://github.com/input-output-hk/cardano-node", "body": "This release is expected to be the final release for the upcoming Mary hard fork, and everyone ***must*** upgrade to this (or a later) version to cross the Mary hard fork.\r\n\r\nThe Mary hard fork introduces native token functionality to Cardano. This is directly useful and is also one of the significant building blocks for the later Goguen smart contracts.\r\n\r\nA launchpad testnet for the native token functionality has been running since December, using the cardano-node 1.24.2 release. This 1.25.1 release contains relatively minor changes for the Mary era compared to the 1.24.2 release. It is nevertheless not compatible with the 1.24.2 version and the existing testnet. The launchpad testnet ***will not*** be restarted and will remain on 1.24.2. Public testnet and staging have been upgraded to 1.25.1. If you have already tested integration with the existing launchpad testnet then no new integration work is expected for this release other than upgrading the node version and moving to the staging or public testnet.\r\n\r\nExchanges and other users that integrate closely with Cardano **must take action** to test their integration before the transition takes place on mainnet. Exchanges can use launchpad or staging, SPOs can use staging, and everyone should use public testnet once it forks. Staging will go through the Mary hard fork on 28th January, and public testnet will go through the Mary hard fork during week commencing 1st February. The native token functionality does have an impact for all custom wallet implementations: it is not a feature that can be ignored and remain compatible. All addresses are capable of receiving native tokens.\r\n\r\nStake Pool Operators (SPOs) and Exchanges should take note that the metric namespace has undergone consolidation, so all metrics now reside in `cardano.node.metrics`:\r\n- cardano.node.Forge.metrics.* -> cardano.node.metrics.Forge.*\r\n- cardano.node.ChainDB.metrics.* -> cardano.node.metrics.ChainDB.*\r\n- cardano.node.BlockFetchDecision.connectedPeers -> cardano.node.metrics.connectedPeers\r\n\r\nThe node configs require no changes, but allow dropping entries that became redundant: wherever `cardano.node.Forge.metrics.*`, `cardano.node.ChainDB.metrics.*` or `cardano.node.BlockFetchDecision.connectedPeers` were mentioned, those entries can be removed.  Only `cardano.node.metric` needs to remain. Please see #2281 for further details.\r\n\r\nThis release uses a new cabal snapshot so could be rather resource intensive when building for the first time.\r\n\r\n## Node changes\r\n- All metrics now use a common name prefix `cardano.node.metrics`. This requires a one-off change to the node configuration to route all metrics to the metrics backend and not have them in the log files. This should reduce the number of such changes in future. (#2281)\r\n- More detailed tracer output for protocol tracers (#2178)\r\n\r\n## Consensus changes\r\n- Improve the handling of the encoding of local IPC queries by older clients that do not understand later hard forks. In future this should mean that clients that do not understand a hard fork only fail at the time of the hard fork itself, and not earlier when the update proposal is confirmed ([#2818](https://github.com/input-output-hk/ouroboros-network/pull/2818))\r\n- New query for rewards provenance. This is intended to help wallets explain more details about rewards, and to help SPOs and users better understand how pools' performance and ranking are calculated. This is not yet supported in the CLI in this release. ([#2830](https://github.com/input-output-hk/ouroboros-network/pull/2830))\r\n- Support for using multiple leader credentials for the purpose of running large scale benchmarks. It supported in testnets only, not mainnet ([#2832](https://github.com/input-output-hk/ouroboros-network/pull/2832))\r\n- Support in testnets for skipping initial eras. This makes it easier and quicker to automate the setup of Cardano-mode testnets that start in later eras, such as Allegra or Mary. This enables simplifications in the setup for integration tests or benchmarks ([#2811](https://github.com/input-output-hk/ouroboros-network/pull/2811)) \r\n- A first draft of a technical report on the design and the internals of the Cardano consensus and storage layer ([#2663](https://github.com/input-output-hk/ouroboros-network/pull/2663), [#2838](https://github.com/input-output-hk/ouroboros-network/pull/2838), [#2841](https://github.com/input-output-hk/ouroboros-network/pull/2841), [#2842](https://github.com/input-output-hk/ouroboros-network/pull/2842), [#2853](https://github.com/input-output-hk/ouroboros-network/pull/2853))\r\n\r\n## Ledger changes\r\n- Enforce the size of multi-asset names, to match the specification ([#2074](https://github.com/input-output-hk/cardano-ledger-specs/pull/2074))\r\n- Minor change to the ledger CDDL binary specification for the Mary era: restrict the range of multi-asset values to -2^63..2^63-1 where previously the allowed range was -2^64..2^64-1 ([#2092](https://github.com/input-output-hk/cardano-ledger-specs/pull/2092))\r\n- Rename fields in the ledger's CDDL binary specification for clarity and consistency, but no actual changes to the binary format ([#2045](https://github.com/input-output-hk/cardano-ledger-specs/pull/2045))\r\n- Change the minimum ada UTxO value formula for multi-asset values to better reflect the resource costs and to pass on savings (in the form of a lower minimum ada UTxO value) for applications that use smaller asset bundles by sharing policy ids or using shorter asset names ([#2107](https://github.com/input-output-hk/cardano-ledger-specs/pull/2107))\r\n- Improvements to the size of the internal storage format of multi-asset values, enabling a lower minimum ada UTxO value for multi-asset output values ([#2083](https://github.com/input-output-hk/cardano-ledger-specs/pull/2083))\r\n- Restrict the maximum size of multi-asset output values ([#2099](https://github.com/input-output-hk/cardano-ledger-specs/pull/2099))\r\n- Terminology change: the metadata section is renamed to \"auxiliary data\" to distinguish it from the existing transaction metadata ([#2052](https://github.com/input-output-hk/cardano-ledger-specs/pull/2052))\r\n- Extra documentation on native tokens ([#2046](https://github.com/input-output-hk/cardano-ledger-specs/pull/2046))\r\n- Progress on the new Alonzo era ([#2022](https://github.com/input-output-hk/cardano-ledger-specs/pull/2022), [#2055](https://github.com/input-output-hk/cardano-ledger-specs/pull/2055), [#2061](https://github.com/input-output-hk/cardano-ledger-specs/pull/2061), [#2062](https://github.com/input-output-hk/cardano-ledger-specs/pull/2062), [#2067](https://github.com/input-output-hk/cardano-ledger-specs/pull/2067), [#2077](https://github.com/input-output-hk/cardano-ledger-specs/pull/2077), [#2087](https://github.com/input-output-hk/cardano-ledger-specs/pull/2087), [#2088](https://github.com/input-output-hk/cardano-ledger-specs/pull/2088), [#2095](https://github.com/input-output-hk/cardano-ledger-specs/pull/2095))\r\n\r\n## Network changes\r\n- Internal infrastructure to support seeding the P2P graph construction from the SPO relays registered on the chain, weighted by stake ([#2535](https://github.com/input-output-hk/ouroboros-network/pull/2535), [#2536](https://github.com/input-output-hk/ouroboros-network/pull/2536))\r\n- Introduce v6 of the node-to-node protocol where we reverse the initial agency of the tx-submission protocol to match the others. This is preparation for the P2P governor which requires the initial agency for mini-protocols to be uniform ([#2807](https://github.com/input-output-hk/ouroboros-network/pull/2807))\r\n- Introduce v8 of the node-to-client protocol with an extension to the local query protocol that allows acquiring the point at the node's current chain tip, without having to provide that point explicitly. Using this simplifies things for node clients for the common use case where the current tip is needed, and eliminates a rare race condition ([#2875](https://github.com/input-output-hk/ouroboros-network/pull/2875))\r\n- Fix a resource leak for chain-sync clients ([#2235](https://github.com/input-output-hk/ouroboros-network/pull/2235), [#2870](https://github.com/input-output-hk/ouroboros-network/pull/2870), [#2888](https://github.com/input-output-hk/ouroboros-network/pull/2888))\r\n- Tracing improvements for the mux component ([#2794](https://github.com/input-output-hk/ouroboros-network/pull/2794))\r\n\r\n## Cardano-cli changes\r\n- Allow creating transactions with no outputs (#2223, #2226)\r\n- Improved error messages for syntax errors in out-of-range lovelace quantities in transaction outputs (#2063, #2079)\r\n- Improved reference documentation for simple scripts and their use (#2165)\r\n- Remove support for changing the delegation from Genesis keys to operational keys in the Byron era. This feature was never used on the mainnet during the Byron era. (#2219)\r\n- Clearer usage information in the CLI --help output (#2203)\r\n\r\n## Cardano-api changes\r\n- New IPC modules for easier interaction with the node, including support for all existing local state queries (#2230, #2238, #2263, #2277, #2286)\r\n- API support for Byron era update proposals and votes (#2209, #2271)\r\n- Make Cardano.Api the primary public module for the API.\r\n- API support for serialising multi-asset PolicyId and AssetName (#2270)\r\n- API for pretty-printing JSON output (#2103)\r\n- More precise error cases for tx outputs that are out of range (#2217)\r\n- Host up-to-date generated API documentation via github https://input-output-hk.github.io/cardano-node/ (#2273, #2276, #2278)\r\n\r\n## Documentation\r\n- [Cardano Node documentation](https://docs.cardano.org/projects/cardano-node/)\r\n- [Cardano CLI](https://github.com/input-output-hk/cardano-node/blob/1.25.1/cardano-cli/README.md)\r\n- [Internal API docs for ledger, consensus and network](https://input-output-hk.github.io/ouroboros-network/)\r\n- [Configuration files](https://docs.cardano.org/projects/cardano-node/en/latest/stake-pool-operations/getConfigFiles_AND_Connect.html)\r\n\r\n## Platforms\r\n- Linux 64-bit (Ubuntu 18.04 LTS, 20.04 LTS; Mint 19.3, 20; Debian 10.3)\r\n- Windows 64-bit (8.1, 10)\r\n- MacOS 10.13, 10.14, 10.15\r\n- [Docker image](https://hub.docker.com/r/inputoutput/cardano-node)\r\n\r\n## Supported roles\r\nPlatform | Block Production | Relay | Client (Desktop)\r\n-- | -- | -- | --\r\nLinux | \u2714\ufe0f | \u2714\ufe0f | \u2714\ufe0f \r\nWindows | :x: | :x: | \u2714\ufe0f \r\nMacOS | :x: | :x: | \u2714\ufe0f \r\n\r\n## Minimum System Requirements\r\n- An Intel or AMD x86 processor with two or more cores, at 1.6GHz or faster (2GHz or faster for a stake pool or relay)\r\n- 4GB of RAM (8GB for a relay or stake pool)\r\n- 10GB of free storage (20GB for a stake pool)\r\n\r\n## Sign off\r\n<!-- Signatures of people responsible for the release -->\r\nRole | Approval\r\n-- | --\r\nTechnical Lead | \u2714\ufe0f  \r\nQA Engineer | \u2714\ufe0f \r\nOps | \u2714\ufe0f \r\nRelease Manager | \u2714\ufe0f ", "created_at": "2021-01-26T15:50:09Z", "project": "Cardano (ADA)", "currency": "ada", "alias": "cardano", "repo": "input-output-hk/cardano-node", "type": "utxo", "hosting": "github", "explorer": "https://cardanoexplorer.com", "doc": "https://github.com/input-output-hk/cardano-sl/blob/develop/docs/how-to/build-cardano-sl-and-daedalus-from-source-code.md", "api": "https://docs.cardano.org/technical/wallet/api/v1", "add_time": "2019-12-20T00:00:00Z"}, {"name": "Release v0.8.2", "tag_name": "v0.8.2", "html_url": "https://github.com/binance-chain/node-binary/releases/tag/v0.8.2", "repo_url": "https://github.com/binance-chain/node-binary", "body": "This is a new release for Binance Chain mainnet\r\n\r\n*Jan 26th 2021*\r\n\r\n**Bugfix**\r\n\r\n* Fix issue with handling errors of `mirror` and `sync`\r\n\r\n", "created_at": "2021-01-26T10:20:13Z", "project": "Binance Coin (BNB)", "currency": "bnb", "alias": "binance", "repo": "binance-chain/node-binary", "type": "cosmos", "hosting": "github", "explorer": "https://explorer.binance.org", "doc": "https://docs.binance.org/fullnode.html", "api": "https://docs.binance.org/rpc-swagger/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "0.8.1", "tag_name": "0.8.1", "html_url": "https://github.com/near/nearup/releases/tag/0.8.1", "repo_url": "https://github.com/near/nearup", "body": "", "created_at": "2021-01-19T15:18:15Z", "project": "NEAR (NEAR)", "currency": "near", "alias": "near", "repo": "near/nearup", "type": "near", "hosting": "github", "explorer": "https://explorer.near.org", "doc": "https://docs.near.org/docs/roles/validator/hardware", "api": "https://docs.near.org/docs/api/rpc", "add_time": "2020-10-10T09:00:00Z"}, {"name": "Bitcoin Core 0.21.0", "tag_name": "v0.21.0", "html_url": "https://github.com/bitcoin/bitcoin/releases/tag/v0.21.0", "repo_url": "https://github.com/bitcoin/bitcoin", "body": "Bitcoin Core version 0.21.0 is now available from:\r\n\r\nhttps://bitcoincore.org/bin/bitcoin-core-0.21.0/\r\n\r\nFor the release notes please see the git repository:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.21.0.md\r\n\r\nPreferably use the above download link, not the links provided by GitHub to download the source tarball, as the release tarballs are generated deterministically whereas GitHub's are not.", "created_at": "2021-01-13T21:57:24Z", "project": "Bitcoin (BTC)", "currency": "btc", "alias": "bitcoin", "repo": "bitcoin/bitcoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.viawallet.com/btc", "explorer1": "https://btc.com", "explorer2": "https://blockchair.com/bitcoin", "explorer3": "https://blockchain.coinmarketcap.com/zh/chain/bitcoin", "explorer4": "https://sochain.com", "doc": "https://github.com/4ops/docker-bitcoin-core", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release 2.1.1", "tag_name": "Release2.1.1", "html_url": "https://github.com/HcashOrg/hcd/releases/tag/Release2.1.1", "repo_url": "https://github.com/HcashOrg/hcd", "body": "modify testnet2 magic", "created_at": "2021-01-12T09:45:03Z", "project": "HyperCash (HC)", "currency": "hc", "alias": "hypercash", "repo": "HcashOrg/hcd", "type": "hc", "hosting": "github", "explorer": "https://hc-explorer.h.cash", "doc": "https://wiki.h.cash/getting-started/user-guides/hcd-setup", "api": "https://wiki.h.cash/wallet/hcwalletAPI", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.4.0", "tag_name": "v1.4.0", "html_url": "https://github.com/vechain/thor/releases/tag/v1.4.0", "repo_url": "https://github.com/vechain/thor", "body": "This is a maintenance release that contains performance improvement and bug fixes.\r\n\r\n* Add API `subscriptions/beat2` to support variable-length bloom filter(#430)\r\n* Update bn256, fix building failure on architecture `ARM64` (#426)\r\n* Update continuous integration system configurations (#427, #431)", "created_at": "2021-01-08T07:05:00Z", "project": "VeChain (VET)", "currency": "vet", "alias": "vechain", "repo": "vechain/thor", "type": "vechain", "hosting": "github", "explorer": "https://insight.vecha.in", "doc": "https://github.com/vechain/thor#docker", "api": "https://docs.vechain.org/thor/get-started/api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v0.11.0", "html_url": "https://github.com/crustio/crust/commit/f629f2ddf66a3933a990618a000a93a6fcf4cbee", "repo_url": "https://github.com/crustio/crust", "body": "Happy New Year \ud83c\udf89 (#391)", "created_at": "2021-01-08T02:28:04Z", "project": "CRUST (CRU)", "currency": "cru", "alias": "cru", "repo": "crustio/crust", "type": "ipfs", "hosting": "github", "explorer": "http://explorer.crust.network", "doc": "https://mp.weixin.qq.com/s/nIfwHfkiauQQ7t2mJv0c3Q", "api": "https://github.com/crustio/crust-api/blob/master/docs/API.md", "add_time": "2020-09-17T09:00:00Z"}, {"name": "Oxygen Orion, Point Release 1.9", "tag_name": "v0.17.1.9", "html_url": "https://github.com/monero-project/monero/releases/tag/v0.17.1.9", "repo_url": "https://github.com/monero-project/monero", "body": "# Overview\r\n\r\nThis is the v0.17.1.9 minor point release of the Monero software.\r\nThis is a recommended release that contains mitigations against the ongoing memory exhaustion attack.\r\n\r\nSome highlights of this minor release are:\r\n\r\n- Add different limits for epee binary format for P2P and RPC\r\n- Add more sanity checks on data size (portable_storage)\r\n- Fix deadlock banning while updating peer lists\r\n- Add aggressive restrictions to pre-handshake p2p buffer limit\r\n- Add a max levin packet size by command type\r\n- Restrict duplicate keys and unnamend sections in epee binary format\r\n- More sanity checks in new chain block hashes\r\n- Minor bug fixes\r\n\r\n# Contributors for this Release\r\n\r\nThis release was the direct result of 7 people who worked, largely unpaid and altruistically, to put out 30 commits containing 362 new lines of code. We'd like to thank them very much for their time and effort. In no particular order they are:\r\n\r\n- luigi1111\r\n- Snipa\r\n- moneromooo\r\n- vtnerd\r\n- selsta\r\n- xiphon\r\n- binaryFate\r\n\r\n# Official Download Links\r\n\r\n[Windows, 64-bit](https://downloads.getmonero.org/cli/monero-win-x64-v0.17.1.9.zip)\r\n[Windows, 32-bit](https://downloads.getmonero.org/cli/monero-win-x86-v0.17.1.9.zip)\r\n[macOS, 64-bit](https://downloads.getmonero.org/cli/monero-mac-x64-v0.17.1.9.tar.bz2)\r\n[Linux, 64-bit](https://downloads.getmonero.org/cli/monero-linux-x64-v0.17.1.9.tar.bz2)\r\n[Linux, 32-bit](https://downloads.getmonero.org/cli/monero-linux-x86-v0.17.1.9.tar.bz2)\r\n[Linux, armv7](https://downloads.getmonero.org/cli/monero-linux-armv7-v0.17.1.9.tar.bz2)\r\n[Linux, armv8](https://downloads.getmonero.org/cli/monero-linux-armv8-v0.17.1.9.tar.bz2)\r\n[Android, armv7](https://downloads.getmonero.org/cli/monero-android-armv7-v0.17.1.9.tar.bz2)\r\n[Android, armv8](https://downloads.getmonero.org/cli/monero-android-armv8-v0.17.1.9.tar.bz2)\r\n[FreeBSD, 64-bit](https://downloads.getmonero.org/cli/monero-freebsd-x64-v0.17.1.9.tar.bz2)\r\n\r\n# Download Hashes\r\n\r\nIf you would like to verify that you have downloaded the correct file, please use the following SHA256 hashes:\r\n\r\n```\r\nmonero-win-x64-v0.17.1.9.zip, a3e6e2f55deb487f6b4a33cf430d82d62e986d37d7d589dcb33a4ff0a13a062b\r\nmonero-win-x86-v0.17.1.9.zip, bb3c633a3d8ac160bc9c75ef514a9cbc77f1f45bdbd220d1963d78d66435c23a\r\nmonero-mac-x64-v0.17.1.9.tar.bz2, d4850ae45eee67868140183cd8c00f9e1f9e1cc5e415b00bc78c14c7bab85834\r\nmonero-linux-x64-v0.17.1.9.tar.bz2, 0fb6f53b7b9b3b205151c652b6c9ca7e735f80bfe78427d1061f042723ee6381\r\nmonero-linux-x86-v0.17.1.9.tar.bz2, 1f51206c1996a577f976c0526b93cc495fe577db21f68b55636dce926f201206\r\nmonero-linux-armv8-v0.17.1.9.tar.bz2, ef16c3aefc8a17f0a547ffec9e2f087923c6bf293b9538294d14cbd318f1ab98\r\nmonero-linux-armv7-v0.17.1.9.tar.bz2, c8b226af900b018fade24742e5936b0ef6cec3fcdbc8a57a4b3f3d6d2507a2ec\r\nmonero-android-armv8-v0.17.1.9.tar.bz2, 2c45e0fb364ff2e60aa9cdf0d3faef145b22a8632b3336cc248eeba24352d39b\r\nmonero-android-armv7-v0.17.1.9.tar.bz2, c7192caf85f82ecdd1e7299c9ae6314fe2fb02ed9b7035a426a8644b676cc75f\r\nmonero-freebsd-x64-v0.17.1.9.tar.bz2, 3052f691a1a7631ba50c3f4d6f1b1355bdcc9a8c0c617cf56ced400afa1ea402\r\n```\r\n\r\nA GPG-signed list of the hashes is at [https://www.getmonero.org/downloads/hashes.txt](https://www.getmonero.org/downloads/hashes.txt) and should be treated as canonical, with the signature checked against the appropriate GPG key in the source code (in /utils/gpg_keys). To ensure that the files you download are those originally posted by the maintainers, you should both check that the hashes of your files match those on the signed list, and that the signature on the list is valid.", "created_at": "2021-01-08T01:55:37Z", "project": "Monero (XMR)", "currency": "xmr", "alias": "monero", "repo": "monero-project/monero", "type": "monero", "hosting": "github", "explorer": "http://moneroblocks.info", "doc": "https://web.getmonero.org/zh-cn/resources/user-guides/vps_run_node.html", "api": "https://web.getmonero.org/resources/developer-guides/daemon-rpc.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.2.2 (fix sync issues)", "tag_name": "v1.2.2", "html_url": "https://github.com/filestar-project/lotus/releases/tag/v1.2.2", "repo_url": "https://github.com/filestar-project/lotus", "body": "\u5305\u542b\u5982\u4e0b\u6539\u53d8\uff1a\r\n1. \u4fee\u590d\u90e8\u5206\u8282\u70b9\u7684\u540c\u6b65\u95ee\u9898\r\n2. \u4fee\u590d\u90e8\u5206\u60c5\u51b5\u4e0b8GiB\u77ff\u5de5\u65e0\u6cd5\u521b\u5efa\u7684\u95ee\u9898\r\n\r\n\u5982\u679cFileStar\u8282\u70b9\u5728\u5206\u53c9\u540e\u51fa\u73b0\u540c\u6b65\u95ee\u9898\uff0c\u8bf7\u66f4\u65b0\u7248\u672c\u81f3v1.2.2\u3002\u7136\u540e\r\n1. `lotus chain sethead --epoch 184559`\u5e76\u91cd\u542flotus\u3002\r\n2. \u6216\u8005\u4e0b\u8f7d[snapshot](https://filestar-proofs.s3.cn-east-1.jdcloud-oss.com/snapshot/filestar.car)\uff0c\u7136\u540e\u5220\u9664\u6570\u636e\u76ee\u5f55\u4e0b\u7684datastore\u6587\u4ef6\u5939\uff0c\u518d\u901a\u8fc7`lotus daemon --import-snapshot /path/to/snapshot.car`\u542f\u52a8\u3002", "created_at": "2020-12-30T08:56:55Z", "project": "FileStar (STAR)", "currency": "star", "alias": "star", "repo": "filestar-project/lotus", "type": "ipfs", "hosting": "github", "explorer": "https://filestar.info/zh", "doc": "https://github.com/filestar-project/docs/wiki/%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9", "api": "https://lotu.sh/en+api-methods", "add_time": "2020-11-10T11:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/aowclub/AOWchain", "repo_url": "https://github.com/aowclub/AOWchain", "body": "", "created_at": "2020-12-28T02:00:00Z", "project": "ORION (ORI)", "currency": "ori", "alias": "ori", "repo": "aowclub/AOWchain", "type": "polkadot", "hosting": "github", "explorer": "https://userscan.orionchain.org", "doc": "https://orionchain.oss-cn-beijing.aliyuncs.com/orion_build_guide.pdf", "api": "https://polkadot.js.org/docs/", "add_time": "2020-12-28T02:00:00Z"}, {"name": "v1.1.1", "tag_name": "v1.1.1", "html_url": "https://github.com/Bytom/bytom/releases/tag/v1.1.1", "repo_url": "https://github.com/Bytom/bytom", "body": "## Bytom version 1.1.1 is now available.\r\n\r\n## Checksums\r\nFile | Checksum(md5)\r\n------------ | -------------\r\nbytom-1.1.1-darwin_386.tgz | 6bfb90889f501235c2fbbe0cff65b6a8\r\nbytom-1.1.1-darwin_amd64.tgz | 1bc84379bc443db23c1f7e40375e7e0a\r\nbytom-1.1.1-linux_386.tgz | 91b249d24191cfc44a01bde1ad17ae19\r\nbytom-1.1.1-linux_amd64.tgz | ed38044864c4eee2a370e90c80faf38e\r\nbytom-1.1.1-windows_386.zip | 24fcc93c5e1f3e4fc1a62e347461d577\r\nbytom-1.1.1-windows_amd64.zip | fb8ebab5873a1c89de4915c46d2dac17", "created_at": "2020-12-23T01:36:24Z", "project": "Bytom (BTM)", "currency": "btm", "alias": "bytom", "repo": "Bytom/bytom", "type": "Defi", "hosting": "github", "explorer": "https://blockmeta.com", "doc": "https://github.com/Bytom/bytom/wiki/Running-in-Docker", "api": "https://github.com/Bytom/bytom/wiki/API-Reference", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.0.0", "tag_name": "v1.0.0", "html_url": "https://github.com/HuobiGroup/huobi-eco-chain/releases/tag/v1.0.0", "repo_url": "https://github.com/HuobiGroup/huobi-eco-chain", "body": "First release for heco", "created_at": "2020-12-17T11:08:05Z", "project": "Heco (HT)", "currency": "heco", "alias": "ht", "repo": "HuobiGroup/huobi-eco-chain", "type": "fork eth", "hosting": "github", "explorer": "https://hecoinfo.com/", "doc": "https://docs.hecochain.com/#/dev/install", "api": "https://eth.wiki/json-rpc/api", "add_time": "2021-01-21T02:00:00Z"}, {"name": "v1.0.201217", "tag_name": "v1.0.201217", "html_url": "https://github.com/gxchain/gxb-core/releases/tag/v1.0.201217", "repo_url": "https://github.com/gxchain/gxb-core", "body": "### GXB-Core Release v1.0.201217\r\n\r\n## Notice:\r\n\r\n**This is a hotfix release of GXB-Core Release v1.0.200327, Every node should upgrade to solve block generation issue caused by integer calculation overflow.**\r\n\r\nHot fix Commit:\r\n- https://github.com/gxchain/gxb-core/commit/dc3d967ddd2264503e5fbd62a38615afa192fcc0\r\n- https://github.com/gxchain/gxb-core/commit/84c33320c1c690270a972f3d290543b563b106df\r\n\r\nHow to Upgrade: Download and replace programs/witness_node/witness_node\r\n\r\nDownload Link: https://github.com/gxchain/gxb-core/releases/tag/v1.0.201217\r\n\r\n## Upgrade steps\r\n\r\n1. Download the latest release package, and unzip\uff1a\r\n   ```wget 'https://github.com/gxchain/gxb-core/releases/download/v1.0.201217/gxb_1.0.201217-ubuntu-14.04.tar.gz' -O gxb_1.0.201217-ubuntu-14.04.tar.gz && tar zxvf gxb_1.0.201217-ubuntu-14.04.tar.gz```\r\n\r\n2. Stop witness_node:\r\n\r\n```\r\nkill -s SIGINT $(pgrep witness_node)\r\n```\r\n\r\n3. Restart\r\n\r\n```\r\n# Your original started up script: history|grep witness_node\r\nnohup ./programs/witness_node/witness_node [other-options] # (The parameters are omitted here,each node is started differently)\r\n\r\n```\r\n\r\n> Note: For a BP, if you cannot produce a block after upgrade, your TrustedNode may have been banned by the system, to solve this problem, open https://wallet.gxb.io, import your account and do unbanned on the profile tab\r\n\r\n---\r\n\r\n**GXChain\u7684\u7f51\u7edc\u7531\u4e8e\u51fa\u73b0\u51fa\u5757\u5956\u52b1\u8ba1\u7b97\u6ea2\u51fa\uff0c\u5bfc\u81f4\u51fa\u5757\u5931\u8d25\uff0c\u76ee\u524d\u5df2\u7ecf\u5b8c\u6210\u4fee\u590d\uff0c\u6240\u6709\u7684\u8282\u70b9\u9700\u8981\u5347\u7ea7\u7a0b\u5e8f\u4ee5\u5b9e\u73b0\u6b63\u5e38\u51fa\u5757**\r\n\r\n\u4fee\u590d\u4ee3\u7801\uff1a\r\n- https://github.com/gxchain/gxb-core/commit/dc3d967ddd2264503e5fbd62a38615afa192fcc0\r\n- https://github.com/gxchain/gxb-core/commit/84c33320c1c690270a972f3d290543b563b106df\r\n\r\n\u5347\u7ea7\u65b9\u5f0f\uff1a\u6240\u6709\u7684\u8282\u70b9\u9700\u8981\u66ff\u6362\u8282\u70b9\u7a0b\u5e8f\u540e\u91cd\u542f\u8282\u70b9\uff0c\u6765\u5b8c\u6210\u5347\u7ea7\r\n\r\n\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/gxchain/gxb-core/releases/tag/v1.0.201217\r\n\r\n## \u5347\u7ea7\u6b65\u9aa4\r\n\r\n1. \u4e0b\u8f7d\u89e3\u538b\u6700\u65b0\u8282\u70b9\u7a0b\u5e8f\uff1a\r\n   ```wget 'https://github.com/gxchain/gxb-core/releases/download/v1.0.201217/gxb_1.0.201217-ubuntu-14.04.tar.gz' -O gxb_1.0.201217-ubuntu-14.04.tar.gz && tar zxvf gxb_1.0.201217-ubuntu-14.04.tar.gz```\r\n\r\n2. \u5b89\u5168\u505c\u6b62witness_node:\r\n\r\n```\r\nkill -s SIGINT $(pgrep witness_node)\r\n```\r\n\r\n3. \u91cd\u542f\r\n\r\n```\r\n# \u4f7f\u7528\u539f\u6765\u7684\u542f\u52a8\u65b9\u5f0f\u8fdb\u884c\u542f\u52a8: history|grep witness_node\r\nnohup ./programs/witness_node/witness_node [other-options]\r\n\r\n```\r\n\r\n> \u63d0\u793a\uff1a\u5982\u679c\u4f60\u7684\u662f\u4e00\u4e2a\u51fa\u5757\u8282\u70b9\uff08BP\uff09\uff0c\u7531\u4e8e\u5347\u7ea7\u4e0d\u53ca\u65f6\u53ef\u80fd\u5df2\u7ecf\u88ab\u7cfb\u7edf\u81ea\u52a8\u5173\u8fdb\u5c0f\u9ed1\u5c4b\uff0c\u65e0\u6cd5\u53c2\u4e0e\u51fa\u5757\uff0c\u53ef\u4ee5\u5728 https://wallet.gxb.io \u5bfc\u5165\u8d26\u6237\u6d3b\u8dc3\u6743\u9650\u79c1\u94a5\u540e\uff0c\u5728\u8d44\u6599\u9875\u9762\u8fdb\u884c\u64cd\u4f5c\uff0c\u79bb\u5f00\u5c0f\u9ed1\u5c4b\r\n\r\n## SHA256 checksum:\r\n- dab13eaa4920431a71e5a06d7949effbd3476465d03983b540c05f75a2d27fd0  gxb_1.0.201217-ubuntu-14.04.tar.gz\r\n- 4f73945a7e34d6c3ed3fd9ba8935b0036e895ddb59eb5f039b6c7f4196a23dfd  gxb_1.0.201217-with-plugin-ubuntu-14.04.tar.gz\r\n", "created_at": "2020-12-16T23:35:17Z", "project": "GXChain (GXC)", "currency": "gxc", "alias": "gxchain", "repo": "gxchain/gxb-core", "type": "eos", "hosting": "github", "explorer": "https://explorer.gxchain.org", "doc": "https://docs.gxchain.org/zh/advanced/witness_node.html", "api": "https://docs.gxchain.org/zh/guide/apis.html", "add_time": "2020-04-04T22:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/CryptoDWH/cdwh-sdk", "repo_url": "https://github.com/CryptoDWH/cdwh-sdk", "body": "", "created_at": "2020-12-10T02:00:00Z", "project": "Mirror World (MW)", "currency": "mw", "alias": "mw", "repo": "CryptoDWH/cdwh-sdk", "type": "mw", "hosting": "github", "explorer": "https://testboot.mw.run", "explorer1": "http://mw.rylink.io:7216", "doc": "https://mwfs.oss-cn-shenzhen.aliyuncs.com/cos/miner/MW_Miner_Register.pdf", "api": "http://docs.mw.run", "add_time": "2020-12-10T02:00:00Z"}, {"name": "Mercury(v1.0.2)", "tag_name": "v1.0.2", "html_url": "https://github.com/Dipper-Labs/Dipper-Protocol/releases/tag/v1.0.2", "repo_url": "https://github.com/Dipper-Labs/Dipper-Protocol", "body": "update coin_type from 118 to 925", "created_at": "2020-12-08T07:21:52Z", "project": "Dipper Network (DIP)", "currency": "dip", "alias": "dip", "repo": "Dipper-Labs/Dipper-Protocol", "type": "cosmos", "hosting": "github", "explorer": "http://explorer.dippernetwork.com", "doc": "https://docs.dippernetwork.com/get-started/install.html", "api": "https://docs.dippernetwork.com/api/api.html", "add_time": "2020-12-10T12:00:00Z"}, {"name": "Dash Core 0.16.1.1 Release Announcement", "tag_name": "v0.16.1.1", "html_url": "https://github.com/dashpay/dash/releases/tag/v0.16.1.1", "repo_url": "https://github.com/dashpay/dash", "body": "We are happy to announce the release of 0.16.1.1. This release includes binaries, which can be downloaded below.\r\n\r\nAbout this release\r\n=============\r\n\r\nDash Core 0.16.1.1 is a hotfix release of the Dash Core 0.16.x.x series. This release contains a bugfix and we consider this a stable release. You can find detailed release notes at https://github.com/dashpay/dash/blob/v0.16.1.1/doc/release-notes.md.\r\n\r\nVerification of Downloads\r\n-----------------------------------\r\n\r\nThis release was signed by https://keybase.io/pasta (GPG fingerprint: `2959 0362 EC87 8A81 FD3C 202B 5252 7BED ABE8 7984`).\r\n\r\nIt is important to verify the binaries you download by following one of these guides:\r\n - [Windows](https://docs.dash.org/en/stable/wallets/dashcore/installation-windows.html?#verifying-dash-core)\r\n - [MacOS](https://docs.dash.org/en/stable/wallets/dashcore/installation-macos.html?#verifying-dash-core)\r\n - [Linux](https://docs.dash.org/en/stable/wallets/dashcore/installation-linux.html?#verifying-dash-core)\r\n\r\nNotable Changes\r\n-----------------------\r\nThere was an unexpected behaviour of the \"Encrypt wallet\" menu item for unencrypted wallets which was showing users the \"Decrypt wallet\" dialog instead. This was a GUI only issue, internal encryption logic and RPC behaviour were not affected.\r\n\r\nCredits\r\n-------\r\n\r\nThanks go out to all Dash Core contributors, everyone who submitted issues, reviewed pull requests or helped translating on [Transifex](https://www.transifex.com/projects/p/dash/) and also to [Bitcoin Core](https://github.com/bitcoin/bitcoin) Developers.", "created_at": "2020-11-15T21:43:14Z", "project": "Dash (DASH)", "currency": "dash", "alias": "dash", "repo": "dashpay/dash", "type": "utxo", "hosting": "github", "explorer": "https://explorer.dash.org", "doc": "https://docs.dash.org/zh_CN/stable/masternodes/setup.html#option-1-automated-installation-using-dashman", "api": "https://dashcore.readme.io/docs/core-api-ref-http-rest-quick-reference", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/cypherium/cypherBFTBin", "repo_url": "https://github.com/cypherium/cypherBFTBin", "body": "", "created_at": "2020-11-04T04:00:00Z", "project": "Cypherium (CPH)", "currency": "cph", "alias": "cph", "repo": "cypherium/cypherBFTBin", "type": "fork eth", "hosting": "github", "explorer": "https://explorer.cypherium.io", "doc": "https://www.cypherium.io", "api": "https://www.cypherium.io", "add_time": "2020-11-04T04:00:00Z"}, {"name": "", "tag_name": "release@1.0.8n", "html_url": "https://github.com/yottachain/YTDataNode/commit/7a69bbcb5869d5900fac5cae1d73b1a840ebd93f", "repo_url": "https://github.com/yottachain/YTDataNode", "body": "publish 1.0.8n", "created_at": "2020-10-21T02:44:07Z", "project": "YOTTA (YTA)", "currency": "yta", "alias": "yta", "repo": "yottachain/YTDataNode", "type": "eos", "hosting": "github", "explorer": "https://yottascan.io/zh/overview", "doc": "https://www.yottachain.io/zh/developer/", "api": "https://static.yottachain.net/download/YTA%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%20.pdf", "add_time": "2020-11-04T04:00:00Z"}, {"name": "", "tag_name": "v2.0.22", "html_url": "https://github.com/HorizenOfficial/zen/releases/tag/v2.0.22", "repo_url": "https://github.com/HorizenOfficial/zen", "body": "Binaries\r\n=========\r\nWindows and macOS binaries are signed with a valid certificate,\r\nsee included instructions.txt for Win/Mac command line wallets.\r\n\r\nInstall\r\n=========\r\nDebian package dependencies:\r\n\r\n```\r\nDepends amd64: libc6 (>= 2.18), libgcc1 (>= 1:4.2), libgomp1 (>= 4.9), libstdc++6 (>= 5.2)\r\nDepends arm64: libc6 (>= 2.25), libgcc1 (>= 1:4.2), libgomp1 (>= 4.9), libstdc++6 (>= 7)\r\n```\r\n\r\n\r\nNotable changes\r\n===============\r\n\r\n* Hard Fork at mainnet block 835968/testnet block 735700 with minor changes to OP_CBAH handling\r\n* Extend OP_CBAH unit tests\r\n* Security hardening of TLS P2P code, only allow PFS ciphers, limit TLS versions to 1.2/1.3\r\n* Extend TLS unit tests\r\n* Extend the 'getblock' RPC command with additional verbosity level, adding transaction information in the format of the getrawtransaction RPC call\r\n* Add fetch-params.ps1 powershell script for Windows trusted setup DL and verification\r\n* Fix for gcc10 compatibility\r\n* Updates of dependencies OpenSSL, Univalue, libsodium\r\n* Rename GH organization to HorizenOfficial", "created_at": "2020-10-19T18:34:28Z", "project": "Horizen (ZEN)", "currency": "zen", "alias": "zen", "repo": "HorizenOfficial/zen", "type": "utxo", "hosting": "github", "explorer": "https://explorer.zensystem.io", "explorer1": "https://zen.tokenview.com", "doc": "https://github.com/HorizenOfficial/zen-node-docker", "api": "https://docs.horizen.io/en/latest/reference/index.html", "add_time": "2020-11-30T12:00:00Z"}, {"name": "Release 3.3.0", "tag_name": "v3.3.0", "html_url": "https://github.com/ucacoin/Ucacoin2/releases/tag/v3.3.0", "repo_url": "https://github.com/ucacoin/Ucacoin2", "body": "# Mandatory Update:\r\n\r\n###  Users with updating from a previous version will require a full resync of their local blockchain from either the P2P network or by way of the **bootstrap**.\r\n### If you didn't go with **bootstrap** than it will be ask for resync **when you start wallet** . This resync is a one-time event.\r\n\r\n## How to upgrade:\r\nShutdown your old pc/mac/linux wallet completely.\r\n\r\n- For windows users - run the <a href=\"https://github.com/ucacoin/Ucacoin2/releases/download/v3.3.0/ucacoin-3.3.0-setup-win64.zip\">Installer</a>.\r\n- For Mac users copy the dmg to your Applications folder (copying over your current UCA Coin application).\r\n- For Linux users copy over ucacoind/ucacoin-qt. If you have installed your data directory to a custom location select existing data directory during your installation.\r\n\r\n", "created_at": "2020-10-16T10:43:20Z", "project": "UCA Coin (UCA)", "currency": "uca", "alias": "ucacoin", "repo": "ucacoin/Ucacoin2", "type": "utxo", "hosting": "github", "explorer": "https://blockexplorer.ucacoin.cash", "doc": "https://github.com/ucacoin/Ucacoin2#docker", "api": "https://github.com/ucacoin/Ucacoin2/blob/master/doc/REST-interface.md", "add_time": "2020-07-07T07:00:00Z"}, {"name": "Omni Core v0.9.0", "tag_name": "v0.9.0", "html_url": "https://github.com/OmniLayer/omnicore/releases/tag/v0.9.0", "repo_url": "https://github.com/OmniLayer/omnicore", "body": "v0.9.0 is a major release and uses Segregated Witness wrapped in P2SH for newly generated addresses per default. It also adds two new transaction types to anchor arbitrary data in the blockchain. As an experimental feature, several new commands were added to support querying any Bitcoin balance.\r\n\r\nWhile this release is not mandatory and doesn't change the consensus rules of the Omni Layer protocol, an upgrade is nevertheless recommended.\r\n\r\nUpgrading from 0.8.2, 0.8.1 or 0.8.0 does not require a rescan and can be done very fast without interruption.\r\n\r\nPlease report bugs using the issue tracker on GitHub:\r\n\r\n  https://github.com/OmniLayer/omnicore/issues\r\n\r\n\r\nTable of contents\r\n=================\r\n\r\n- [Omni Core v0.9.0](#omni-core-v082)\r\n- [Upgrading and downgrading](#upgrading-and-downgrading)\r\n  - [How to upgrade](#how-to-upgrade)\r\n  - [Downgrading](#downgrading)\r\n  - [Compatibility with Bitcoin Core](#compatibility-with-bitcoin-core)\r\n- [Improvements](#improvements)\r\n  - [Use wrapped Segrated Witness scripts for new addresses](#use-wrapped-segrated-witness-scripts-for-new-addresses)\r\n  - [New transactions to anchor arbitrary data](#new-transactions-to-anchor-arbitrary-data)\r\n  - [Experimental querying of any Bitcoin balance](#experimental-querying-of-any-bitcoin-balance)\r\n  - [Several test and under the hood improvements](#several-test-and-under-the-hood-improvements)\r\n- [Change log](#change-log)\r\n- [Credits](#credits)\r\n\r\n\r\nUpgrading and downgrading\r\n=========================\r\n\r\nHow to upgrade\r\n--------------\r\n\r\nIf you are running Bitcoin Core or an older version of Omni Core, shut it down. Wait until it has completely shut down, then copy the new version of `omnicored`, `omnicore-cli` and `omnicore-qt`. On Microsoft Windows the setup routine can be used to automate these steps.\r\n\r\nWhen upgrading from an older version than 0.8.0, the database of Omni Core is reconstructed, which can easily consume several hours. During the first startup historical Omni Layer transactions are reprocessed and Omni Core will not be usable for several hours up to more than a day. The progress of the initial scan is reported on the console, the GUI and written to the `debug.log`. The scan may be interrupted and can be resumed.\r\n\r\nUpgrading from 0.8.1 or 0.8.0 does not require a rescan and can be done very fast without interruption.\r\n\r\nDowngrading\r\n-----------\r\n\r\nDowngrading to an Omni Core version prior to 0.8.0 is not supported.\r\n\r\nCompatibility with Bitcoin Core\r\n-------------------------------\r\n\r\nOmni Core is based on Bitcoin Core 0.18.1 and can be used as replacement for Bitcoin Core. Switching between Omni Core and Bitcoin Core may be supported.\r\n\r\nHowever, it is not advised to upgrade or downgrade to versions other than Bitcoin Core 0.18. When switching to Omni Core, it may be necessary to reprocess Omni Layer transactions.\r\n\r\n\r\nImprovements\r\n============\r\n\r\nUse wrapped Segrated Witness scripts for new addresses\r\n------------------------------------------------------\r\n\r\nWhen using `getnewaddress` new addresses are generated with Segrated Witness scripts wrapped in P2SH. On mainnet, those addresses start with a `3` instead of `1`. This upgrade lowers transaction fees significantly and should not break integrations.\r\n\r\nIn case you need to fall back to the legacy address generation, please start Omni Core with `addresstype=legacy` configuration option.\r\n\r\n\r\nNew transactions to anchor arbitrary data\r\n-----------------------------------------\r\n\r\nTwo new transaction types were added to anchor arbitrary data on-chain. This allows the creation of overlay protocols on top of the Omni protocol, or can simply be used to store any form of data in the blockchain.\r\n\r\n**Example of sending and pulling data**\r\n\r\nSending the hex-encoded data `497420776f726b7321`:\r\n\r\n```bash\r\n$ omnicore-cli \"omni_sendanydata\" \"2N5bnBsaVdPBuK5xKCQ5ZTXnofBfwSxU2Th\" \"497420776f726b7321\"\r\n```\r\n```\r\n4c9776f28e7015e840a05cb0955c22fd6917cf264032ad694e5d1ee0d8ebf745\r\n```\r\n\r\nAfter a confirmation:\r\n\r\n```bash\r\n$ omnicore-cli \"omni_gettransaction\" \"4c9776f28e7015e840a05cb0955c22fd6917cf264032ad694e5d1ee0d8ebf745\"\r\n```\r\n```js\r\n{\r\n  \"txid\": \"4c9776f28e7015e840a05cb0955c22fd6917cf264032ad694e5d1ee0d8ebf745\",\r\n  \"fee\": \"0.00003240\",\r\n  \"sendingaddress\": \"2N5bnBsaVdPBuK5xKCQ5ZTXnofBfwSxU2Th\",\r\n  \"ismine\": true,\r\n  \"version\": 0,\r\n  \"type_int\": 200,\r\n  \"type\": \"Embed any data\",\r\n  \"data\": \"497420776f726b7321\",\r\n  \"valid\": true,\r\n  \"blockhash\": \"7c1e8be2c48fa6062b2b8ff6de7b2e1bc14b7d281d961979ed195a86399abd75\",\r\n  \"blocktime\": 1599469254,\r\n  \"positioninblock\": 1,\r\n  \"block\": 367,\r\n  \"confirmations\": 1\r\n}\r\n```\r\n\r\nFor more details, please see the descriptions of the new RPCs:\r\n\r\n- [omni_sendanydata](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#omni_sendanydata)\r\n- [omni_createpayload_anydata](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#omni_createpayload_anydata)\r\n\r\n\r\nExperimental querying of any Bitcoin balance\r\n--------------------------------------------\r\n\r\nA new optional database was added, which allows the user to query any Bitcoin balance or list transactions of any addresses. Please note, this feature is experimental and not enabled per default. To enable the new database, restart Omni Core with `experimental-btc-balances=1` configuration option.\r\n\r\n**When enabling both of these options, Omni Core creates a new database for Bitcoin balances. This step can take a very long time of up to multiple days on mainnet. More than 300 GB of additional disk space are required!**\r\n\r\nPlease see the descriptions of the new RPCs for more details:\r\n\r\n- [getaddresstxids](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddresstxids)\r\n- [getaddressdeltas](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddressdeltas)\r\n- [getaddressbalance](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddressbalance)\r\n- [getaddressutxos](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getaddressutxos)\r\n- [getaddressmempool](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#xxxxx)\r\n- [getblockhashes](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getblockhashes)\r\n- [getspentinfo](https://github.com/OmniLayer/omnicore/blob/master/src/omnicore/doc/rpc-api.md#getspentinfo)\r\n\r\n**Please also note, this feature is experimental and may provide inaccurate results.**\r\n\r\n\r\nSeveral test and under the hood improvements\r\n--------------------------------------------\r\n\r\nTo prepare Omni Core for Bitcoin Core 0.20+, OpenSSL was removed and replaced. OmniJ related tests were upgraded to use JDK 11. New tests for funded transactions were added and old bash tests were converted to the newer functional test framework. Additional checks and safe guards were implemented.\r\n\r\nThese changes improve the robustness and reliability of Omni Core.\r\n\r\n\r\nChange log\r\n==========\r\n\r\nThe following list includes relevant pull requests merged into this release:\r\n\r\n```\r\n- #1142 Remove OpenSSL usage from Omni source\r\n- #1146 Travis OmniJ tests: upgrade to JDK 11 (from JDK 8)\r\n- #1153 Check Omni token balance is consistent after reorg\r\n- #1155 Add tests for CreateFundedTransaction\r\n- #1159 Convert bash test scripts to functional test framework\r\n- #1163 Set default address type to P2SH_SEGWIT\r\n- #1166 Add new transaction type to embed any data\r\n- #1168 Support adding a receiver address for \"any data\" transactions\r\n- #1169 Avoid overflow on reindex with debug enabled\r\n- #1165 Add bitcore indexing\r\n- #1173 Bump version to 0.9.0\r\n- #1175 Add description for -experimental-btc-balances\r\n- #1179 Move lock to blockOnchainActive\r\n- #1177 Add documentation for address index RPCs\r\n- #1181 Return error, when using bitcore RPCs without addrindex\r\n- #1176 Add release notes for Omni Core 0.9.0\r\n```\r\n\r\n\r\nCredits\r\n=======\r\n\r\nThanks to everyone who contributed to this release, especially to Peter Bushnell.", "created_at": "2020-10-08T14:02:35Z", "project": "Omni (OMNI)", "currency": "usdt", "alias": "omni", "repo": "OmniLayer/omnicore", "type": "utxo", "hosting": "github", "explorer": "https://www.omniexplorer.info", "doc": "https://github.com/mpugach/docker_omnicored", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Stafi v0.3.2", "tag_name": "v0.3.2", "html_url": "https://github.com/stafiprotocol/stafi-node/releases/tag/v0.3.2", "repo_url": "https://github.com/stafiprotocol/stafi-node", "body": "Priority: Medium (timely upgrade recommended)\r\n\r\nNative runtimes:\r\nStafi: 6\r\n\r\nThis release was tested against the following versions of rustc. Other versions may work.\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nrustc 1.48.0-nightly (0da580074 2020-09-22)\r\n\r\nChanges:\r\n1. Reduce transaction fees. Only a small fee is required to send a transaction. \r\n2. Tweak deposit costs. Reduce the amount of FIS that needs to be deposited, such as setting an identity, adding proxy etc. \r\n3. Bump Nominator Reward Limits. Increase max nominator rewarded per validator from 64 to 256. \r\n4. Add DefaultVote type for collective modules. \r\n5. Upgrade the underlying framework.\r\n", "created_at": "2020-09-26T07:18:14Z", "project": "StaFi (FIS)", "currency": "fis", "alias": "fis", "repo": "stafiprotocol/stafi-node", "type": "polkadot", "hosting": "github", "explorer": "https://stafi.subscan.io", "explorer1": "https://apps.stafi.io/#/explorer", "doc": "https://docs.stafi.io/validator-sv/run-a-node", "api": "https://docs.stafi.io/network-1/sitara-incentivized-testnet/stage-2/monitor-your-node-and-setup-automated-alerts#1-monitor-your-node", "add_time": "2020-11-16T11:00:00Z"}, {"name": "New Baleyworld v0.13.1", "tag_name": "NewBaleyworld_v0.13.1", "html_url": "https://github.com/PlatONnetwork/PlatON-Go/releases/tag/NewBaleyworld_v0.13.1", "repo_url": "https://github.com/PlatONnetwork/PlatON-Go", "body": "# md5sum\r\n\r\n| File    | md5sum | \r\n|:----------|:-------------|\r\n| platon-ubuntu-amd64-0.13.1.tar.gz | dd84e40ed9762e380db1953e70da4a81 |\r\n\r\n# Change Log\r\n\r\n- New features\r\n\r\n1. No longer mandatory to unstake when nodes ware slashed by low block production[PIP-11](https://github.com/PlatONnetwork/PIPs/blob/master/TestNet/PIP-11.md).\r\n2. The condition for zero block production times is changed from the default of 3 to 1[PIP-11](https://github.com/PlatONnetwork/PIPs/blob/master/TestNet/PIP-11.md).\r\n3. Special blocks, such as election blocks, settlement blocks are packaged and traded according to normal logic[#1461](https://github.com/PlatONnetwork/PlatON-Go/issues/1461).\r\n4. RLP coding optimization of WASM contract[#1449](https://github.com/PlatONnetwork/PlatON-Go/issues/1449).\r\n5. Add the txpool.cacheSize parameter, when a certain number of transactions are received, the transaction will be moved from queue to pending[#1469](https://github.com/PlatONnetwork/PlatON-Go/pull/1469).\r\n6. Adjust the default gasLimit of the block to 201600000 to increase the capacity of a single block[#1469](https://github.com/PlatONnetwork/PlatON-Go/pull/1469).\r\n7. When the block is executed, the 'from' is first obtained from txpool, if not, calculated it in parallel[#1469](https://github.com/PlatONnetwork/PlatON-Go/pull/1469).\r\n\r\n- Changes\r\n\r\n1. Synced some optimized content from go-ethereum.\r\n2. Built-in domain names of mainnet seed nodes and foundation nodes.\r\n3. Optimized the performance test plugin.\r\n\r\n- Bug Fixes\r\n\r\n1. Fixed an issue where wasm contract gas was calculated incorrectly[#1465](https://github.com/PlatONnetwork/PlatON-Go/issues/1465). \r\n2. Fixed an issue where the bls signature verification failed in the log[#1464](https://github.com/PlatONnetwork/PlatON-Go/issues/1464).\r\n3. Fixed the problem of view synchronization failure when memory forks[#1474](https://github.com/PlatONnetwork/PlatON-Go/pull/1474).", "created_at": "2020-09-22T03:06:47Z", "project": "Alaya (ATP)", "currency": "atp", "alias": "atp", "repo": "PlatONnetwork/PlatON-Go", "type": "platon", "hosting": "github", "explorer": "https://scan.alaya.network", "doc": "https://devdocs.alaya.network/alaya-devdocs/zh-CN/Install_Node/", "api": "https://devdocs.alaya.network/alaya-devdocs/zh-CN/Json_Rpc/", "add_time": "2020-11-06T11:00:00Z"}, {"name": "ycashd v2.1.1-6: Further Stability Improvements and Updated Expiry Block Height", "tag_name": "v2.1.1-6", "html_url": "https://github.com/ycashfoundation/ycash/releases/tag/v2.1.1-6", "repo_url": "https://github.com/ycashfoundation/ycash", "body": "This release incorporates an [upstream zcashd fix](https://github.com/zcash/zcash/pull/4690/commits) that fixes upstream [zcashd issue #4680](https://github.com/zcash/zcash/issues/4680).\r\n\r\nPrior versions versions of ycashd will expire at block height 837,088 (approximately October 27, 2020). You must upgrade to this new version before then in order to stay synced with the blockchain.\r\n\r\nThe new expiry block height is 1,051,092 (approximately November 4, 2021).", "created_at": "2020-09-10T19:56:10Z", "project": "Ycash (YEC)", "currency": "yec", "alias": "ycash", "repo": "ycashfoundation/ycash", "type": "utxo", "hosting": "github", "explorer": "https://yecexplorer.guarda.co", "doc": "https://zcash.readthedocs.io/en/latest/rtd_pages/user_guide.html", "api": "https://zcash-rpc.github.io", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Release - FIO v2.0.0", "tag_name": "v2.0.0", "html_url": "https://github.com/fioprotocol/fio/releases/tag/v2.0.0", "repo_url": "https://github.com/fioprotocol/fio", "body": "# Blockchain update\r\nA replay is required when updating to this release.\r\n\r\n## Upgrade required by Friday September 4th\r\nThis is a required upgrade to the blockchain code. All FIO API and History Nodes must be upgraded by **Friday September 4th**. Nodes that are not upgraded by that date will be forked from the updated FIO blockchain.\r\n# Enhancements and Updates\r\nThese features are included in the current fio release but may not be available until the corresponding features are also released in fio.contracts.\r\n\r\n(#217) Add final forking date to apply_context.cpp / chain_plugin\r\n\r\n(#73) FIP-2. Add get_fio_domains and get_fio_addresses endpoints with support for paging.\r\n\r\n(#95) FIP-3. Add ability to cancel a request for funds.\r\n* Adds a new status for a request for funds, to cancel a request for funds.\r\n* Modifies the get_sent_fio_requests to return cancelled requests along with the rest.\r\n* Modified the record_obt_data so that it no longer allows multiple status records to be associated with a request id.\r\n* Adds a new endpoint and contract action for cancel_funds_request.\r\n* Adds a new get endpoint get_cancelled_fio_requests, returning cancelled fio requests.\r\n\r\n(#96) FIP-4. Add ability to remove mapped public addresses. Adds new endpoints and fio.address actions for remove_pub_address remove_all_pub_address.\r\n\r\n(#35) Addresses issue #112. EOSIO 1.8.10-1.8.12 upgrade.\r\n\r\n(#118 / #119) Create /get_actor endpoint. Adds a new endpoint to the chain plugin called get_actor that takes as input fio public key and returns the actor for the specified public key.\r\n\r\n# V1 History Updates\r\nA resync is required for nodes running the V1 history plugin when upgrading to this release.\r\n\r\nSome of these updates may not be available until the corresponding features are also released in fio.contracts.\r\n\r\n(#120) FIO Support for History Plugin. Includes initial import of light history implementation from Greymass for FIO. \r\n\r\n(#129) Unlinkauth missing from action mapping. Addresses issue #128.", "created_at": "2020-08-12T16:59:58Z", "project": "FIO (FIO)", "currency": "fio", "alias": "fio", "repo": "fioprotocol/fio", "type": "eos", "hosting": "github", "explorer": "https://fio.bloks.io", "explorer1": "https://monitor.fioprotocol.io", "doc": "https://developers.fioprotocol.io/fio-chain/history", "api": "https://developers.fioprotocol.io/api/api-spec", "add_time": "2020-07-16T02:00:00Z"}, {"name": "v1.0.11", "tag_name": "v1.0.11", "html_url": "https://github.com/zvchain/zvchain/releases/tag/v1.0.11", "repo_url": "https://github.com/zvchain/zvchain", "body": "", "created_at": "2020-08-10T02:30:48Z", "project": "ZVCHAIN (ZVC)", "currency": "zvc", "alias": "zvchain", "repo": "zvchain/zvchain", "type": "zvchain", "hosting": "github", "explorer": "https://explorer.zvchain.io", "doc": "https://github.com/zvchain/zvchain/wiki/miner_operation_zh#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C", "doc1": "https://github.com/zvchain/zvchain/wiki/rpc_api_zh#RPC%E6%9C%8D%E5%8A%A1", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/telosnetwork/node-template", "repo_url": "https://github.com/telosnetwork/node-template", "body": "", "created_at": "2020-08-06T06:00:00Z", "project": "Teloscoin (TELOS)", "currency": "telos", "alias": "tlos", "repo": "telosnetwork/node-template", "type": "eos", "hosting": "github", "explorer": "https://telos.bloks.io", "doc": "https://docs.telos.net/developers/platform/overview/platform_and_toolchain#nodeos", "api": "https://developers.eos.io/welcome/latest/reference/nodeos-rpc-api-reference/", "add_time": "2020-08-06T06:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/meterio/meter-go", "repo_url": "https://github.com/meterio/meter-go", "body": "", "created_at": "2020-07-16T02:00:00Z", "project": "Meter (MTR)", "currency": "mtr", "alias": "meter", "repo": "meterio/meter-go", "type": "meter", "hosting": "github", "explorer": "https://scan.meter.io", "doc": "https://github.com/meterio/mainnet_docs", "api": "https://docs.meter.io/meterify.html#meterify", "api1": "https://mainnet.meter.io:8667", "add_time": "2020-07-16T02:00:00Z"}, {"name": "BOSCore v3.0.9 Release Notes", "tag_name": "v3.0.9", "html_url": "https://github.com/boscore/bos/releases/tag/v3.0.9", "repo_url": "https://github.com/boscore/bos", "body": "<!-- PLEASE FILL OUT THE FOLLOWING MARKDOWN TEMPLATE -->\r\n<!-- Give your PR a title that is sufficient to understand what is being changed. -->\r\n\r\n## Change Description\r\nAdd account query db, link to EOSIO [feature](https://github.com/EOSIO/eos/pull/8899). resolve: #159 \r\n\r\n<!-- Describe the change you made, the motivation for it, and the impact it will have. Reference issues or pull requests where possible (use '#XX' or 'GH-XX' where XX is the issue or pull request number). -->\r\n\r\n## Consensus Changes\r\n\r\n<!-- If this PR introduces a change to the validation of blocks in the chain or consensus in general, please describe the impact. -->\r\n\r\n\r\n## API Changes\r\n\r\n```bash\r\n$ curl http://127.0.0.1:8888/v1/chain/get_accounts_by_authorizers -d '{\"keys\":[\"EOS...\"]}' 2>/dev/null | jq '[.accounts[].account_name] | unique'\r\n```\r\n\r\n```bash\r\n$ curl http://127.0.0.1:8888/v1/chain/get_accounts_by_authorizers -d '{\"accounts\":[\"alice\"]}' 2>/dev/null | jq '[.accounts[].account_name] | unique'\r\n```\r\n\r\n<!-- If this PR introduces API changes, please describe the changes here. What will developers need to know before upgrading to this version? -->\r\n\r\n\r\n## Documentation Additions\r\n\r\n## --enable-account-queries\r\n*default: false*\r\n\r\nBoolean that indicates whether the Account Query DB should be initialized at start-up and maintained for the life of this instance. if set to true then the RPC endpoint for `/v1/chain/get_accounts_by_authorizers` will be registered otherwise it will not be present and requests to that endpoint will return `404` errors.\r\n\r\n## Others\r\n\r\nDocker image: boscore/bos:v3.0.9\r\n\r\nFor Ubuntu, SW/eden [APT](https://eosswedenorg.github.io/apt/bos) source can be used:\r\n```\r\nsudo apt-get install software-properties-common\r\ncurl https://apt.eossweden.org/key 2> /dev/null | sudo apt-key add -\r\nsudo apt-add-repository -y 'deb [arch=amd64] https://apt.eossweden.org/bos `lsb_release -cs` stable' \r\nsudo apt-get update\r\nsudo apt-get install bos-mv-309\r\n```\r\n", "created_at": "2020-06-15T07:03:15Z", "project": "BOSCore (BOS)", "currency": "bos", "alias": "bos", "repo": "boscore/bos", "type": "eos", "hosting": "github", "explorer": "https://bos.bloks.io", "explorer1": "https://bos.eosx.io", "doc": "https://www.bcskill.com/index.php/archives/631.html", "api": "https://developers.eos.io/manuals/eos/latest/nodeos/rpc_apis/index/", "add_time": "2020-12-24T08:00:00Z"}, {"name": "Litecoin Core v0.18.1", "tag_name": "v0.18.1", "html_url": "https://github.com/litecoin-project/litecoin/releases/tag/v0.18.1", "repo_url": "https://github.com/litecoin-project/litecoin", "body": "# Litecoin Core v0.18.1 Release\r\n\r\n*Follow our\u00a0*[*Twitter*](https://twitter.com/litecoinproject)*\u00a0for the latest dev news.*\r\n\r\nWe are pleased to release Litecoin Core 0.18.1. This is a new major version release, including new features, various bugfixes and performance improvements, as well as updated translations. It is recommended for all users to upgrade to this version.\r\n\r\nHow to Upgrade\r\n==============\r\n\r\nIf you are running an older version, shut it down. Wait until it has completely shut down (which might take a few minutes for older versions), then run the installer (on Windows) or just copy over\u00a0`/Applications/Litecoin-Qt`\u00a0(on Mac) or\u00a0`litecoind`/`litecoin-qt`\u00a0(on Linux).\r\n\r\nThe first time you run version 0.15.0 or newer, your chainstate database will be converted to a new format, which will take anywhere from a few minutes to half an hour, depending on the speed of your machine.\r\n\r\nNote that the block database format also changed in version 0.8.0 and there is no automatic upgrade code from before version 0.8 to version 0.15.0 or later. Upgrading directly from 0.7.x and earlier without redownloading the blockchain is not supported. However, as usual, old wallet versions are still supported.\r\n\r\nCompatibility\r\n=============\r\n\r\nLitecoin Core is supported and extensively tested on operating systems using the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended to use Litecoin Core on unsupported systems.\r\n\r\nLitecoin Core should also work on most other Unix-like systems but is not as frequently tested on them.\r\n\r\nFrom 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is built using Qt 5.9.x, which doesn't support versions of macOS older than 10.10. Additionally, Litecoin Core does not yet change appearance when macOS \"dark mode\" is activated.\r\n\r\nIn addition to previously-supported CPU platforms, this release's pre-compiled distribution also provides binaries for the RISC-V platform.\r\n\r\nKnown issues\r\n============\r\n\r\nWallet GUI\r\n----------\r\n\r\nFor advanced users who have both (1) enabled coin control features, and (2) are using multiple wallets loaded at the same time: The coin control input selection dialog can erroneously retain wrong-wallet state when switching wallets using the dropdown menu. For now, it is recommended not to use coin control features with multiple wallets loaded.\r\n\r\nNotable changes\r\n===============\r\n\r\nMining\r\n------\r\n\r\n-   Calls to\u00a0`getblocktemplate`\u00a0will fail if the segwit rule is not specified. Calling\u00a0`getblocktemplate`\u00a0without segwit specified is almost certainly a misconfiguration since doing so results in lower rewards for the miner. Failed calls will produce an error message describing how to enable the segwit rule.\r\n\r\nConfiguration option changes\r\n----------------------------\r\n\r\n-   A warning is printed if an unrecognized section name is used in the configuration file. Recognized sections are\u00a0`[test]`,\u00a0`[main]`, and\u00a0`[regtest]`.\r\n-   Four new options are available for configuring the maximum number of messages that ZMQ will queue in memory (the \"high water mark\") before dropping additional messages. The default value is 1,000, the same as was used for previous releases. See the\u00a0[ZMQ documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/zmq.md#usage)\u00a0for details.\r\n-   The\u00a0`rpcallowip`\u00a0option can no longer be used to automatically listen on all network interfaces. Instead, the\u00a0`rpcbind`\u00a0parameter must be used to specify the IP addresses to listen on. Listening for RPC commands over a public network connection is insecure and should be disabled, so a warning is now printed if a user selects such a configuration. If you need to expose RPC in order to use a tool like Docker, ensure you only bind RPC to your localhost, e.g.\u00a0`docker run [...] -p 127.0.0.1:9332:9332`\u00a0(this is an extra\u00a0`:9332`\u00a0over the normal Docker port specification).\r\n-   The\u00a0`rpcpassword`\u00a0option now causes a startup error if the password set in the configuration file contains a hash character (#), as it's ambiguous whether the hash character is meant for the password or as a comment.\r\n-   The\u00a0`whitelistforcerelay`\u00a0option is used to relay transactions from whitelisted peers even when not accepted to the mempool. This option now defaults to being off, so that changes in policy and disconnect/ban behavior will not cause a node that is whitelisting another to be dropped by peers. Users can still explicitly enable this behavior with the command line option (and may want to consider\u00a0[contacting](mailto:contact@litecoin.org)\u00a0the Litecoin Core project to let us know about their use-case, as this feature could be deprecated in the future).\r\n\r\nWallet changes\r\n==============\r\n\r\nWhen creating a transaction with a fee above\u00a0`-maxtxfee`\u00a0(default 0.1 LTC), the RPC commands\u00a0`walletcreatefundedpsbt`\u00a0and\u00a0`fundrawtransaction`\u00a0will now fail instead of rounding down the fee. Beware that the\u00a0`feeRate`\u00a0argument is specified in LTC per kilobyte, not litoshi per byte.\r\n\r\nDocumentation\r\n=============\r\n\r\n-   A new short\u00a0[document](https://github.com/litecoin-project/litecoin/blob/master/doc/JSON-RPC-interface.md)\u00a0about the JSON-RPC interface describes cases where the results of an RPC might contain inconsistencies between data sourced from different subsystems, such as wallet state and mempool state. A note is added to the\u00a0[REST interface documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/REST-interface.md)\u00a0indicating that the same rules apply.\r\n-   Further information is added to the\u00a0[JSON-RPC documentation](https://github.com/litecoin-project/litecoin/blob/master/doc/JSON-RPC-interface.md)\u00a0about how to secure this interface.\r\n-   A new\u00a0[document](https://github.com/litecoin-project/litecoin/blob/master/doc/litecoin-conf.md)\u00a0about the\u00a0`litecoin.conf`\u00a0file describes how to use it to configure Litecoin Core.\r\n-   A new document introduces Litecoin Core's BIP174\u00a0[Partially-Signed Litecoin Transactions (PSBT)](https://github.com/litecoin-project/litecoin/blob/master/doc/psbt.md)\u00a0interface, which is used to allow multiple programs to collaboratively work to create, sign, and broadcast new transactions. This is useful for offline (cold storage) wallets, multisig wallets, coinjoin implementations, and many other cases where two or more programs need to interact to generate a complete transaction.\r\n-   The\u00a0[output script descriptor](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md)\u00a0documentation has been updated with information about new features in this still-developing language for describing the output scripts that a wallet or other program wants to receive notifications for, such as which addresses it wants to know received payments. The language is currently used in multiple new and updated RPCs described in these release notes and is expected to be adapted to other RPCs and to the underlying wallet structure.\r\n\r\nBuild system changes\r\n====================\r\n\r\n-   A new\u00a0`--disable-bip70`\u00a0option may be passed to\u00a0`./configure`\u00a0to prevent Litecoin-Qt from being built with support for the BIP70 payment protocol or from linking libssl. As the payment protocol has exposed Litecoin Core to libssl vulnerabilities in the past, builders who don't need BIP70 support are encouraged to use this option to reduce their exposure to future vulnerabilities.\r\n-   The minimum required version of Qt (when building the GUI) has been increased from 5.2 to 5.5.1 (the\u00a0[depends system](https://github.com/litecoin-project/litecoin/blob/master/depends/README.md)\u00a0provides 5.9.7)\r\n\r\nNew RPCs\r\n========\r\n\r\n-   `getnodeaddresses`\u00a0returns peer addresses known to this node. It may be used to find nodes to connect to without using a DNS seeder.\r\n-   `listwalletdir`\u00a0returns a list of wallets in the wallet directory (either the default wallet directory or the directory configured by the\u00a0`-walletdir`\u00a0parameter).\r\n-   `getrpcinfo`\u00a0returns runtime details of the RPC server. At the moment, it returns an array of the currently active commands and how long they've been running.\r\n-   `deriveaddresses`\u00a0returns one or more addresses corresponding to an\u00a0[output descriptor](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md).\r\n-   `getdescriptorinfo`\u00a0accepts a descriptor and returns information about it, including its computed checksum.\r\n-   `joinpsbts`\u00a0merges multiple distinct PSBTs into a single PSBT. The multiple PSBTs must have different inputs. The resulting PSBT will contain every input and output from all of the PSBTs. Any signatures provided in any of the PSBTs will be dropped.\r\n-   `analyzepsbt`\u00a0examines a PSBT and provides information about what the PSBT contains and the next steps that need to be taken in order to complete the transaction. For each input of a PSBT,\u00a0`analyzepsbt`\u00a0provides information about what information is missing for that input, including whether a UTXO needs to be provided, what pubkeys still need to be provided, which scripts need to be provided, and what signatures are still needed. Every input will also list which role is needed to complete that input, and\u00a0`analyzepsbt`\u00a0will also list the next role in general needed to complete the PSBT.\u00a0`analyzepsbt`\u00a0will also provide the estimated fee rate and estimated virtual size of the completed transaction if it has enough information to do so.\r\n-   `utxoupdatepsbt`\u00a0searches the set of Unspent Transaction Outputs (UTXOs) to find the outputs being spent by the partial transaction. PSBTs need to have the UTXOs being spent to be provided because the signing algorithm requires information from the UTXO being spent. For segwit inputs, only the UTXO itself is necessary. For non-segwit outputs, the entire previous transaction is needed so that signers can be sure that they are signing the correct thing. Unfortunately, because the UTXO set only contains UTXOs and not full transactions,\u00a0`utxoupdatepsbt`\u00a0will only add the UTXO for segwit inputs.\r\n\r\nUpdated RPCs\r\n============\r\n\r\nNote: some low-level RPC changes mainly useful for testing are described in the Low-level Changes section below.\r\n\r\n-   `getpeerinfo`\u00a0now returns an additional\u00a0`minfeefilter`\u00a0field set to the peer's BIP133 fee filter. You can use this to detect that you have peers that are willing to accept transactions below the default minimum relay fee.\r\n-   The mempool RPCs, such as\u00a0`getrawmempool`\u00a0with\u00a0`verbose=true`, now return an additional \"bip125-replaceable\" value indicating whether the transaction (or its unconfirmed ancestors) opts-in to asking nodes and miners to replace it with a higher-feerate transaction spending any of the same inputs.\r\n-   `settxfee`\u00a0previously silently ignored attempts to set the fee below the allowed minimums. It now prints a warning. The special value of \"0\" may still be used to request the minimum value.\r\n-   `getaddressinfo`\u00a0now provides an\u00a0`ischange`\u00a0field indicating whether the wallet used the address in a change output.\r\n-   `importmulti`\u00a0has been updated to support P2WSH, P2WPKH, P2SH-P2WPKH, and P2SH-P2WSH. Requests for P2WSH and P2SH-P2WSH accept an additional\u00a0`witnessscript`\u00a0parameter.\r\n-   `importmulti`\u00a0now returns an additional\u00a0`warnings`\u00a0field for each request with an array of strings explaining when fields are being ignored or are inconsistent, if there are any.\r\n-   `getaddressinfo`\u00a0now returns an additional\u00a0`solvable`\u00a0boolean field when Litecoin Core knows enough about the address's scriptPubKey, optional redeemScript, and optional witnessScript in order for the wallet to be able to generate an unsigned input spending funds sent to that address.\r\n-   The\u00a0`getaddressinfo`,\u00a0`listunspent`, and\u00a0`scantxoutset`\u00a0RPCs now return an additional\u00a0`desc`\u00a0field that contains an output descriptor containing all key paths and signing information for the address (except for the private key). The\u00a0`desc`\u00a0field is only returned for\u00a0`getaddressinfo`\u00a0and\u00a0`listunspent`\u00a0when the address is solvable.\r\n-   `importprivkey`\u00a0will preserve previously-set labels for addresses or public keys corresponding to the private key being imported. For example, if you imported a watch-only address with the label \"cold wallet\" in earlier releases of Litecoin Core, subsequently importing the private key would default to resetting the address's label to the default empty-string label (\"\"). In this release, the previous label of \"cold wallet\" will be retained. If you optionally specify any label besides the default when calling\u00a0`importprivkey`, the new label will be applied to the address.\r\n-   See the\u00a0[Mining](https://github.com/litecoin-project/litecoin/blob/v0.18.1rc1/doc/release-notes-litecoin.md#mining)\u00a0section for changes to\u00a0`getblocktemplate`.\r\n-   `getmininginfo`\u00a0now omits\u00a0`currentblockweight`\u00a0and\u00a0`currentblocktx`\u00a0when a block was never assembled via RPC on this node.\r\n-   The\u00a0`getrawtransaction`\u00a0RPC & REST endpoints no longer check the unspent UTXO set for a transaction. The remaining behaviors are as follows: 1. If a blockhash is provided, check the corresponding block. 2. If no blockhash is provided, check the mempool. 3. If no blockhash is provided but txindex is enabled, also check txindex.\r\n-   `unloadwallet`\u00a0is now synchronous, meaning it will not return until the wallet is fully unloaded.\r\n-   `importmulti`\u00a0now supports importing of addresses from descriptors. A \"desc\" parameter can be provided instead of the \"scriptPubKey\" in a request, as well as an optional range for ranged descriptors to specify the start and end of the range to import. Descriptors with key origin information imported through\u00a0`importmulti`\u00a0will have their key origin information stored in the wallet for use with creating PSBTs. More information about descriptors can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/master/doc/descriptors.md).\r\n-   `listunspent`\u00a0has been modified so that it also returns\u00a0`witnessScript`, the witness script in the case of a P2WSH or P2SH-P2WSH output.\r\n-   `createwallet`\u00a0now has an optional\u00a0`blank`\u00a0argument that can be used to create a blank wallet. Blank wallets do not have any keys or HD seed. They cannot be opened in software older than 0.18. Once a blank wallet has a HD seed set (by using\u00a0`sethdseed`) or private keys, scripts, addresses, and other watch only things have been imported, the wallet is no longer blank and can be opened in 0.17.x. Encrypting a blank wallet will also set a HD seed for it.\r\n\r\nDeprecated or removed RPCs\r\n==========================\r\n\r\n-   `signrawtransaction`\u00a0is removed after being deprecated and hidden behind a special configuration option in version 0.17.0.\r\n-   The 'account' API is removed after being deprecated in v0.17. The 'label' API was introduced in v0.17 as a replacement for accounts. See the\u00a0[release notes from v0.17](https://github.com/litecoin-project/litecoin/blob/master/doc/release-notes/release-notes-0.17.0.md#label-and-account-apis-for-wallet)\u00a0for a full description of the changes from the 'account' API to the 'label' API.\r\n-   `addwitnessaddress`\u00a0is removed after being deprecated in version 0.16.0.\r\n-   `generate`\u00a0is deprecated and will be fully removed in a subsequent major version. This RPC is only used for testing, but its implementation reached across multiple subsystems (wallet and mining), so it is being deprecated to simplify the wallet-node interface. Projects that are using\u00a0`generate`\u00a0for testing purposes should transition to using the\u00a0`generatetoaddress`\u00a0RPC, which does not require or use the wallet component. Calling\u00a0`generatetoaddress`\u00a0with an address returned by the\u00a0`getnewaddress`\u00a0RPC gives the same functionality as the old\u00a0`generate`\u00a0RPC. To continue using\u00a0`generate`\u00a0in this version, restart litecoind with the\u00a0`-deprecatedrpc=generate`\u00a0configuration option.\r\n-   Be reminded that parts of the\u00a0`validateaddress`\u00a0command have been deprecated and moved to\u00a0`getaddressinfo`. The following deprecated fields have moved to\u00a0`getaddressinfo`:\u00a0`ismine`,\u00a0`iswatchonly`,\u00a0`script`,\u00a0`hex`,\u00a0`pubkeys`,\u00a0`sigsrequired`,\u00a0`pubkey`,\u00a0`embedded`,\u00a0`iscompressed`,\u00a0`label`,\u00a0`timestamp`,\u00a0`hdkeypath`,\u00a0`hdmasterkeyid`.\r\n-   The\u00a0`addresses`\u00a0field has been removed from the\u00a0`validateaddress`\u00a0and\u00a0`getaddressinfo`\u00a0RPC methods. This field was confusing since it referred to public keys using their P2PKH address. Clients should use the\u00a0`embedded.address`\u00a0field for P2SH or P2WSH wrapped addresses, and\u00a0`pubkeys`\u00a0for inspecting multisig participants.\r\n\r\nREST changes\r\n============\r\n\r\n-   A new\u00a0`/rest/blockhashbyheight/`\u00a0endpoint is added for fetching the hash of the block in the current best blockchain based on its height (how many blocks it is after the Genesis Block).\r\n\r\nGraphical User Interface (GUI)\r\n==============================\r\n\r\n-   A new Window menu is added alongside the existing File, Settings, and Help menus. Several items from the other menus that opened new windows have been moved to this new Window menu.\r\n-   In the Send tab, the checkbox for \"pay only the required fee\" has been removed. Instead, the user can simply decrease the value in the Custom Feerate field all the way down to the node's configured minimum relay fee.\r\n-   In the Overview tab, the watch-only balance will be the only balance shown if the wallet was created using the\u00a0`createwallet`\u00a0RPC and the\u00a0`disable_private_keys`\u00a0parameter was set to true.\r\n-   The launch-on-startup option is no longer available on macOS if compiled with macosx min version greater than 10.11 (use CXXFLAGS=\"-mmacosx-version-min=10.11\" CFLAGS=\"-mmacosx-version-min=10.11\" for setting the deployment sdk version)\r\n\r\nTools\r\n=====\r\n\r\n-   A new\u00a0`litecoin-wallet`\u00a0tool is now distributed alongside Litecoin Core's other executables. Without needing to use any RPCs, this tool can currently create a new wallet file or display some basic information about an existing wallet, such as whether the wallet is encrypted, whether it uses an HD seed, how many transactions it contains, and how many address book entries it has.\r\n\r\nPlanned changes\r\n===============\r\n\r\nThis section describes planned changes to Litecoin Core that may affect other Litecoin software and services.\r\n\r\n-   Since version 0.16.0, Litecoin Core's built-in wallet has defaulted to generating P2SH-wrapped segwit addresses when users want to receive payments. These addresses are backwards compatible with all widely-used software. Starting with Litecoin Core 0.20, Litecoin Core will default to native segwit addresses (bech32) that provide additional fee savings and other benefits. Currently, many wallets and services already support sending to bech32 addresses, and if the Litecoin Core project sees enough additional adoption, it will instead default to bech32 receiving addresses in Litecoin Core 0.20. P2SH-wrapped segwit addresses will continue to be provided if the user requests them in the GUI or by RPC, and anyone who doesn't want the update will be able to configure their default address type. (Similarly, pioneering users who want to change their default now may set the\u00a0`addresstype=bech32`\u00a0configuration option in any Litecoin Core release from 0.16.0 up.)\r\n\r\nDeprecated P2P messages\r\n=======================\r\n\r\n-   BIP 61 reject messages are now deprecated. Reject messages have no use case on the P2P network and are only logged for debugging by most network nodes. Furthermore, they increase bandwidth and can be harmful for privacy and security. It has been possible to disable BIP 61 messages since v0.17 with the\u00a0`-enablebip61=0`\u00a0option. BIP 61 messages will be disabled by default in a future version, before being removed entirely.\r\n\r\nLow-level changes\r\n=================\r\n\r\nThis section describes RPC changes mainly useful for testing, mostly not relevant in production. The changes are mentioned for completeness.\r\n\r\nRPC\r\n===\r\n\r\n-   The\u00a0`submitblock`\u00a0RPC previously returned the reason a rejected block was invalid the first time it processed that block, but returned a generic \"duplicate\" rejection message on subsequent occasions it processed the same block. It now always returns the fundamental reason for rejecting an invalid block and only returns \"duplicate\" for valid blocks it has already accepted.\r\n-   A new\u00a0`submitheader`\u00a0RPC allows submitting block headers independently from their block. This is likely only useful for testing.\r\n-   The\u00a0`signrawtransactionwithkey`\u00a0and\u00a0`signrawtransactionwithwallet`\u00a0RPCs have been modified so that they also optionally accept a\u00a0`witnessScript`, the witness script in the case of a P2WSH or P2SH-P2WSH output. This is compatible with the change to\u00a0`listunspent`.\r\n-   For the\u00a0`walletprocesspsbt`\u00a0and\u00a0`walletcreatefundedpsbt`\u00a0RPCs, if the\u00a0`bip32derivs`\u00a0parameter is set to true but the key metadata for a public key has not been updated yet, then that key will have a derivation path as if it were just an independent key (i.e. no derivation path and its master fingerprint is itself).\r\n\r\nConfiguration\r\n=============\r\n\r\n-   The\u00a0`-usehd`\u00a0configuration option was removed in version 0.16. From that version onwards, all new wallets created are hierarchical deterministic wallets. This release makes specifying\u00a0`-usehd`\u00a0an invalid configuration option.\r\n\r\nNetwork\r\n=======\r\n\r\n-   This release allows peers that your node automatically disconnected for misbehavior (e.g. sending invalid data) to reconnect to your node if you have unused incoming connection slots. If your slots fill up, a misbehaving node will be disconnected to make room for nodes without a history of problems (unless the misbehaving node helps your node in some other way, such as by connecting to a part of the Internet from which you don't have many other peers). Previously, Litecoin Core banned the IP addresses of misbehaving peers for a period of time (default of 1 day); this was easily circumvented by attackers with multiple IP addresses. If you manually ban a peer, such as by using the\u00a0`setban`\u00a0RPC, all connections from that peer will still be rejected.\r\n\r\nWallet\r\n======\r\n\r\n-   The key metadata will need to be upgraded the first time that the HD seed is available. For unencrypted wallets this will occur on wallet loading. For encrypted wallets this will occur the first time the wallet is unlocked.\r\n-   Newly encrypted wallets will no longer require restarting the software. Instead such wallets will be completely unloaded and reloaded to achieve the same effect.\r\n-   A sub-project of Litecoin Core now provides Hardware Wallet Interaction (HWI) scripts that allow command-line users to use several popular hardware key management devices with Litecoin Core. See their\u00a0[project page](https://github.com/bitcoin-core/HWI#readme)\u00a0for details.\r\n\r\nSecurity\r\n========\r\n\r\n-   This release changes the Random Number Generator (RNG) used from OpenSSL to Litecoin Core's own implementation, although entropy gathered by Litecoin Core is fed out to OpenSSL and then read back in when the program needs strong randomness. This moves Litecoin Core a little closer to no longer needing to depend on OpenSSL, a dependency that has caused security issues in the past. The new implementation gathers entropy from multiple sources, including from hardware supporting the rdseed CPU instruction.\r\n\r\nChanges for particular platforms\r\n================================\r\n\r\n-   On macOS, Litecoin Core now opts out of application CPU throttling (\"app nap\") during initial blockchain download, when catching up from over 100 blocks behind the current chain tip, or when reindexing chain data. This helps prevent these operations from taking an excessively long time because the operating system is attempting to conserve power.\r\n\r\nDownload Binaries\r\n=================\r\n\r\nTo download, please visit the download page\u00a0[here](https://litecoin.org/). Alternatively, you can view the download folder\u00a0[here](https://download.litecoin.org/litecoin-0.18.1/).\r\n\r\nPlease use GPG to verify the integrity of the release binaries. This ensures that the binary you have downloaded has not been tampered with. Linux, MacOS and Win32 cygwin command line GPG instructions are available\u00a0[here](https://download.litecoin.org/README-HOWTO-GPG-VERIFY-TEAM-MEMBERS-KEY.txt). Please also note that we GPG sign the binaries as a convenience to you, the ultimate way to verify the integrity of the builds is to build them yourself using Gitian. Instructions on how to perform these builds, can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/master/doc/gitian-building.md).\r\n\r\nFor this release, the binaries have been signed with key identifier\u00a0[FE3348877809386C\u00a0](https://pgp.mit.edu/pks/lookup?op=get&search=0xFE3348877809386C)(thrasher's key).\r\n\r\nWARNING\r\n=======\r\n\r\nDespite this version being heavily tested, this version may still contain bugs. Always backup your wallet.dat file before upgrading. If you encounter any issues, please let us know by posting to the bug reporting section below.\r\n\r\nSource code & Build instructions\r\n================================\r\n\r\nThe master branch contains the latest commits to the next stable releases of Litecoin Core.\r\n\r\nhttps://github.com/litecoin-project/litecoin/commits/master\r\n\r\nBuild instructions for Linux can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-unix.md).\r\n\r\nBuild instructions for OSX can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-osx.md).\r\n\r\nBuilds instructions for Windows can be found\u00a0[here](https://github.com/litecoin-project/litecoin/blob/v0.18.1/doc/build-windows.md).\r\n\r\nBug Reporting\r\n=============\r\n\r\nSubmit any issues you encounter here and one of the Litecoin developers will assist you.\r\n\r\nhttps://github.com/litecoin-project/litecoin/issues\r\n\r\nMailing Lists\r\n=============\r\n\r\nSign up for announcements only or development discussion.\r\n\r\nhttps://groups.google.com/forum/#!forum/litecoin-announce\r\nhttps://groups.google.com/forum/#!forum/litecoin-dev\r\n\r\nHashes for verification\r\n=======================\r\n\r\nThese are the SHA-256 hashes of the released files:\r\n\r\ne0bdd4aa81502551a0c5abcfaae52c8bbaf4a980548aa6c91053643d81924b51  litecoin-0.18.1-aarch64-linux-gnu.tar.gz59b73bc8f034208295634da56a175d74668b07613cf6484653cb467deafb1d52  litecoin-0.18.1-arm-linux-gnueabihf.tar.gz0a2788d58bd22c3754927e216bf18c64145b9fdc0d709f3f49ba3040b876a066  litecoin-0.18.1-i686-pc-linux-gnu.tar.gz4ce590ecbaecaced7253473bc574a2b70527c9aeb3a3ab33a843ea1c9caf0c86  litecoin-0.18.1-osx64.tar.gzb81d9101c6ecb38b7699cf3d05ab57df7922f40f23c8a3377750c335d7102266  litecoin-0.18.1-osx.dmge5585eaff887b9d3de9f14230db0375b858e5cccc571bdb909dfc337d5bd357c  litecoin-0.18.1-riscv64-linux-gnu.tar.gz6dfa71ccf059463f0a304f85ff1ca8b88039d63e93269d6f056ab24915be936d  litecoin-0.18.1.tar.gz778eac92953d82a3b2e0cdc925e7da9103edd0d9a9ffa151c3c7cc79b9814091  litecoin-0.18.1-win32-setup.exe39d02e463893c970f92ed5ffcb603a1a7b2e2dacdaea306e8526414af841d247  litecoin-0.18.1-win32.zipbd38a1d5d4ac1ca4246f9534032a369b0f3cd38fb2aa82c66010642fa72e65f7  litecoin-0.18.1-win64-setup.exe9ff1f552f8ed3f058a56332defa7c61cfb345848428d7b419182096eca2ac99a  litecoin-0.18.1-win64.zipca50936299e2c5a66b954c266dcaaeef9e91b2f5307069b9894048acf3eb5751  litecoin-0.18.1-x86_64-linux-gnu.tar.gz\r\n\r\nCredits\r\n=======\r\n\r\nThanks to everyone who directly contributed to this release:\r\n\r\n-   [The Bitcoin Core Developers](https://github.com/bitcoin/bitcoin/tree/master/doc/release-notes)\r\n-   Adrian Gallagher\r\n-   aunyks\r\n-   coblee\r\n-   cryptonexii\r\n-   EP1JUNE\r\n-   gabrieldov\r\n-   jmutkawoa\r\n-   Loshan\r\n-   Martin Smith\r\n-   NeMO84\r\n-   OlegKozhemiakin\r\n-   ppm0\r\n-   romanornr\r\n-   shaolinfry\r\n-   spl0i7\r\n-   stedwms\r\n-   ultragtx\r\n-   VKoskiv\r\n-   voidmain\r\n-   wbsmolen\r\n-   xinxi", "created_at": "2020-05-29T01:38:38Z", "project": "Litecoin (LTC)", "currency": "ltc", "alias": "litecoin", "repo": "litecoin-project/litecoin", "type": "utxo", "hosting": "github", "explorer": "https://chainz.cryptoid.info/ltc", "doc": "https://github.com/uphold/docker-litecoin-core", "api": "https://developer.bitcoin.org/reference/rpc/index.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/boss0406/cds-node", "repo_url": "https://github.com/boss0406/cds-node", "body": "", "created_at": "2020-05-18T08:00:00Z", "project": "Commercial Data Storage(CDS)", "currency": "cds", "alias": "cds", "repo": "boss0406/cds-node", "type": "fork eth", "hosting": "github", "explorer": "http://47.75.96.91", "doc": "https://github.com/boss0406/cds-node", "api": "https://openethereum.github.io/wiki/JSONRPC-eth-module.html", "add_time": "2020-05-18T08:00:00Z"}, {"name": "Release v2.0.5wax01", "tag_name": "v2.0.5wax01", "html_url": "https://github.com/worldwide-asset-exchange/wax-blockchain/releases/tag/v2.0.5wax01", "repo_url": "https://github.com/worldwide-asset-exchange/wax-blockchain", "body": "EOSIO 2.0.5 upgrade", "created_at": "2020-04-22T21:37:48Z", "project": "WAX (WAX)", "currency": "wax", "alias": "wax", "repo": "worldwide-asset-exchange/wax-blockchain", "type": "eos", "hosting": "github", "explorer": "https://wax.bloks.io", "doc": "https://waxsweden.org/apt-get-wax", "api": "https://developers.eos.io/eosio-nodeos/reference", "add_time": "2020-02-26T16:00:00Z"}, {"name": "v3.0.0", "tag_name": "v3.0.0", "html_url": "https://github.com/nebulasio/go-nebulas/releases/tag/v3.0.0", "repo_url": "https://github.com/nebulasio/go-nebulas", "body": "# Introduction\r\nIn go-nebulas v3.0.0 release, we release ***Nebulas Voyager*** version.\r\n\r\n# Change details\r\n## New features\r\nVoyager\u2019s core upgrade is the Proof of Devotion (PoD) consensus mechanism. The PoD mechanism is built on the basis of the contribution size from the community and is a novel method for decentralized collaboration.\r\n\r\nThe PoD mechanism comprises two components:\r\n\r\n* ***Consensus mechanism***: PoD delivers a fully decentralized blockchain relying on community managed nodes for mainnet operation, security and stability.\r\n* ***Governance mechanism***: The consensus nodes which produce the most blocks will be chosen as governance nodes and will decide if community proposals should become projects, funding and more. All governance votes will utilize on-chain voting.\r\n\r\n## Others\r\n* Adjustment of the event contract address record generated within smart contracts which modifies the binary hex of the smart contract address in topic.\r\n* Security upgrade of the mainnet pertaining to modifications of the blacklist management via smart contract.\r\n", "created_at": "2020-03-29T13:15:39Z", "project": "Nebulas (NAS)", "currency": "nas", "alias": "nebulas", "repo": "nebulasio/go-nebulas", "type": "nebulas", "hosting": "github", "explorer": "https://explorer.nebulas.io", "doc": "https://github.com/nebulasio/go-nebulas#building-from-docker", "api": "https://wiki.nebulas.io/en/latest/go-nebulas/tutorials/05-interacting-with-nebulas-by-rpc-api.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v1.1.2.2_test", "html_url": "https://github.com/Cocos-BCX/cocos-mainnet/releases/tag/v1.1.2.2_test", "repo_url": "https://github.com/Cocos-BCX/cocos-mainnet", "body": "bug fixes\uff1a\r\nfix bug of call contract fee share operation.   \r\nadd functions:\r\n1.multiplatform compile support.\r\n2.add quit command in cli_wallet.\r\n3.add test modules.", "created_at": "2020-03-05T10:15:44Z", "project": "Cocos-BCX (COCOS)", "currency": "cocos", "alias": "cocos", "repo": "Cocos-BCX/cocos-mainnet", "type": "cocos", "hosting": "github", "explorer": "https://www.cocosabc.com", "doc": "https://cocosbcx.readthedocs.io/zh_CN/latest/mainnet/node.html", "api": "https://cocosbcx.readthedocs.io/projects/devcocosbcx/zh_CN/latest/mainnet/API.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Beta3.0.3", "tag_name": "Beta3.0.3", "html_url": "https://github.com/HcashOrg/hcOMNI/releases/tag/Beta3.0.3", "repo_url": "https://github.com/HcashOrg/hcOMNI", "body": "", "created_at": "2020-02-17T04:49:18Z", "project": "hcOMNI (hcOMNI)", "currency": "hcomni", "alias": "hcomni", "repo": "HcashOrg/hcOMNI", "type": "hc", "hosting": "github", "explorer": "https://hcomni-explorer.h.cash", "doc": "https://github.com/HcashOrg/hcOMNI/blob/master/README.md", "api": "https://github.com/OmniLayer/omnicore/blob/develop/src/omnicore/doc/rpc-api.md#json-rpc-api", "add_time": "2020-03-27T00:00:00Z"}, {"name": "Mainnet v1.1", "tag_name": "v1.1", "html_url": "https://github.com/stegos/stegos/releases/tag/v1.1", "repo_url": "https://github.com/stegos/stegos", "body": "This is a hotfix release for [Mainnet v1.0](https://github.com/stegos/stegos/releases/tag/v1.0). \r\n**Upgrading to Hotfix 1 is highly recommended.**\r\n\r\n### Changes since [Mainnet v1.0](https://github.com/stegos/stegos/releases/tag/v1.0):\r\n\r\n- Added `stake all` command, for staking all available payment utxos.\r\n- Implemented resending of restake transacitons, that increase node resilience.\r\n- Improved logs, remove downgraded technical errors to info.\r\n- Added `show validators` command to show current active validators group.\r\n- Fix panic in snowball.\r\n- Add `accounts_info` as an alias for `list_accounts`\r\n- Implemented API call to get list of connected nodes.\r\n- Make payment always use fixed fee for two outputs.\r\n- Refactored transaction tracking.\r\n- Clarifies error messages.\r\n- Updated AES crate, and fixed a bug that cause a panic on system that support AES-NI instruction set, but didn't support AVX2.\r\n- Fixed panic on unseal created account at single epoch.\r\n- Removed virtual public addresses from CLI.\r\n\r\n### Getting Started\r\n\r\nSee [https://docs.stegos.com](https://docs.stegos.com)\r\n\r\n### Feedback\r\n\r\nPlease join us on [Telegram Chat](https://t.me/stegos4privacy) to let us know your thoughts. Subscribe to the official [Telegram Channel](https://t.me/stegos4privacy_official) for the latest news.\r\n\r\n", "created_at": "2019-12-25T11:37:58Z", "project": "Stegos (STG)", "currency": "stg", "alias": "stegos", "repo": "stegos/stegos", "type": "utxo", "hosting": "github", "explorer": "http://explorer.stegos.com/mainnet", "doc": "https://github.com/stegos/stegos/wiki/Building-from-Source", "api": "https://github.com/stegos/stegos/wiki/WebSocket-API", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/FIBOS-Community/fibos-nodes", "repo_url": "https://github.com/FIBOS-Community/fibos-nodes", "body": "", "created_at": "2019-12-18T15:00:00Z", "project": "FIBOS (FO)", "currency": "fo", "alias": "fibos", "repo": "FIBOS-Community/fibos-nodes", "type": "eos", "hosting": "github", "explorer": "https://fibscan.io", "doc": "https://dev.fo/zh-cn/guide/installation.html", "api": "https://dev.fo/zh-cn/api/rpc/index.html", "add_time": "2019-12-18T15:00:00Z"}, {"name": "", "tag_name": "v0.10.0", "html_url": "https://api.github.com/repos/mdukey/mdukey/commits/498f89525d8521cb241eca38646a5bf1b81b96be", "repo_url": "https://github.com/mdukey/mdukey", "body": "update doc", "created_at": "2019-12-09T14:03:27Z", "project": "MduKey (MDU)", "currency": "mdu", "alias": "mdukey", "repo": "mdukey/mdukey", "type": "cosmos", "hosting": "github", "explorer": "https://scan.mdukey.org", "doc": "https://github.com/mdukey/mdukey/tree/master/doc/cn", "api": "https://cosmos.network/rpc/master", "add_time": "2019-12-23T04:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/coinexchain/dex-manual", "repo_url": "https://github.com/coinexchain/dex-manual", "body": "", "created_at": "2019-12-01T00:00:00Z", "project": "CoinEx Token (CET)", "currency": "cet", "alias": "coinex", "repo": "coinexchain/dex-manual", "type": "cosmos", "hosting": "github", "explorer": "https://explorer.coinex.net", "doc": "https://github.com/coinexchain/devops/blob/master/README_zh.md", "api": "https://dex-api.coinex.org/swagger", "add_time": "2019-12-01T00:00:00Z"}, {"name": "Not Found", "tag_name": "", "html_url": "https://github.com/rolong/tesk", "repo_url": "https://github.com/rolong/tesk", "body": "", "created_at": "2019-12-01T00:00:00Z", "project": "SeekChain (SEEK)", "currency": "seek", "alias": "seekchain", "repo": "rolong/tesk", "type": "fork eth", "hosting": "github", "explorer": "http://explorer.seekchain.org", "doc": "https://note.youdao.com/ynoteshare1/index.html?id=81c78ebe08299651d7bd171dbfbe65ba&type=note", "api": "https://openethereum.github.io/wiki/JSONRPC-eth-module.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "", "tag_name": "v0.19.0.1", "html_url": "https://api.github.com/repos/Darknet-Pollux/bitcoin/commits/1bc9988993ee84bc814e5a7f33cc90f670a19f6a", "repo_url": "https://github.com/Darknet-Gemini/bitcoin", "body": "doc: Generate manpages for 0.19.0.1\n\nTree-SHA512: d53a2bfa5bc589e7130cf8cd1627083ad7c72a197cbd80754c9dcf78e3775021fbd6426c5762f5f3e52e4b23ed06387c0be224914e0f98d14f3f7e51ee66c809", "created_at": "2019-11-18T09:46:57Z", "project": "BIW (BIW)", "currency": "biw", "alias": "biw", "repo": "Darknet-Gemini/bitcoin", "type": "utxo", "hosting": "github", "explorer": "https://explorer.bitw.im/blocks", "doc": "https://github.com/Darknet-Gemini/bitcoin", "api": "https://github.com/Darknet-Gemini/bitcoin/blob/master/doc/JSON-RPC-interface.md", "add_time": "2020-10-20T09:00:00Z"}, {"name": "latest HX release(mainnet) ", "tag_name": "v1.3.1", "html_url": "https://github.com/HcashOrg/HyperExchange/releases/tag/v1.3.1", "repo_url": "https://github.com/HcashOrg/HyperExchange", "body": "1. fix crash existing in citizen node\r\n2. reduce the cost of disk for hx node\r\n3. fix display of my accounts\r\n\r\npls add --replay-blockchain when first launch hx_node", "created_at": "2019-09-27T02:41:36Z", "project": "HyperExchange (HX)", "currency": "hx", "alias": "hyperexchange", "repo": "HcashOrg/HyperExchange", "type": "hc", "hosting": "github", "explorer": "http://explorer.hx.cash", "doc": "http://docs.hx.cash/zh/wallets/hx-docker-deploy.html", "api": "http://docs.hx.cash/zh/dev/rpc-reference/rpc-introduce.html", "add_time": "2019-12-01T00:00:00Z"}, {"name": "v1.5", "tag_name": "v1.5", "html_url": "https://github.com/marscoin/marscoin/releases/tag/v1.5", "repo_url": "https://github.com/marscoin/marscoin", "body": "Marscoin release 1.5", "created_at": "2019-09-18T22:27:21Z", "project": "Marscoin (MARS)", "currency": "mars", "alias": "marscoin", "repo": "marscoin/marscoin", "type": "utxo", "hosting": "github", "explorer": "http://explore.marscoin.org", "doc": "https://github.com/marscoin/marscoin/tree/master-1.5/doc", "api": "https://github.com/marscoin/marscoin/blob/master-1.5/doc/REST-interface.md", "add_time": "2021-02-18T08:00:00Z"}, {"name": "", "tag_name": "latest", "html_url": "https://github.com/RubyChainNet/ruby/commit/cf52e767dea215f06e71be19edab4be397a8bf0a", "repo_url": "https://github.com/RubyChainNet/ruby", "body": "Update README.md", "created_at": "2019-02-22T02:46:11Z", "project": "RubyChain (RUB)", "currency": "ruby", "alias": "rub", "repo": "RubyChainNet/ruby", "type": "ruby", "hosting": "github", "explorer": "https://ne.rubychain.org/#/index?language=zh", "doc": "https://github.com/RubyChainNet/ruby/blob/1b50d574260a5d41624b12015c7fe24e5703cd8b/README.md", "api": "https://rubychain.org/Develop-doc-v1.0-cn.html#/?id=%e5%8f%af%e7%94%a8api%e6%8c%87%e4%bb%a4", "add_time": "2020-02-26T16:00:00Z"}, {"name": "", "tag_name": "review-LA1", "html_url": "https://github.com/tezos/tezos/commit/11ad8fa8ea068ae9ebee23af4e79bf49ac3f7653", "repo_url": "https://github.com/tezos/tezos", "body": "Fix rebase conflict.\n\noups...", "created_at": "2018-04-17T13:24:23Z", "project": "Tezos (XTZ)", "currency": "xtz", "alias": "xtz", "repo": "tezos/tezos", "type": "tezos", "hosting": "github", "explorer": "https://tzstats.com", "doc": "https://tezos.gitlab.io/introduction/howtoget.html", "api": "https://tezos.gitlab.io/developer/rpc.html#rpc", "snapshot": "https://mainnet.xtz-shots.io/", "add_time": "2021-02-01T08:00:00Z"}]}